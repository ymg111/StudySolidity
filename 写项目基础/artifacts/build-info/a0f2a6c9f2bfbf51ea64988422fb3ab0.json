{
	"id": "a0f2a6c9f2bfbf51ea64988422fb3ab0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"写项目基础/写uni算法矿池.sol": {
				"content": " // SPDX-License-Identifier: MIT  \r\npragma solidity ^0.8.7;  \r\n \r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint);\r\n\r\n    function balanceOf(address account) external view returns (uint);\r\n\r\n    function transfer(address recipient, uint amout) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint amout) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint amout) external returns (bool);\r\n\r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n\r\n}\r\n\r\ncontract StakeContract {\r\n    // uint public stakeTime;\r\n    uint public ratio;\r\n    address public staketoken;\r\n    address public totoken;\r\n    uint public stakeSupple;\r\n    address public owner;\r\n    // 总时间的一个代币奖励数量\r\n    uint public max_a_token_reward;\r\n    // 项目上次更新时间\r\n    uint public max_last_stake_time;\r\n    // 项目上次一个代币奖励数量\r\n    uint public max_last_a_token_reward;\r\n    // 设置时间戳\r\n    uint public set_block_time;\r\n\r\n    \r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n    event transfer(address indexed to, uint amout);\r\n\r\n    struct User {\r\n        uint stakeNumber;\r\n        uint last_Stake_Time;\r\n        uint last_totoken_ratio;\r\n        // 用户每个代币奖励数量  \r\n        uint user_a_token_reward;\r\n    }\r\n\r\n    mapping(address => User) public User_Map;\r\n\r\n    constructor (address _staketoken, address _totoken) {\r\n        owner = msg.sender;\r\n        require(_staketoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_totoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_staketoken == _totoken,\"NEED agreement\");\r\n        staketoken = _staketoken;\r\n        totoken = _totoken;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner , \"not owner\");\r\n        _;\r\n    }\r\n\r\n    // function getStakeTime() public view returns (uint) {\r\n    //     return stakeTime;\r\n    // }\r\n\r\n    function setRatio(uint _ratio) external onlyOwner {    \r\n        ratio = _ratio;     \r\n    }\r\n\r\n    function stake(uint _amount) public returns (bool) {\r\n        IERC20(staketoken).transferFrom(msg.sender, address(this), _amount); \r\n        emit Trasfer(msg.sender, address(this), _amount);\r\n        // 将总时间的一个代币奖励数量赋予项目上次一个代币奖励数量\r\n        max_last_a_token_reward = max_a_token_reward;\r\n        // 定义一秒产出数量变量\r\n        uint proportion;\r\n        if (stakeSupple != 0) {\r\n            // 一秒一个代币产出数量 = 每秒产出总数量/质押总数量\r\n            proportion = ratio * 10**40 / stakeSupple ;           \r\n        }\r\n        // 当前时间一个代币产出数量 = （当前时间 - 上次质押时间）* 一秒产出数量\r\n        uint current_max_a_token_reward = (set_block_time - max_last_stake_time)* proportion;\r\n        // 总时间的一个代币奖励数量 = 总时间的一个代币奖励数量+当前时间一个代币产出数量\r\n        max_a_token_reward = max_a_token_reward + current_max_a_token_reward;\r\n        // 更新累计奖励 = 未领取累计代币奖励数量 + （总时间的一个代币奖励数量 - 项目上次一个代币奖励数量）*用户质押数量\r\n        User_Map[msg.sender].last_totoken_ratio =  User_Map[msg.sender].last_totoken_ratio + ((max_a_token_reward - max_last_a_token_reward)* User_Map[msg.sender].stakeNumber) / 10**40;\r\n        // 更新用户质押数量\r\n        User_Map[msg.sender].stakeNumber += _amount;\r\n        // 更新总质押数量\r\n        stakeSupple += _amount;\r\n        // 更新项目上次一个代币奖励数量为当前时间\r\n        max_last_stake_time = set_block_time;\r\n        // 更新用户上次奖励数量为总时间的一个代币奖励数量\r\n        User_Map[msg.sender].user_a_token_reward = max_a_token_reward;\r\n        return true;    \r\n    }  \r\n\r\n    function harvest() public {\r\n        // 用户可领取数量 = 用户累计未领取数量+（总时间的一个代币奖励数量 - 用户上次一个代币奖励数量）\r\n        uint harvest_total_number = User_Map[msg.sender].last_totoken_ratio + (max_a_token_reward - User_Map[msg.sender].user_a_token_reward)* User_Map[msg.sender].stakeNumber;\r\n        IERC20(totoken).transfer(msg.sender, harvest_total_number);\r\n        emit transfer(msg.sender, harvest_total_number);\r\n        User_Map[msg.sender].last_totoken_ratio = 0;\r\n        User_Map[msg.sender].user_a_token_reward = max_a_token_reward;\r\n        \r\n    }\r\n\r\n    function withdrawharvest() public {\r\n        uint harvest_total_number = User_Map[msg.sender].last_totoken_ratio + (max_a_token_reward - User_Map[msg.sender].user_a_token_reward)* User_Map[msg.sender].stakeNumber;\r\n        IERC20(totoken).transfer(msg.sender, harvest_total_number);\r\n        emit transfer(msg.sender, harvest_total_number);\r\n        User_Map[msg.sender].last_totoken_ratio = 0;\r\n        User_Map[msg.sender].user_a_token_reward = max_a_token_reward;\r\n\r\n        IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber); \r\n        emit transfer(msg.sender, User_Map[msg.sender].stakeNumber);\r\n        stakeSupple -= User_Map[msg.sender].stakeNumber;\r\n        User_Map[msg.sender].stakeNumber = 0;\r\n\r\n    }\r\n\r\n    function setblocktime(uint _blocktime) public {\r\n        set_block_time = _blocktime;\r\n    }\r\n}\r\n\r\n//  每秒奖励      \r\n// 200000000000000000000\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"写项目基础/写uni算法矿池.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5199\\u9879\\u76ee\\u57fa\\u7840/\\u5199uni\\u7b97\\u6cd5\\u77ff\\u6c60.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5199\\u9879\\u76ee\\u57fa\\u7840/\\u5199uni\\u7b97\\u6cd5\\u77ff\\u6c60.sol\":{\"keccak256\":\"0xf837038d8e20d9915492d1057adbd74a4f452437c80b08498a854ade20321f6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db9ef40e082dbc50593f46dbce124488ed92b6fb8b717e712df6aaf87acd5ee7\",\"dweb:/ipfs/QmWgv1fePwYyv1YfDTN6ryCnQrtUtwKijjUZwRGRashhdk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakeContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staketoken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_totoken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "User_Map",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakeNumber",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_Stake_Time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "user_a_token_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "max_a_token_reward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "max_last_a_token_reward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "max_last_stake_time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								}
							],
							"name": "setRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "set_block_time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blocktime",
									"type": "uint256"
								}
							],
							"name": "setblocktime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeSupple",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "staketoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawharvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":730:5664  contract StakeContract {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1698:2036  constructor (address _staketoken, address _totoken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1761:1766  owner */\n  0x04\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1761:1779  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1769:1779  msg.sender */\n  caller\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1761:1779  owner = msg.sender */\n  or\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1798:1823  _staketoken != address(0) */\n  dup3\n  and\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1790:1843  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1790:1843  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x10\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:793   */\n  mstore\n    /* \"#utility.yul\":810:828   */\n  0x64\n  add\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1790:1843  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1862:1884  _totoken != address(0) */\n  dup2\n  and\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1854:1904  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1854:1904  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x10\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:793   */\n  mstore\n    /* \"#utility.yul\":810:828   */\n  0x64\n  add\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1854:1904  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_7\n    /* \"#utility.yul\":494:834   */\n  jump\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1854:1904  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\ntag_9:\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1938:1946  _totoken */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1923:1946  _staketoken == _totoken */\n  and\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1923:1934  _staketoken */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1923:1946  _staketoken == _totoken */\n  and\n  eq\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1915:1964  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1915:1964  require(_staketoken == _totoken,\"NEED agreement\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1023:1044   */\n  mstore\n    /* \"#utility.yul\":1080:1082   */\n  0x0e\n    /* \"#utility.yul\":1060:1078   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1053:1083   */\n  mstore\n  shl(0x92, 0x13915151081859dc99595b595b9d)\n    /* \"#utility.yul\":1099:1117   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1092:1136   */\n  mstore\n    /* \"#utility.yul\":1153:1171   */\n  0x64\n  add\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1915:1964  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_7\n    /* \"#utility.yul\":839:1177   */\n  jump\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1915:1964  require(_staketoken == _totoken,\"NEED agreement\") */\ntag_11:\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1975:1985  staketoken */\n  0x01\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1975:1999  staketoken = _staketoken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2010:2017  totoken */\n  0x02\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2010:2028  totoken = _totoken */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":730:5664  contract StakeContract {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_20:\n    /* \"#utility.yul\":375:415   */\n  tag_21\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_22\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":839:1177   */\ntag_16:\n    /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":730:5664  contract StakeContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":730:5664  contract StakeContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa6643c90\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc5c4a79c\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc5c4a79c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd942727f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdab2997b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf5aa914a\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0xa6643c90\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb10d816e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb2237ba3\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x71ca337d\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x71ca337d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7634f260\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8c93ecff\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x2c46502d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x30d5c8c0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":847:869  address public totoken */\n    tag_3:\n      sload(0x02)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":847:869  address public totoken */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1131:1166  uint public max_last_a_token_reward */\n    tag_4:\n      tag_25\n      sload(0x07)\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":368:393   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":356:358   */\n      0x20\n        /* \"#utility.yul\":341:359   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1131:1166  uint public max_last_a_token_reward */\n      tag_23\n        /* \"#utility.yul\":222:399   */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4195:4816  function harvest() public {... */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":791:808  uint public ratio */\n    tag_6:\n      tag_25\n      sload(0x00)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4824:5561  function withdrawharvest() public {... */\n    tag_7:\n      tag_29\n      tag_35\n      jump\t// in\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1649:1689  mapping(address => User) public User_Map */\n    tag_8:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap1\n      swap2\n      dup5\n      jump\n    tag_36:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":926:951   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":982:984   */\n      0x20\n        /* \"#utility.yul\":967:985   */\n      dup6\n      add\n        /* \"#utility.yul\":960:994   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":1010:1028   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1003:1037   */\n      mstore\n        /* \"#utility.yul\":1068:1070   */\n      0x60\n        /* \"#utility.yul\":1053:1071   */\n      dup3\n      add\n        /* \"#utility.yul\":1046:1080   */\n      mstore\n        /* \"#utility.yul\":913:916   */\n      0x80\n        /* \"#utility.yul\":898:917   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1649:1689  mapping(address => User) public User_Map */\n      tag_23\n        /* \"#utility.yul\":695:1086   */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":906:926  address public owner */\n    tag_9:\n      sload(0x04)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":978:1008  uint public max_a_token_reward */\n    tag_10:\n      tag_25\n      sload(0x05)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2349:4185  function stake(uint _amount) public returns (bool) {... */\n    tag_11:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1441:1455   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1434:1456   */\n      iszero\n        /* \"#utility.yul\":1416:1457   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1404:1406   */\n      0x20\n        /* \"#utility.yul\":1389:1407   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2349:4185  function stake(uint _amount) public returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":1276:1463   */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1197:1223  uint public set_block_time */\n    tag_12:\n      tag_25\n      sload(0x08)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2249:2341  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_13:\n      tag_29\n      tag_58\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5569:5661  function setblocktime(uint _blocktime) public {... */\n    tag_14:\n      tag_29\n      tag_61\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_61:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5626:5640  set_block_time */\n      0x08\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5626:5653  set_block_time = _blocktime */\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5569:5661  function setblocktime(uint _blocktime) public {... */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":876:899  uint public stakeSupple */\n    tag_15:\n      tag_25\n      sload(0x03)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":815:840  address public staketoken */\n    tag_16:\n      sload(0x01)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1048:1079  uint public max_last_stake_time */\n    tag_17:\n      tag_25\n      sload(0x06)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4195:4816  function harvest() public {... */\n    tag_30:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4522:4532  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4378:4403  uint harvest_total_number */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4513:4533  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4513:4521  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4513:4533  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4513:4545  User_Map[msg.sender].stakeNumber */\n      dup1\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4470:4510  User_Map[msg.sender].user_a_token_reward */\n      0x03\n      swap1\n      swap2\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4449:4467  max_a_token_reward */\n      sload(0x05)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4449:4510  max_a_token_reward - User_Map[msg.sender].user_a_token_reward */\n      tag_73\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4470:4510  User_Map[msg.sender].user_a_token_reward */\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4449:4510  max_a_token_reward - User_Map[msg.sender].user_a_token_reward */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4448:4545  (max_a_token_reward - User_Map[msg.sender].user_a_token_reward)* User_Map[msg.sender].stakeNumber */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4415:4425  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4406:4426  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4406:4414  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4406:4426  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4406:4445  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4406:4545  User_Map[msg.sender].last_totoken_ratio + (max_a_token_reward - User_Map[msg.sender].user_a_token_reward)* User_Map[msg.sender].stakeNumber */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4563:4570  totoken */\n      sload(0x02)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4556:4614  IERC20(totoken).transfer(msg.sender, harvest_total_number) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4581:4591  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4556:4614  IERC20(totoken).transfer(msg.sender, harvest_total_number) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2210:2261   */\n      mstore\n        /* \"#utility.yul\":2277:2295   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2270:2304   */\n      dup4\n      swap1\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4378:4545  uint harvest_total_number = User_Map[msg.sender].last_totoken_ratio + (max_a_token_reward - User_Map[msg.sender].user_a_token_reward)* User_Map[msg.sender].stakeNumber */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4563:4570  totoken */\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4556:4580  IERC20(totoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2183:2201   */\n      0x44\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4556:4614  IERC20(totoken).transfer(msg.sender, harvest_total_number) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4630:4672  transfer(msg.sender, harvest_total_number) */\n      mload(0x40)\n        /* \"#utility.yul\":368:393   */\n      dup2\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4639:4649  msg.sender */\n      caller\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4630:4672  transfer(msg.sender, harvest_total_number) */\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n      swap1\n        /* \"#utility.yul\":356:358   */\n      0x20\n        /* \"#utility.yul\":341:359   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4630:4672  transfer(msg.sender, harvest_total_number) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4692:4702  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4725:4726  0 */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4683:4703  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4683:4691  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4683:4703  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4683:4722  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4683:4726  User_Map[msg.sender].last_totoken_ratio = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4780:4798  max_a_token_reward */\n      sload(0x05)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4737:4777  User_Map[msg.sender].user_a_token_reward */\n      0x03\n      swap1\n      swap2\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4737:4798  User_Map[msg.sender].user_a_token_reward = max_a_token_reward */\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4195:4816  function harvest() public {... */\n      jump\t// out\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4824:5561  function withdrawharvest() public {... */\n    tag_35:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5013:5023  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4869:4894  uint harvest_total_number */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5004:5024  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5004:5012  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5004:5024  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5004:5036  User_Map[msg.sender].stakeNumber */\n      dup1\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4961:5001  User_Map[msg.sender].user_a_token_reward */\n      0x03\n      swap1\n      swap2\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4940:4958  max_a_token_reward */\n      sload(0x05)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4940:5001  max_a_token_reward - User_Map[msg.sender].user_a_token_reward */\n      tag_87\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4961:5001  User_Map[msg.sender].user_a_token_reward */\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4940:5001  max_a_token_reward - User_Map[msg.sender].user_a_token_reward */\n      tag_74\n      jump\t// in\n    tag_87:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4939:5036  (max_a_token_reward - User_Map[msg.sender].user_a_token_reward)* User_Map[msg.sender].stakeNumber */\n      tag_88\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_88:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4906:4916  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4897:4917  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4897:4905  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4897:4917  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4897:4936  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4897:5036  User_Map[msg.sender].last_totoken_ratio + (max_a_token_reward - User_Map[msg.sender].user_a_token_reward)* User_Map[msg.sender].stakeNumber */\n      tag_89\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_89:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5054:5061  totoken */\n      sload(0x02)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5047:5105  IERC20(totoken).transfer(msg.sender, harvest_total_number) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5072:5082  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5047:5105  IERC20(totoken).transfer(msg.sender, harvest_total_number) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2210:2261   */\n      mstore\n        /* \"#utility.yul\":2277:2295   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2270:2304   */\n      dup4\n      swap1\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4869:5036  uint harvest_total_number = User_Map[msg.sender].last_totoken_ratio + (max_a_token_reward - User_Map[msg.sender].user_a_token_reward)* User_Map[msg.sender].stakeNumber */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5054:5061  totoken */\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5047:5071  IERC20(totoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2183:2201   */\n      0x44\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5047:5105  IERC20(totoken).transfer(msg.sender, harvest_total_number) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_93:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5121:5163  transfer(msg.sender, harvest_total_number) */\n      mload(0x40)\n        /* \"#utility.yul\":368:393   */\n      dup2\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5130:5140  msg.sender */\n      caller\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5121:5163  transfer(msg.sender, harvest_total_number) */\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n      swap1\n        /* \"#utility.yul\":356:358   */\n      0x20\n        /* \"#utility.yul\":341:359   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5121:5163  transfer(msg.sender, harvest_total_number) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5183:5193  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5216:5217  0 */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5174:5194  User_Map[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5174:5182  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5174:5194  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5174:5213  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5174:5217  User_Map[msg.sender].last_totoken_ratio = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5271:5289  max_a_token_reward */\n      sload(0x05)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5228:5268  User_Map[msg.sender].user_a_token_reward */\n      0x03\n      dup4\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5228:5289  User_Map[msg.sender].user_a_token_reward = max_a_token_reward */\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5309:5319  staketoken */\n      sload(0x01)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5342:5374  User_Map[msg.sender].stakeNumber */\n      swap2\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5302:5375  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2210:2261   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2277:2295   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2270:2304   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5309:5319  staketoken */\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5302:5329  IERC20(staketoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2183:2201   */\n      0x44\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5302:5375  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_98:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5401:5411  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5413:5433  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5413:5421  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5413:5433  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5413:5445  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5392:5446  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap2\n      mload\n        /* \"#utility.yul\":368:393   */\n      swap2\n      dup3\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5392:5446  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n      swap2\n        /* \"#utility.yul\":341:359   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5392:5446  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5481:5491  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5472:5492  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5472:5480  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5472:5492  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5472:5504  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5457:5468  stakeSupple */\n      0x03\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5457:5504  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      dup1\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5472:5504  User_Map[msg.sender].stakeNumber */\n      swap2\n      swap3\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5457:5468  stakeSupple */\n      swap1\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5457:5504  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_100\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5472:5504  User_Map[msg.sender].stakeNumber */\n      dup5\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5457:5504  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_74\n      jump\t// in\n    tag_100:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5524:5534  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5550:5551  0 */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5515:5535  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5515:5523  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5515:5535  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5515:5551  User_Map[msg.sender].stakeNumber = 0 */\n      sstore\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4824:5561  function withdrawharvest() public {... */\n      jump\t// out\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2349:4185  function stake(uint _amount) public returns (bool) {... */\n    tag_51:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2418:2428  staketoken */\n      sload(0x01)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2478  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2443:2453  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2478  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2837:2871   */\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2463:2467  this */\n      address\n        /* \"#utility.yul\":2887:2905   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2880:2923   */\n      mstore\n        /* \"#utility.yul\":2939:2957   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2932:2966   */\n      dup4\n      swap1\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2394:2398  bool */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2418:2428  staketoken */\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2442  IERC20(staketoken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2772:2790   */\n      0x64\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2478  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_106:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2495:2538  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":368:393   */\n      dup3\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2523:2527  this */\n      address\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2503:2513  msg.sender */\n      caller\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2495:2538  Trasfer(msg.sender, address(this), _amount) */\n      0x1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c\n      swap1\n        /* \"#utility.yul\":356:358   */\n      0x20\n        /* \"#utility.yul\":341:359   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2495:2538  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2669:2687  max_a_token_reward */\n      sload(0x05)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2643:2666  max_last_a_token_reward */\n      0x07\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2643:2687  max_last_a_token_reward = max_a_token_reward */\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2771:2782  stakeSupple */\n      sload(0x03)\n      0x00\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2771:2787  stakeSupple != 0 */\n      iszero\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2767:2956  if (stakeSupple != 0) {... */\n      tag_108\n      jumpi\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2921:2932  stakeSupple */\n      sload(0x03)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2904:2909  ratio */\n      sload(0x00)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2904:2918  ratio * 10**40 */\n      tag_109\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2912:2918  10**40 */\n      0x1d6329f1c35ca4bfabb9f5610000000000\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2904:2918  ratio * 10**40 */\n      tag_76\n      jump\t// in\n    tag_109:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2904:2932  ratio * 10**40 / stakeSupple */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2891:2932  proportion = ratio * 10**40 / stakeSupple */\n      swap1\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2767:2956  if (stakeSupple != 0) {... */\n    tag_108:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3077:3108  uint current_max_a_token_reward */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3151:3161  proportion */\n      dup2\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3129:3148  max_last_stake_time */\n      sload(0x06)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3112:3126  set_block_time */\n      sload(0x08)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3112:3148  set_block_time - max_last_stake_time */\n      tag_112\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_112:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3111:3161  (set_block_time - max_last_stake_time)* proportion */\n      tag_113\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_113:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3077:3161  uint current_max_a_token_reward = (set_block_time - max_last_stake_time)* proportion */\n      swap1\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3339:3365  current_max_a_token_reward */\n      dup1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3318:3336  max_a_token_reward */\n      sload(0x05)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3318:3365  max_a_token_reward + current_max_a_token_reward */\n      tag_114\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_114:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3297:3315  max_a_token_reward */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3297:3365  max_a_token_reward = max_a_token_reward + current_max_a_token_reward */\n      dup2\n      swap1\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3689:3699  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3680:3700  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3680:3688  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3680:3700  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3680:3712  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3654:3677  max_last_a_token_reward */\n      sload(0x07)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3716:3722  10**40 */\n      0x1d6329f1c35ca4bfabb9f5610000000000\n      swap3\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3633:3677  max_a_token_reward - max_last_a_token_reward */\n      tag_115\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3654:3677  max_last_a_token_reward */\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3633:3677  max_a_token_reward - max_last_a_token_reward */\n      tag_74\n      jump\t// in\n    tag_115:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3632:3712  (max_a_token_reward - max_last_a_token_reward)* User_Map[msg.sender].stakeNumber */\n      tag_116\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_116:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3631:3722  ((max_a_token_reward - max_last_a_token_reward)* User_Map[msg.sender].stakeNumber) / 10**40 */\n      tag_117\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_117:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3598:3608  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3589:3609  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3589:3597  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3589:3609  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3589:3628  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3589:3722  User_Map[msg.sender].last_totoken_ratio + ((max_a_token_reward - max_last_a_token_reward)* User_Map[msg.sender].stakeNumber) / 10**40 */\n      tag_118\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_118:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3555:3565  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3546:3566  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3546:3554  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3546:3566  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3546:3585  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3546:3722  User_Map[msg.sender].last_totoken_ratio =  User_Map[msg.sender].last_totoken_ratio + ((max_a_token_reward - max_last_a_token_reward)* User_Map[msg.sender].stakeNumber) / 10**40 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3770:3813  User_Map[msg.sender].stakeNumber += _amount */\n      dup2\n      sload\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3806:3813  _amount */\n      dup7\n      swap3\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3546:3566  User_Map[msg.sender] */\n      swap2\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3770:3813  User_Map[msg.sender].stakeNumber += _amount */\n      tag_119\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3806:3813  _amount */\n      dup5\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3770:3813  User_Map[msg.sender].stakeNumber += _amount */\n      tag_78\n      jump\t// in\n    tag_119:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3873:3880  _amount */\n      dup4\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3858:3869  stakeSupple */\n      0x03\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3858:3880  stakeSupple += _amount */\n      dup3\n      dup3\n      sload\n      tag_120\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_120:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3983:3997  set_block_time */\n      sload(0x08)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3961:3980  max_last_stake_time */\n      0x06\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3961:3997  max_last_stake_time = set_block_time */\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4133:4151  max_a_token_reward */\n      sload(0x05)\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4099:4109  msg.sender */\n      caller\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4110  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4098  User_Map */\n      0x09\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4110  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4130  User_Map[msg.sender].user_a_token_reward */\n      0x03\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4151  User_Map[msg.sender].user_a_token_reward = max_a_token_reward */\n      sstore\n      pop\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4169:4173  true */\n      0x01\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2349:4185  function stake(uint _amount) public returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2249:2341  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_59:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2098:2103  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2084:2094  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2084:2103  msg.sender == owner */\n      eq\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2076:2118  require(msg.sender == owner , \"not owner\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2076:2118  require(msg.sender == owner , \"not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3383:3404   */\n      mstore\n        /* \"#utility.yul\":3440:3441   */\n      0x09\n        /* \"#utility.yul\":3420:3438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3413:3442   */\n      mstore\n      shl(0xb9, 0x3737ba1037bbb732b9)\n        /* \"#utility.yul\":3458:3476   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3451:3490   */\n      mstore\n        /* \"#utility.yul\":3507:3525   */\n      0x64\n      add\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2076:2118  require(msg.sender == owner , \"not owner\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2314:2319  ratio */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2314:2328  ratio = _ratio */\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe5\\x9f\\xba\\xe7\\xa1\\x80/\\xe5\\x86\\x99uni\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2249:2341  function setRatio(uint _ratio) external onlyOwner {    ... */\n      jump\t// out\n        /* \"#utility.yul\":404:690   */\n    tag_38:\n        /* \"#utility.yul\":463:469   */\n      0x00\n        /* \"#utility.yul\":516:518   */\n      0x20\n        /* \"#utility.yul\":504:513   */\n      dup3\n        /* \"#utility.yul\":495:502   */\n      dup5\n        /* \"#utility.yul\":491:514   */\n      sub\n        /* \"#utility.yul\":487:519   */\n      slt\n        /* \"#utility.yul\":484:536   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":532:533   */\n      0x00\n        /* \"#utility.yul\":529:530   */\n      dup1\n        /* \"#utility.yul\":522:534   */\n      revert\n        /* \"#utility.yul\":484:536   */\n    tag_132:\n        /* \"#utility.yul\":558:581   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":610:641   */\n      dup2\n      and\n        /* \"#utility.yul\":600:642   */\n      dup2\n      eq\n        /* \"#utility.yul\":590:660   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":656:657   */\n      0x00\n        /* \"#utility.yul\":653:654   */\n      dup1\n        /* \"#utility.yul\":646:658   */\n      revert\n        /* \"#utility.yul\":590:660   */\n    tag_133:\n        /* \"#utility.yul\":679:684   */\n      swap4\n        /* \"#utility.yul\":404:690   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1271   */\n    tag_50:\n        /* \"#utility.yul\":1150:1156   */\n      0x00\n        /* \"#utility.yul\":1203:1205   */\n      0x20\n        /* \"#utility.yul\":1191:1200   */\n      dup3\n        /* \"#utility.yul\":1182:1189   */\n      dup5\n        /* \"#utility.yul\":1178:1201   */\n      sub\n        /* \"#utility.yul\":1174:1206   */\n      slt\n        /* \"#utility.yul\":1171:1223   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1219:1220   */\n      0x00\n        /* \"#utility.yul\":1216:1217   */\n      dup1\n        /* \"#utility.yul\":1209:1221   */\n      revert\n        /* \"#utility.yul\":1171:1223   */\n    tag_136:\n      pop\n        /* \"#utility.yul\":1242:1265   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1091:1271   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1468:1595   */\n    tag_127:\n        /* \"#utility.yul\":1529:1539   */\n      0x4e487b71\n        /* \"#utility.yul\":1524:1527   */\n      0xe0\n        /* \"#utility.yul\":1520:1540   */\n      shl\n        /* \"#utility.yul\":1517:1518   */\n      0x00\n        /* \"#utility.yul\":1510:1541   */\n      mstore\n        /* \"#utility.yul\":1560:1564   */\n      0x11\n        /* \"#utility.yul\":1557:1558   */\n      0x04\n        /* \"#utility.yul\":1550:1565   */\n      mstore\n        /* \"#utility.yul\":1584:1588   */\n      0x24\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1574:1589   */\n      revert\n        /* \"#utility.yul\":1600:1725   */\n    tag_74:\n        /* \"#utility.yul\":1640:1644   */\n      0x00\n        /* \"#utility.yul\":1668:1669   */\n      dup3\n        /* \"#utility.yul\":1665:1666   */\n      dup3\n        /* \"#utility.yul\":1662:1670   */\n      lt\n        /* \"#utility.yul\":1659:1693   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":1673:1691   */\n      tag_141\n      tag_127\n      jump\t// in\n    tag_141:\n      pop\n        /* \"#utility.yul\":1710:1719   */\n      sub\n      swap1\n        /* \"#utility.yul\":1600:1725   */\n      jump\t// out\n        /* \"#utility.yul\":1730:1898   */\n    tag_76:\n        /* \"#utility.yul\":1770:1777   */\n      0x00\n        /* \"#utility.yul\":1836:1837   */\n      dup2\n        /* \"#utility.yul\":1832:1833   */\n      0x00\n        /* \"#utility.yul\":1828:1834   */\n      not\n        /* \"#utility.yul\":1824:1838   */\n      div\n        /* \"#utility.yul\":1821:1822   */\n      dup4\n        /* \"#utility.yul\":1818:1839   */\n      gt\n        /* \"#utility.yul\":1813:1814   */\n      dup3\n        /* \"#utility.yul\":1806:1815   */\n      iszero\n        /* \"#utility.yul\":1799:1816   */\n      iszero\n        /* \"#utility.yul\":1795:1840   */\n      and\n        /* \"#utility.yul\":1792:1863   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":1843:1861   */\n      tag_144\n      tag_127\n      jump\t// in\n    tag_144:\n      pop\n        /* \"#utility.yul\":1883:1892   */\n      mul\n      swap1\n        /* \"#utility.yul\":1730:1898   */\n      jump\t// out\n        /* \"#utility.yul\":1903:2031   */\n    tag_78:\n        /* \"#utility.yul\":1943:1946   */\n      0x00\n        /* \"#utility.yul\":1974:1975   */\n      dup3\n        /* \"#utility.yul\":1970:1976   */\n      not\n        /* \"#utility.yul\":1967:1968   */\n      dup3\n        /* \"#utility.yul\":1964:1977   */\n      gt\n        /* \"#utility.yul\":1961:2000   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1980:1998   */\n      tag_147\n      tag_127\n      jump\t// in\n    tag_147:\n      pop\n        /* \"#utility.yul\":2016:2025   */\n      add\n      swap1\n        /* \"#utility.yul\":1903:2031   */\n      jump\t// out\n        /* \"#utility.yul\":2315:2592   */\n    tag_84:\n        /* \"#utility.yul\":2382:2388   */\n      0x00\n        /* \"#utility.yul\":2435:2437   */\n      0x20\n        /* \"#utility.yul\":2423:2432   */\n      dup3\n        /* \"#utility.yul\":2414:2421   */\n      dup5\n        /* \"#utility.yul\":2410:2433   */\n      sub\n        /* \"#utility.yul\":2406:2438   */\n      slt\n        /* \"#utility.yul\":2403:2455   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":2451:2452   */\n      0x00\n        /* \"#utility.yul\":2448:2449   */\n      dup1\n        /* \"#utility.yul\":2441:2453   */\n      revert\n        /* \"#utility.yul\":2403:2455   */\n    tag_150:\n        /* \"#utility.yul\":2483:2492   */\n      dup2\n        /* \"#utility.yul\":2477:2493   */\n      mload\n        /* \"#utility.yul\":2536:2541   */\n      dup1\n        /* \"#utility.yul\":2529:2542   */\n      iszero\n        /* \"#utility.yul\":2522:2543   */\n      iszero\n        /* \"#utility.yul\":2515:2520   */\n      dup2\n        /* \"#utility.yul\":2512:2544   */\n      eq\n        /* \"#utility.yul\":2502:2562   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":2558:2559   */\n      0x00\n        /* \"#utility.yul\":2555:2556   */\n      dup1\n        /* \"#utility.yul\":2548:2560   */\n      revert\n        /* \"#utility.yul\":2977:3194   */\n    tag_111:\n        /* \"#utility.yul\":3017:3018   */\n      0x00\n        /* \"#utility.yul\":3043:3044   */\n      dup3\n        /* \"#utility.yul\":3033:3165   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":3087:3097   */\n      0x4e487b71\n        /* \"#utility.yul\":3082:3085   */\n      0xe0\n        /* \"#utility.yul\":3078:3098   */\n      shl\n        /* \"#utility.yul\":3075:3076   */\n      0x00\n        /* \"#utility.yul\":3068:3099   */\n      mstore\n        /* \"#utility.yul\":3122:3126   */\n      0x12\n        /* \"#utility.yul\":3119:3120   */\n      0x04\n        /* \"#utility.yul\":3112:3127   */\n      mstore\n        /* \"#utility.yul\":3150:3154   */\n      0x24\n        /* \"#utility.yul\":3147:3148   */\n      0x00\n        /* \"#utility.yul\":3140:3155   */\n      revert\n        /* \"#utility.yul\":3033:3165   */\n    tag_154:\n      pop\n        /* \"#utility.yul\":3179:3188   */\n      div\n      swap1\n        /* \"#utility.yul\":2977:3194   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207a0cd4fe10c54332b5746e0aa65133e4cc4ce1584257e2ac609ef6bf4369a82f64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_170": {
									"entryPoint": null,
									"id": 170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1179:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:1"
															},
															"nodeType": "YulIf",
															"src": "304:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													}
												],
												"src": "196:293:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "668:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "696:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "678:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "730:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "708:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "769:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:1"
																	},
																	{
																		"hexValue": "4e4f542c532030582041444452455353",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "774:18:1",
																		"type": "",
																		"value": "NOT,S 0X ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "802:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "814:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "802:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "645:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "659:4:1",
														"type": ""
													}
												],
												"src": "494:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1013:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1030:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1023:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1075:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1053:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1114:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1099:18:1"
																	},
																	{
																		"hexValue": "4e4545442061677265656d656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1119:16:1",
																		"type": "",
																		"value": "NEED agreement"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1145:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1157:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1168:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1153:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1145:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "990:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1004:4:1",
														"type": ""
													}
												],
												"src": "839:338:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"NOT,S 0X ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"NEED agreement\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610a8a380380610a8a83398101604081905261002f91610177565b600480546001600160a01b031916331790556001600160a01b03821661008f5760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b60448201526064015b60405180910390fd5b6001600160a01b0381166100d85760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b6044820152606401610086565b806001600160a01b0316826001600160a01b03161461012a5760405162461bcd60e51b815260206004820152600e60248201526d13915151081859dc99595b595b9d60921b6044820152606401610086565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556101aa565b80516001600160a01b038116811461017257600080fd5b919050565b6000806040838503121561018a57600080fd5b6101938361015b565b91506101a16020840161015b565b90509250929050565b6108d1806101b96000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a6643c9011610097578063c5c4a79c11610066578063c5c4a79c1461020c578063d942727f1461021f578063dab2997b14610228578063f5aa914a1461023b57600080fd5b8063a6643c90146101c4578063a694fc3a146101cd578063b10d816e146101f0578063b2237ba3146101f957600080fd5b806371ca337d116100d357806371ca337d1461014b5780637634f260146101545780638c93ecff1461015c5780638da5cb5b146101b157600080fd5b80632c46502d146100fa57806330d5c8c01461012a5780634641257d14610141575b600080fd5b60025461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013360075481565b604051908152602001610121565b610149610244565b005b61013360005481565b61014961035e565b61019161016a3660046107aa565b60096020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610121565b60045461010d906001600160a01b031681565b61013360055481565b6101e06101db3660046107da565b610569565b6040519015158152602001610121565b61013360085481565b6101496102073660046107da565b61075b565b61014961021a3660046107da565b600855565b61013360035481565b60015461010d906001600160a01b031681565b61013360065481565b33600090815260096020526040812080546003909101546005546102689190610809565b6102729190610820565b3360009081526009602052604090206002015461028f919061083f565b60025460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190610857565b5060405181815233907fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b9060200160405180910390a2503360009081526009602052604081206002810191909155600554600390910155565b33600090815260096020526040812080546003909101546005546103829190610809565b61038c9190610820565b336000908152600960205260409020600201546103a9919061083f565b60025460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f9190610857565b5060405181815233907fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b9060200160405180910390a233600081815260096020526040808220600281019290925560055460038301556001549154905163a9059cbb60e01b8152600481019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190610857565b50336000818152600960209081526040918290205491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a2336000908152600960205260408120546003805491929091610551908490610809565b90915550503360009081526009602052604081205550565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af11580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e59190610857565b50604051828152309033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a36005546007556003546000901561065c5760035460005461064f90701d6329f1c35ca4bfabb9f5610000000000610820565b6106599190610879565b90505b60008160065460085461066f9190610809565b6106799190610820565b905080600554610689919061083f565b600581905533600090815260096020526040902054600754701d6329f1c35ca4bfabb9f5610000000000926106be9190610809565b6106c89190610820565b6106d29190610879565b336000908152600960205260409020600201546106ef919061083f565b336000908152600960205260408120600281019290925581548692919061071790849061083f565b925050819055508360036000828254610730919061083f565b9091555050600854600655505060055433600090815260096020526040902060030155506001919050565b6004546001600160a01b031633146107a55760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640160405180910390fd5b600055565b6000602082840312156107bc57600080fd5b81356001600160a01b03811681146107d357600080fd5b9392505050565b6000602082840312156107ec57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561081b5761081b6107f3565b500390565b600081600019048311821515161561083a5761083a6107f3565b500290565b60008219821115610852576108526107f3565b500190565b60006020828403121561086957600080fd5b815180151581146107d357600080fd5b60008261089657634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212207a0cd4fe10c54332b5746e0aa65133e4cc4ce1584257e2ac609ef6bf4369a82f64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA8A CODESIZE SUB DUP1 PUSH2 0xA8A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x13915151081859DC99595B595B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x1AA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 DUP4 PUSH2 0x15B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A1 PUSH1 0x20 DUP5 ADD PUSH2 0x15B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D1 DUP1 PUSH2 0x1B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6643C90 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC5C4A79C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC5C4A79C EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xF5AA914A EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA6643C90 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xB10D816E EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71CA337D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x7634F260 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C46502D EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x30D5C8C0 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x141 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x35E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x133 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x133 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x75B JUMP JUMPDEST PUSH2 0x149 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0x133 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x133 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x857 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x857 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x5 SLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x1 SLOAD SWAP2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x857 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x551 SWAP1 DUP5 SWAP1 PUSH2 0x809 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x857 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x7 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH2 0x64F SWAP1 PUSH17 0x1D6329F1C35CA4BFABB9F5610000000000 PUSH2 0x820 JUMP JUMPDEST PUSH2 0x659 SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x679 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 SLOAD PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD PUSH17 0x1D6329F1C35CA4BFABB9F5610000000000 SWAP3 PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP7 SWAP3 SWAP2 SWAP1 PUSH2 0x717 SWAP1 DUP5 SWAP1 PUSH2 0x83F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x730 SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x6 SSTORE POP POP PUSH1 0x5 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SSTORE POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x81B JUMPI PUSH2 0x81B PUSH2 0x7F3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x83A JUMPI PUSH2 0x83A PUSH2 0x7F3 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x852 JUMPI PUSH2 0x852 PUSH2 0x7F3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x896 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xCD4FE10C54332B5746E0AA65133E4CC4CE1584257E2AC609EF6BF NUMBER PUSH10 0xA82F64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "730:4934:0:-:0;;;1698:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1761:5;:18;;-1:-1:-1;;;;;;1761:18:0;1769:10;1761:18;;;-1:-1:-1;;;;;1798:25:0;;1790:53;;;;-1:-1:-1;;;1790:53:0;;696:2:1;1790:53:0;;;678:21:1;735:2;715:18;;;708:30;-1:-1:-1;;;754:18:1;;;747:46;810:18;;1790:53:0;;;;;;;;;-1:-1:-1;;;;;1862:22:0;;1854:50;;;;-1:-1:-1;;;1854:50:0;;696:2:1;1854:50:0;;;678:21:1;735:2;715:18;;;708:30;-1:-1:-1;;;754:18:1;;;747:46;810:18;;1854:50:0;494:340:1;1854:50:0;1938:8;-1:-1:-1;;;;;1923:23:0;:11;-1:-1:-1;;;;;1923:23:0;;1915:49;;;;-1:-1:-1;;;1915:49:0;;1041:2:1;1915:49:0;;;1023:21:1;1080:2;1060:18;;;1053:30;-1:-1:-1;;;1099:18:1;;;1092:44;1153:18;;1915:49:0;839:338:1;1915:49:0;1975:10;:24;;-1:-1:-1;;;;;1975:24:0;;;-1:-1:-1;;;;;;1975:24:0;;;;;;;2010:7;:18;;;;;;;;;;;730:4934;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;839:338::-;730:4934:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@User_Map_122": {
									"entryPoint": null,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvest_374": {
									"entryPoint": 580,
									"id": 374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@max_a_token_reward_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@max_last_a_token_reward_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@max_last_stake_time_82": {
									"entryPoint": null,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ratio_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRatio_194": {
									"entryPoint": 1883,
									"id": 194,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_block_time_86": {
									"entryPoint": null,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setblocktime_481": {
									"entryPoint": null,
									"id": 481,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeSupple_76": {
									"entryPoint": null,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_316": {
									"entryPoint": 1385,
									"id": 316,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@staketoken_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totoken_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawharvest_471": {
									"entryPoint": 862,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3533:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "323:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "333:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "356:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "333:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "375:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "368:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "368:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "368:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "292:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "303:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "314:4:1",
														"type": ""
													}
												],
												"src": "222:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "474:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "520:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "532:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "522:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "522:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "522:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "495:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "504:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "491:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "516:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "487:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "487:32:1"
															},
															"nodeType": "YulIf",
															"src": "484:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "545:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "558:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "558:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "549:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "644:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "653:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "656:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "646:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "646:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "646:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "603:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "614:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "629:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "634:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "625:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "625:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "638:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "621:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "621:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "610:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "600:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "600:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:50:1"
															},
															"nodeType": "YulIf",
															"src": "590:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "669:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "679:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "669:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "440:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "451:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "463:6:1",
														"type": ""
													}
												],
												"src": "404:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "880:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "890:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "902:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "898:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "890:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "933:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "944:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "926:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "971:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "982:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "967:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "967:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "987:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "960:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "960:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1014:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1025:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1010:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1030:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1003:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1057:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1068:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1053:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1053:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1073:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1046:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1046:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "825:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "836:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "844:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "852:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "860:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "871:4:1",
														"type": ""
													}
												],
												"src": "695:391:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1207:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1216:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1219:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1209:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1209:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1209:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1182:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1191:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1178:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1203:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1174:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1174:32:1"
															},
															"nodeType": "YulIf",
															"src": "1171:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1232:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1255:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1242:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1127:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1138:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1150:6:1",
														"type": ""
													}
												],
												"src": "1091:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1371:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1381:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1393:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1404:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1389:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1381:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1423:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1448:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1441:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1441:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1434:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1434:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1416:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1416:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1340:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1351:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1362:4:1",
														"type": ""
													}
												],
												"src": "1276:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1500:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1517:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1524:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1529:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1520:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1520:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1510:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1510:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1557:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1560:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1550:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1581:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1584:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1574:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1574:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1468:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1649:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1671:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1673:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1673:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1673:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1665:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1668:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1662:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:8:1"
															},
															"nodeType": "YulIf",
															"src": "1659:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1702:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1714:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1717:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1710:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1702:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1631:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1634:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1640:4:1",
														"type": ""
													}
												],
												"src": "1600:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1841:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1843:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1843:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1843:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1813:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1806:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1806:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1799:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1799:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1821:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1832:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1828:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1828:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1836:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1824:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1824:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1818:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1795:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1795:45:1"
															},
															"nodeType": "YulIf",
															"src": "1792:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1872:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1890:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1883:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1883:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1872:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1761:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1764:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1770:7:1",
														"type": ""
													}
												],
												"src": "1730:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1978:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1980:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1980:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1967:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1974:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1970:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1970:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1964:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:13:1"
															},
															"nodeType": "YulIf",
															"src": "1961:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2009:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2020:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2023:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2016:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2009:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1934:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1937:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1943:3:1",
														"type": ""
													}
												],
												"src": "1903:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2165:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2175:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2187:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2198:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2183:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2175:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2217:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2232:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2248:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2253:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2244:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2244:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2257:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2240:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2240:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2228:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2210:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2210:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2281:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2277:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2297:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2270:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2270:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2126:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2137:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2145:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2156:4:1",
														"type": ""
													}
												],
												"src": "2036:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2393:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2439:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2448:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2451:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2441:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2441:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2441:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2414:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2423:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2410:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:32:1"
															},
															"nodeType": "YulIf",
															"src": "2403:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2464:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2483:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2477:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2468:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2546:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2555:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2558:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2548:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2548:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2548:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2515:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2536:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2529:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2529:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2522:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2522:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2512:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2512:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:40:1"
															},
															"nodeType": "YulIf",
															"src": "2502:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2571:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2581:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2571:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2359:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2370:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2382:6:1",
														"type": ""
													}
												],
												"src": "2315:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2754:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2764:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2776:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2787:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2772:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2764:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2799:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2817:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2822:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2813:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2809:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2809:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2803:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2844:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2859:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2867:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2855:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2837:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2837:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2837:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2891:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2902:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2887:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2911:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2919:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2907:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2880:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2880:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2880:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2943:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2954:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2939:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2959:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2932:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2707:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2718:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2726:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2734:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2745:4:1",
														"type": ""
													}
												],
												"src": "2597:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3023:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3054:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3075:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3082:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3087:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3078:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3078:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3068:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3068:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3068:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3119:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3122:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3112:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3112:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3112:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3147:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3150:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3140:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3140:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3140:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3043:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3036:9:1"
															},
															"nodeType": "YulIf",
															"src": "3033:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3174:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3183:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3186:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3179:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3174:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3008:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3011:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3017:1:1",
														"type": ""
													}
												],
												"src": "2977:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3373:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3462:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3473:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3458:18:1"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3478:11:1",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3451:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3451:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3499:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3511:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3499:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:1",
														"type": ""
													}
												],
												"src": "3199:332:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"not owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a6643c9011610097578063c5c4a79c11610066578063c5c4a79c1461020c578063d942727f1461021f578063dab2997b14610228578063f5aa914a1461023b57600080fd5b8063a6643c90146101c4578063a694fc3a146101cd578063b10d816e146101f0578063b2237ba3146101f957600080fd5b806371ca337d116100d357806371ca337d1461014b5780637634f260146101545780638c93ecff1461015c5780638da5cb5b146101b157600080fd5b80632c46502d146100fa57806330d5c8c01461012a5780634641257d14610141575b600080fd5b60025461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013360075481565b604051908152602001610121565b610149610244565b005b61013360005481565b61014961035e565b61019161016a3660046107aa565b60096020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610121565b60045461010d906001600160a01b031681565b61013360055481565b6101e06101db3660046107da565b610569565b6040519015158152602001610121565b61013360085481565b6101496102073660046107da565b61075b565b61014961021a3660046107da565b600855565b61013360035481565b60015461010d906001600160a01b031681565b61013360065481565b33600090815260096020526040812080546003909101546005546102689190610809565b6102729190610820565b3360009081526009602052604090206002015461028f919061083f565b60025460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190610857565b5060405181815233907fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b9060200160405180910390a2503360009081526009602052604081206002810191909155600554600390910155565b33600090815260096020526040812080546003909101546005546103829190610809565b61038c9190610820565b336000908152600960205260409020600201546103a9919061083f565b60025460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f9190610857565b5060405181815233907fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b9060200160405180910390a233600081815260096020526040808220600281019290925560055460038301556001549154905163a9059cbb60e01b8152600481019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190610857565b50336000818152600960209081526040918290205491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a2336000908152600960205260408120546003805491929091610551908490610809565b90915550503360009081526009602052604081205550565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af11580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e59190610857565b50604051828152309033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a36005546007556003546000901561065c5760035460005461064f90701d6329f1c35ca4bfabb9f5610000000000610820565b6106599190610879565b90505b60008160065460085461066f9190610809565b6106799190610820565b905080600554610689919061083f565b600581905533600090815260096020526040902054600754701d6329f1c35ca4bfabb9f5610000000000926106be9190610809565b6106c89190610820565b6106d29190610879565b336000908152600960205260409020600201546106ef919061083f565b336000908152600960205260408120600281019290925581548692919061071790849061083f565b925050819055508360036000828254610730919061083f565b9091555050600854600655505060055433600090815260096020526040902060030155506001919050565b6004546001600160a01b031633146107a55760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640160405180910390fd5b600055565b6000602082840312156107bc57600080fd5b81356001600160a01b03811681146107d357600080fd5b9392505050565b6000602082840312156107ec57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561081b5761081b6107f3565b500390565b600081600019048311821515161561083a5761083a6107f3565b500290565b60008219821115610852576108526107f3565b500190565b60006020828403121561086957600080fd5b815180151581146107d357600080fd5b60008261089657634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212207a0cd4fe10c54332b5746e0aa65133e4cc4ce1584257e2ac609ef6bf4369a82f64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6643C90 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC5C4A79C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC5C4A79C EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xF5AA914A EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA6643C90 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xB10D816E EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71CA337D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x7634F260 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C46502D EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x30D5C8C0 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x141 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x35E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x133 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x133 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x75B JUMP JUMPDEST PUSH2 0x149 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0x133 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x133 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x857 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x857 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x5 SLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x1 SLOAD SWAP2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x857 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x551 SWAP1 DUP5 SWAP1 PUSH2 0x809 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x857 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x7 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH2 0x64F SWAP1 PUSH17 0x1D6329F1C35CA4BFABB9F5610000000000 PUSH2 0x820 JUMP JUMPDEST PUSH2 0x659 SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x679 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 SLOAD PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD PUSH17 0x1D6329F1C35CA4BFABB9F5610000000000 SWAP3 PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP7 SWAP3 SWAP2 SWAP1 PUSH2 0x717 SWAP1 DUP5 SWAP1 PUSH2 0x83F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x730 SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x6 SSTORE POP POP PUSH1 0x5 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SSTORE POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x81B JUMPI PUSH2 0x81B PUSH2 0x7F3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x83A JUMPI PUSH2 0x83A PUSH2 0x7F3 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x852 JUMPI PUSH2 0x852 PUSH2 0x7F3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x896 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xCD4FE10C54332B5746E0AA65133E4CC4CE1584257E2AC609EF6BF NUMBER PUSH10 0xA82F64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "730:4934:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;847:22;;;;;-1:-1:-1;;;;;847:22:0;;;;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;847:22:0;;;;;;;;1131:35;;;;;;;;;368:25:1;;;356:2;341:18;1131:35:0;222:177:1;4195:621:0;;;:::i;:::-;;791:17;;;;;;4824:737;;;:::i;1649:40::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:25:1;;;982:2;967:18;;960:34;;;;1010:18;;;1003:34;1068:2;1053:18;;1046:34;913:3;898:19;1649:40:0;695:391:1;906:20:0;;;;;-1:-1:-1;;;;;906:20:0;;;978:30;;;;;;2349:1836;;;;;;:::i;:::-;;:::i;:::-;;;1441:14:1;;1434:22;1416:41;;1404:2;1389:18;2349:1836:0;1276:187:1;1197:26:0;;;;;;2249:92;;;;;;:::i;:::-;;:::i;5569:::-;;;;;;:::i;:::-;5626:14;:27;5569:92;876:23;;;;;;815:25;;;;;-1:-1:-1;;;;;815:25:0;;;1048:31;;;;;;4195:621;4522:10;4378:25;4513:20;;;:8;:20;;;;;:32;;4470:40;;;;;4449:18;;:61;;4470:40;4449:61;:::i;:::-;4448:97;;;;:::i;:::-;4415:10;4406:20;;;;:8;:20;;;;;:39;;;:139;;;;:::i;:::-;4563:7;;4556:58;;-1:-1:-1;;;4556:58:0;;4581:10;4556:58;;;2210:51:1;2277:18;;;2270:34;;;4378:167:0;;-1:-1:-1;;;;;;4563:7:0;;4556:24;;2183:18:1;;4556:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4630:42:0;;368:25:1;;;4639:10:0;;4630:42;;356:2:1;341:18;4630:42:0;;;;;;;-1:-1:-1;4692:10:0;4725:1;4683:20;;;:8;:20;;;;;:39;;;:43;;;;4780:18;;4737:40;;;;:61;4195:621::o;4824:737::-;5013:10;4869:25;5004:20;;;:8;:20;;;;;:32;;4961:40;;;;;4940:18;;:61;;4961:40;4940:61;:::i;:::-;4939:97;;;;:::i;:::-;4906:10;4897:20;;;;:8;:20;;;;;:39;;;:139;;;;:::i;:::-;5054:7;;5047:58;;-1:-1:-1;;;5047:58:0;;5072:10;5047:58;;;2210:51:1;2277:18;;;2270:34;;;4869:167:0;;-1:-1:-1;;;;;;5054:7:0;;5047:24;;2183:18:1;;5047:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5121:42:0;;368:25:1;;;5130:10:0;;5121:42;;356:2:1;341:18;5121:42:0;;;;;;;5183:10;5216:1;5174:20;;;:8;:20;;;;;;:39;;;:43;;;;5271:18;;5228:40;;;:61;5309:10;;5342:32;;5302:73;;-1:-1:-1;;;5302:73:0;;;;;2210:51:1;;;;2277:18;;;2270:34;-1:-1:-1;;;;;5309:10:0;;5302:27;;2183:18:1;;5302:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5401:10:0;5413:20;;;;:8;:20;;;;;;;;;:32;5392:54;;368:25:1;;;5392:54:0;;341:18:1;5392:54:0;;;;;;;5481:10;5472:20;;;;:8;:20;;;;;:32;5457:11;:47;;5472:32;;5457:11;;:47;;5472:32;;5457:47;:::i;:::-;;;;-1:-1:-1;;5524:10:0;5550:1;5515:20;;;:8;:20;;;;;:36;-1:-1:-1;4824:737:0:o;2349:1836::-;2418:10;;2411:67;;-1:-1:-1;;;2411:67:0;;2443:10;2411:67;;;2837:34:1;2463:4:0;2887:18:1;;;2880:43;2939:18;;;2932:34;;;2394:4:0;;-1:-1:-1;;;;;2418:10:0;;2411:31;;2772:18:1;;2411:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2495:43:0;;368:25:1;;;2523:4:0;;2503:10;;2495:43;;356:2:1;341:18;2495:43:0;;;;;;;2669:18;;2643:23;:44;2771:11;;-1:-1:-1;;2771:16:0;2767:189;;2921:11;;2904:5;;:14;;2912:6;2904:14;:::i;:::-;:28;;;;:::i;:::-;2891:41;;2767:189;3077:31;3151:10;3129:19;;3112:14;;:36;;;;:::i;:::-;3111:50;;;;:::i;:::-;3077:84;;3339:26;3318:18;;:47;;;;:::i;:::-;3297:18;:68;;;3689:10;3680:20;;;;:8;:20;;;;;:32;3654:23;;3716:6;;3633:44;;3654:23;3633:44;:::i;:::-;3632:80;;;;:::i;:::-;3631:91;;;;:::i;:::-;3598:10;3589:20;;;;:8;:20;;;;;:39;;;:133;;;;:::i;:::-;3555:10;3546:20;;;;:8;:20;;;;;:39;;;:176;;;;3770:43;;3806:7;;3546:20;;3770:43;;3806:7;;3770:43;:::i;:::-;;;;;;;;3873:7;3858:11;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;3983:14:0;;3961:19;:36;-1:-1:-1;;4133:18:0;;4099:10;-1:-1:-1;4090:20:0;;;:8;:20;;;;;:40;;:61;-1:-1:-1;4169:4:0;;2349:1836;-1:-1:-1;2349:1836:0:o;2249:92::-;2098:5;;-1:-1:-1;;;;;2098:5:0;2084:10;:19;2076:42;;;;-1:-1:-1;;;2076:42:0;;3401:2:1;2076:42:0;;;3383:21:1;3440:1;3420:18;;;3413:29;-1:-1:-1;;;3458:18:1;;;3451:39;3507:18;;2076:42:0;;;;;;;;2314:5:::1;:14:::0;2249:92::o;404:286:1:-;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;558:23;;-1:-1:-1;;;;;610:31:1;;600:42;;590:70;;656:1;653;646:12;590:70;679:5;404:286;-1:-1:-1;;;404:286:1:o;1091:180::-;1150:6;1203:2;1191:9;1182:7;1178:23;1174:32;1171:52;;;1219:1;1216;1209:12;1171:52;-1:-1:-1;1242:23:1;;1091:180;-1:-1:-1;1091:180:1:o;1468:127::-;1529:10;1524:3;1520:20;1517:1;1510:31;1560:4;1557:1;1550:15;1584:4;1581:1;1574:15;1600:125;1640:4;1668:1;1665;1662:8;1659:34;;;1673:18;;:::i;:::-;-1:-1:-1;1710:9:1;;1600:125::o;1730:168::-;1770:7;1836:1;1832;1828:6;1824:14;1821:1;1818:21;1813:1;1806:9;1799:17;1795:45;1792:71;;;1843:18;;:::i;:::-;-1:-1:-1;1883:9:1;;1730:168::o;1903:128::-;1943:3;1974:1;1970:6;1967:1;1964:13;1961:39;;;1980:18;;:::i;:::-;-1:-1:-1;2016:9:1;;1903:128::o;2315:277::-;2382:6;2435:2;2423:9;2414:7;2410:23;2406:32;2403:52;;;2451:1;2448;2441:12;2403:52;2483:9;2477:16;2536:5;2529:13;2522:21;2515:5;2512:32;2502:60;;2558:1;2555;2548:12;2977:217;3017:1;3043;3033:132;;3087:10;3082:3;3078:20;3075:1;3068:31;3122:4;3119:1;3112:15;3150:4;3147:1;3140:15;3033:132;-1:-1:-1;3179:9:1;;2977:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "451400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"User_Map(address)": "8953",
								"harvest()": "infinite",
								"max_a_token_reward()": "2318",
								"max_last_a_token_reward()": "2341",
								"max_last_stake_time()": "2383",
								"owner()": "2415",
								"ratio()": "2318",
								"setRatio(uint256)": "24553",
								"set_block_time()": "2362",
								"setblocktime(uint256)": "22334",
								"stake(uint256)": "infinite",
								"stakeSupple()": "2339",
								"staketoken()": "2392",
								"totoken()": "2350",
								"withdrawharvest()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 730,
									"end": 5664,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1698,
									"end": 2036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1698,
									"end": 2036,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1761,
									"end": 1766,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1761,
									"end": 1779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1761,
									"end": 1779,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1761,
									"end": 1779,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1769,
									"end": 1779,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1761,
									"end": 1779,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1761,
									"end": 1779,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1761,
									"end": 1779,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1798,
									"end": 1823,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1798,
									"end": 1823,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 747,
									"end": 793,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 810,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1790,
									"end": 1843,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1862,
									"end": 1884,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1862,
									"end": 1884,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 747,
									"end": 793,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 810,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 494,
									"end": 834,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1854,
									"end": 1904,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1938,
									"end": 1946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1923,
									"end": 1946,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1923,
									"end": 1934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1923,
									"end": 1946,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1923,
									"end": 1946,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1044,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 1083,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "13915151081859DC99595B595B9D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "92"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1136,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1171,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1153,
									"end": 1171,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1915,
									"end": 1964,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1975,
									"end": 1985,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1975,
									"end": 1999,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2017,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2028,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 730,
									"end": 5664,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a0cd4fe10c54332b5746e0aa65133e4cc4ce1584257e2ac609ef6bf4369a82f64736f6c634300080f0033",
									".code": [
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "A6643C90"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "C5C4A79C"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "C5C4A79C"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "D942727F"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "DAB2997B"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "F5AA914A"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "A6643C90"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "B10D816E"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "B2237BA3"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "7634F260"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "8C93ECFF"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "2C46502D"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "30D5C8C0"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "4641257D"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 5664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 847,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 847,
											"end": 869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 847,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 847,
											"end": 869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 847,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 847,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 847,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 847,
											"end": 869,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 356,
											"end": 358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 222,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4816,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4195,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4195,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4195,
											"end": 4816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4816,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4195,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4816,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 808,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 791,
											"end": 808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 791,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 808,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 5561,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4824,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4824,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4824,
											"end": 5561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1649,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 951,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 926,
											"end": 951,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 926,
											"end": 951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 982,
											"end": 984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 985,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 967,
											"end": 985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 994,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 960,
											"end": 994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 994,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 960,
											"end": 994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1053,
											"end": 1071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 913,
											"end": 916,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 898,
											"end": 917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 695,
											"end": 1086,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 906,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 906,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 906,
											"end": 926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 906,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 906,
											"end": 926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 906,
											"end": 926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 906,
											"end": 926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 906,
											"end": 926,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 978,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 978,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 978,
											"end": 1008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1008,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2349,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2349,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1456,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1276,
											"end": 1463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1223,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1197,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1197,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1197,
											"end": 1223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1223,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2249,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2249,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5661,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5569,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5569,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5569,
											"end": 5661,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5569,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5569,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5661,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5569,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5626,
											"end": 5653,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5661,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 876,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 876,
											"end": 899,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 876,
											"end": 899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 876,
											"end": 899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 876,
											"end": 899,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 815,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 815,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 815,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 815,
											"end": 840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 815,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 815,
											"end": 840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 815,
											"end": 840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 815,
											"end": 840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 815,
											"end": 840,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4816,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4195,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4522,
											"end": 4532,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4521,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4510,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4470,
											"end": 4510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4449,
											"end": 4467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4449,
											"end": 4510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4449,
											"end": 4510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4510,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4449,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4448,
											"end": 4545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4448,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4545,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4448,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4425,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4406,
											"end": 4426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4406,
											"end": 4426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4406,
											"end": 4426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4426,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4445,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4406,
											"end": 4445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4406,
											"end": 4545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4406,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4545,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4406,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4570,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4563,
											"end": 4570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4545,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4580,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4556,
											"end": 4580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4556,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4556,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4639,
											"end": 4649,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4630,
											"end": 4672,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4683,
											"end": 4703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4683,
											"end": 4703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4683,
											"end": 4703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4683,
											"end": 4703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4703,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4722,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4683,
											"end": 4722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4726,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4780,
											"end": 4798,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4780,
											"end": 4798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4777,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4737,
											"end": 4777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 5561,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4824,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5023,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5012,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4961,
											"end": 5001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 5001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 5001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 5001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4940,
											"end": 5001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 5001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4940,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5001,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4940,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4939,
											"end": 5036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 5036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4939,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4939,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4916,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4905,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4897,
											"end": 4936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4897,
											"end": 5036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 5036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4897,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4897,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 5036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 5036,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5071,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5047,
											"end": 5071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5047,
											"end": 5105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5047,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5140,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5193,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5216,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5182,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5174,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5174,
											"end": 5194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5213,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5174,
											"end": 5213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5217,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5217,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5174,
											"end": 5217,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5228,
											"end": 5268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2261,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2261,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5329,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5302,
											"end": 5329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5302,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5302,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5401,
											"end": 5411,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5446,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5491,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5480,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5468,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5457,
											"end": 5504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5504,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5457,
											"end": 5504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5504,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5457,
											"end": 5504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5504,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5457,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5524,
											"end": 5534,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5515,
											"end": 5535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5515,
											"end": 5535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5535,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 5561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2418,
											"end": 2428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2453,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2467,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 2428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2411,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2411,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2527,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2513,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C"
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2538,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2669,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2669,
											"end": 2687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2643,
											"end": 2687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2771,
											"end": 2787,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2767,
											"end": 2956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 2932,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2921,
											"end": 2932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2904,
											"end": 2918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2918,
											"name": "PUSH",
											"source": 0,
											"value": "1D6329F1C35CA4BFABB9F5610000000000"
										},
										{
											"begin": 2904,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2904,
											"end": 2918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2918,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2904,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2904,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2956,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2767,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3129,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3129,
											"end": 3148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3112,
											"end": 3126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3112,
											"end": 3148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3112,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3148,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3112,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3111,
											"end": 3161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3111,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3161,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3111,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3318,
											"end": 3365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3318,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3365,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3318,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3297,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3365,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3688,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3677,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3654,
											"end": 3677,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3722,
											"name": "PUSH",
											"source": 0,
											"value": "1D6329F1C35CA4BFABB9F5610000000000"
										},
										{
											"begin": 3716,
											"end": 3722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3633,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3633,
											"end": 3677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3633,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3633,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3633,
											"end": 3677,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3633,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3632,
											"end": 3712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3632,
											"end": 3712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3712,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3632,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3631,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3631,
											"end": 3722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3631,
											"end": 3722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3631,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3631,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3631,
											"end": 3722,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3631,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3608,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3597,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3628,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3589,
											"end": 3628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3589,
											"end": 3722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3589,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3722,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3589,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3555,
											"end": 3565,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3554,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3585,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3546,
											"end": 3585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3722,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3770,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3869,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3858,
											"end": 3869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3858,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3880,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 3997,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3983,
											"end": 3997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3961,
											"end": 3997,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4109,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4130,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4090,
											"end": 4130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4151,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4169,
											"end": 4173,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4169,
											"end": 4173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 4185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 4185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2249,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2094,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2103,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3507,
											"end": 3525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2076,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2328,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2249,
											"end": 2341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 404,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 404,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 463,
											"end": 469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 495,
											"end": 502,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 491,
											"end": 514,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 487,
											"end": 519,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 484,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 484,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 484,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 532,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 522,
											"end": 534,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 484,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 484,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 558,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 558,
											"end": 581,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 610,
											"end": 641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 641,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 600,
											"end": 642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 600,
											"end": 642,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 590,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 590,
											"end": 660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 656,
											"end": 657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 646,
											"end": 658,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 590,
											"end": 660,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 590,
											"end": 660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 679,
											"end": 684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 404,
											"end": 690,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 404,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1091,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1223,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1171,
											"end": 1223,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1221,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1171,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1265,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1595,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1468,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1539,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1524,
											"end": 1527,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1564,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1557,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1550,
											"end": 1565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1589,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1725,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1600,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1670,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1693,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1659,
											"end": 1693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1673,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1719,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1730,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1838,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1839,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1816,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1792,
											"end": 1863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1843,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1883,
											"end": 1892,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1976,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 2000,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1961,
											"end": 2000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1980,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1980,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 1998,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1980,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2016,
											"end": 2025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2592,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2315,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2438,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2543,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2544,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2502,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3194,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2977,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3033,
											"end": 3165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3082,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3078,
											"end": 3098,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3126,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3119,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3112,
											"end": 3127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3147,
											"end": 3148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3155,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3165,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3033,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3179,
											"end": 3188,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"写项目基础/写uni算法矿池.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"User_Map(address)": "8c93ecff",
							"harvest()": "4641257d",
							"max_a_token_reward()": "a6643c90",
							"max_last_a_token_reward()": "30d5c8c0",
							"max_last_stake_time()": "f5aa914a",
							"owner()": "8da5cb5b",
							"ratio()": "71ca337d",
							"setRatio(uint256)": "b2237ba3",
							"set_block_time()": "b10d816e",
							"setblocktime(uint256)": "c5c4a79c",
							"stake(uint256)": "a694fc3a",
							"stakeSupple()": "d942727f",
							"staketoken()": "dab2997b",
							"totoken()": "2c46502d",
							"withdrawharvest()": "7634f260"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staketoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_totoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"User_Map\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_Stake_Time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_a_token_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max_a_token_reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max_last_a_token_reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max_last_stake_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"set_block_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocktime\",\"type\":\"uint256\"}],\"name\":\"setblocktime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeSupple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staketoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawharvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5199\\u9879\\u76ee\\u57fa\\u7840/\\u5199uni\\u7b97\\u6cd5\\u77ff\\u6c60.sol\":\"StakeContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5199\\u9879\\u76ee\\u57fa\\u7840/\\u5199uni\\u7b97\\u6cd5\\u77ff\\u6c60.sol\":{\"keccak256\":\"0xf837038d8e20d9915492d1057adbd74a4f452437c80b08498a854ade20321f6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db9ef40e082dbc50593f46dbce124488ed92b6fb8b717e712df6aaf87acd5ee7\",\"dweb:/ipfs/QmWgv1fePwYyv1YfDTN6ryCnQrtUtwKijjUZwRGRashhdk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
								"label": "ratio",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 72,
								"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
								"label": "staketoken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 74,
								"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
								"label": "totoken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 76,
								"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
								"label": "stakeSupple",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 78,
								"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 80,
								"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
								"label": "max_a_token_reward",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 82,
								"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
								"label": "max_last_stake_time",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 84,
								"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
								"label": "max_last_a_token_reward",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 86,
								"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
								"label": "set_block_time",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 122,
								"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
								"label": "User_Map",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(User)117_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)117_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakeContract.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)117_storage"
							},
							"t_struct(User)117_storage": {
								"encoding": "inplace",
								"label": "struct StakeContract.User",
								"members": [
									{
										"astId": 110,
										"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
										"label": "stakeNumber",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 112,
										"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
										"label": "last_Stake_Time",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 114,
										"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
										"label": "last_totoken_ratio",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 116,
										"contract": "写项目基础/写uni算法矿池.sol:StakeContract",
										"label": "user_a_token_reward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"写项目基础/写uni算法矿池.sol": {
				"ast": {
					"absolutePath": "写项目基础/写uni算法矿池.sol",
					"exportedSymbols": {
						"IERC20": [
							68
						],
						"StakeContract": [
							482
						]
					},
					"id": 483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nameLocation": "76:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "99:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "136:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:6:0"
									},
									"scope": 68,
									"src": "90:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "159:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "177:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "169:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "209:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:6:0"
									},
									"scope": 68,
									"src": "150:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "232:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "249:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "241:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "265:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "260:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "260:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:31:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "290:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "290:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "289:6:0"
									},
									"scope": 68,
									"src": "223:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "313:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "331:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "346:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "338:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:32:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "378:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:6:0"
									},
									"scope": 68,
									"src": "304:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "401:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "417:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "409:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "431:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "426:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "426:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:29:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "456:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "456:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:6:0"
									},
									"scope": 68,
									"src": "392:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "479:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "500:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "492:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "516:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "508:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "532:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "527:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "527:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:47:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "557:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "557:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:6:0"
									},
									"scope": 68,
									"src": "470:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 59,
									"name": "Trasfer",
									"nameLocation": "577:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "601:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "585:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "623:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "607:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "627:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "627:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:54:0"
									},
									"src": "571:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 67,
									"name": "Approveal",
									"nameLocation": "651:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "661:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "700:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "684:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "714:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "709:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "709:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:60:0"
									},
									"src": "645:76:0"
								}
							],
							"scope": 483,
							"src": "66:660:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakeContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 482,
							"linearizedBaseContracts": [
								482
							],
							"name": "StakeContract",
							"nameLocation": "739:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "71ca337d",
									"id": 70,
									"mutability": "mutable",
									"name": "ratio",
									"nameLocation": "803:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "791:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 69,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "791:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dab2997b",
									"id": 72,
									"mutability": "mutable",
									"name": "staketoken",
									"nameLocation": "830:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "815:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "815:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c46502d",
									"id": 74,
									"mutability": "mutable",
									"name": "totoken",
									"nameLocation": "862:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "847:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "847:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d942727f",
									"id": 76,
									"mutability": "mutable",
									"name": "stakeSupple",
									"nameLocation": "888:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "876:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 75,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "876:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 78,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "921:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "906:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 77,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "906:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6643c90",
									"id": 80,
									"mutability": "mutable",
									"name": "max_a_token_reward",
									"nameLocation": "990:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "978:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 79,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "978:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f5aa914a",
									"id": 82,
									"mutability": "mutable",
									"name": "max_last_stake_time",
									"nameLocation": "1060:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "1048:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1048:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "30d5c8c0",
									"id": 84,
									"mutability": "mutable",
									"name": "max_last_a_token_reward",
									"nameLocation": "1143:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "1131:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1131:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b10d816e",
									"id": 86,
									"mutability": "mutable",
									"name": "set_block_time",
									"nameLocation": "1209:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "1197:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1197:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 94,
									"name": "Trasfer",
									"nameLocation": "1244:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1268:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1252:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1290:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1274:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1299:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1294:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:54:0"
									},
									"src": "1238:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 102,
									"name": "Approveal",
									"nameLocation": "1318:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1344:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1328:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1367:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1351:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1381:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1376:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1327:60:0"
									},
									"src": "1312:76:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
									"id": 108,
									"name": "transfer",
									"nameLocation": "1400:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1425:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1409:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1434:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1429:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1429:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:32:0"
									},
									"src": "1394:47:0"
								},
								{
									"canonicalName": "StakeContract.User",
									"id": 117,
									"members": [
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "stakeNumber",
											"nameLocation": "1477:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 117,
											"src": "1472:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1472:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "last_Stake_Time",
											"nameLocation": "1504:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 117,
											"src": "1499:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1499:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "last_totoken_ratio",
											"nameLocation": "1535:18:0",
											"nodeType": "VariableDeclaration",
											"scope": 117,
											"src": "1530:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 113,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1530:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 116,
											"mutability": "mutable",
											"name": "user_a_token_reward",
											"nameLocation": "1614:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 117,
											"src": "1609:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 115,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1609:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "1456:4:0",
									"nodeType": "StructDefinition",
									"scope": 482,
									"src": "1449:192:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c93ecff",
									"id": 122,
									"mutability": "mutable",
									"name": "User_Map",
									"nameLocation": "1681:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "1649:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
										"typeString": "mapping(address => struct StakeContract.User)"
									},
									"typeName": {
										"id": 121,
										"keyType": {
											"id": 118,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1657:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1649:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
											"typeString": "mapping(address => struct StakeContract.User)"
										},
										"valueType": {
											"id": 120,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 119,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 117,
												"src": "1668:4:0"
											},
											"referencedDeclaration": 117,
											"src": "1668:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$117_storage_ptr",
												"typeString": "struct StakeContract.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1750:286:0",
										"statements": [
											{
												"expression": {
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1761:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 130,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1769:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1769:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1761:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "1761:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1798:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1821:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1813:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 136,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1813:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1813:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1798:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1824:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1790:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1790:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 145,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "1862:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1882:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1874:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 146,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1874:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1874:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1862:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1885:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1854:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1854:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1923:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 156,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "1938:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1923:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4545442061677265656d656e74",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1947:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															},
															"value": "NEED agreement"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1915:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1915:49:0"
											},
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1975:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1988:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1975:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1975:24:0"
											},
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 165,
														"name": "totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "2010:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 166,
														"name": "_totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "2020:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2010:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "2010:18:0"
											}
										]
									},
									"id": 170,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "_staketoken",
												"nameLocation": "1719:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1711:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "_totoken",
												"nameLocation": "1740:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1732:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:39:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:0:0"
									},
									"scope": 482,
									"src": "1698:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "2065:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 173,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2084:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2084:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 175,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "2098:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2084:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2106:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2076:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2076:42:0"
											},
											{
												"id": 180,
												"nodeType": "PlaceholderStatement",
												"src": "2129:1:0"
											}
										]
									},
									"id": 182,
									"name": "onlyOwner",
									"nameLocation": "2053:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:2:0"
									},
									"src": "2044:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "2299:42:0",
										"statements": [
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "2314:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 190,
														"name": "_ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "2322:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2314:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "2314:14:0"
											}
										]
									},
									"functionSelector": "b2237ba3",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 187,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 186,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "2289:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2289:9:0"
										}
									],
									"name": "setRatio",
									"nameLocation": "2258:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2272:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2267:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2266:13:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2299:0:0"
									},
									"scope": 482,
									"src": "2249:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "2400:1785:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 205,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2443:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 209,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2463:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$482",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$482",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2455:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 207,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2455:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2455:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 211,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 202,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2418:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 201,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2411:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2411:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "2411:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2411:67:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 215,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2503:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2503:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 219,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2523:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$482",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$482",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2515:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 217,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2515:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2515:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "Trasfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2495:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "EmitStatement",
												"src": "2490:48:0"
											},
											{
												"expression": {
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 224,
														"name": "max_last_a_token_reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "2643:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 225,
														"name": "max_a_token_reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "2669:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2643:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2643:44:0"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "proportion",
														"nameLocation": "2746:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "2741:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 228,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2741:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"nodeType": "VariableDeclarationStatement",
												"src": "2741:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 231,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2771:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2786:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2771:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 245,
												"nodeType": "IfStatement",
												"src": "2767:189:0",
												"trueBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "2789:167:0",
													"statements": [
														{
															"expression": {
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 234,
																	"name": "proportion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "2891:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 235,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "2904:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(33 digits omitted)...0000"
																			},
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2912:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3430",
																				"id": 237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2916:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_40_by_1",
																					"typeString": "int_const 40"
																				},
																				"value": "40"
																			},
																			"src": "2912:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(33 digits omitted)...0000"
																			}
																		},
																		"src": "2904:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 240,
																		"name": "stakeSupple",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 76,
																		"src": "2921:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2904:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2891:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 243,
															"nodeType": "ExpressionStatement",
															"src": "2891:41:0"
														}
													]
												}
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "current_max_a_token_reward",
														"nameLocation": "3082:26:0",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "3077:31:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 246,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3077:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 248,
																	"name": "set_block_time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "3112:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 249,
																	"name": "max_last_stake_time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "3129:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3112:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 251,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3111:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 252,
														"name": "proportion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "3151:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3111:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3077:84:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 255,
														"name": "max_a_token_reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "3297:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 256,
															"name": "max_a_token_reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3318:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 257,
															"name": "current_max_a_token_reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3339:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3318:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3297:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "3297:68:0"
											},
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 261,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "3546:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 264,
															"indexExpression": {
																"expression": {
																	"id": 262,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3555:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3555:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3546:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "3546:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 266,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "3589:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 269,
																"indexExpression": {
																	"expression": {
																		"id": 267,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3598:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3598:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3589:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$117_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "last_totoken_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 114,
															"src": "3589:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 271,
																						"name": "max_a_token_reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 80,
																						"src": "3633:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 272,
																						"name": "max_last_a_token_reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 84,
																						"src": "3654:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3633:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 274,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3632:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 275,
																					"name": "User_Map",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 122,
																					"src": "3680:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																						"typeString": "mapping(address => struct StakeContract.User storage ref)"
																					}
																				},
																				"id": 278,
																				"indexExpression": {
																					"expression": {
																						"id": 276,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3689:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3689:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3680:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$117_storage",
																					"typeString": "struct StakeContract.User storage ref"
																				}
																			},
																			"id": 279,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakeNumber",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 110,
																			"src": "3680:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3632:80:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 281,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3631:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(33 digits omitted)...0000"
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3716:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3430",
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3720:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_40_by_1",
																		"typeString": "int_const 40"
																	},
																	"value": "40"
																},
																"src": "3716:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(33 digits omitted)...0000"
																}
															},
															"src": "3631:91:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3589:133:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3546:176:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "3546:176:0"
											},
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 289,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "3770:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 292,
															"indexExpression": {
																"expression": {
																	"id": 290,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3779:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3779:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3770:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "3770:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 294,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "3806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3770:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "3770:43:0"
											},
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "3858:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 298,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "3873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3858:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "3858:22:0"
											},
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 301,
														"name": "max_last_stake_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "3961:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 302,
														"name": "set_block_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "3983:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3961:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "3961:36:0"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 305,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "4090:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 308,
															"indexExpression": {
																"expression": {
																	"id": 306,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4099:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4090:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 309,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "user_a_token_reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "4090:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 310,
														"name": "max_a_token_reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "4133:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4090:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "4090:61:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4169:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 200,
												"id": 314,
												"nodeType": "Return",
												"src": "4162:11:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "2358:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2364:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:14:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2394:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:6:0"
									},
									"scope": 482,
									"src": "2349:1836:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "4221:595:0",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "harvest_total_number",
														"nameLocation": "4383:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "4378:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4378:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 321,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "4406:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 324,
															"indexExpression": {
																"expression": {
																	"id": 322,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4415:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4415:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4406:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "4406:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "max_a_token_reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "4449:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 327,
																				"name": "User_Map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 122,
																				"src": "4470:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																					"typeString": "mapping(address => struct StakeContract.User storage ref)"
																				}
																			},
																			"id": 330,
																			"indexExpression": {
																				"expression": {
																					"id": 328,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4479:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4479:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4470:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$117_storage",
																				"typeString": "struct StakeContract.User storage ref"
																			}
																		},
																		"id": 331,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "user_a_token_reward",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 116,
																		"src": "4470:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4449:61:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 333,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4448:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 334,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "4513:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 337,
																"indexExpression": {
																	"expression": {
																		"id": 335,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4522:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4522:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4513:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$117_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 110,
															"src": "4513:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4448:97:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4406:139:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4378:167:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 346,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4581:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4581:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "harvest_total_number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "4593:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 343,
																	"name": "totoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "4563:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 342,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "4556:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4556:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "4556:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4556:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "4556:58:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 352,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4639:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4639:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "harvest_total_number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "4651:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 351,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "4630:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4630:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "EmitStatement",
												"src": "4625:47:0"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 357,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "4683:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 360,
															"indexExpression": {
																"expression": {
																	"id": 358,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4692:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4692:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4683:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "4683:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4725:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4683:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "4683:43:0"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 365,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "4737:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 368,
															"indexExpression": {
																"expression": {
																	"id": 366,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4746:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4746:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4737:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "user_a_token_reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "4737:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 370,
														"name": "max_a_token_reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "4780:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4737:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "4737:61:0"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "4204:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4211:2:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4221:0:0"
									},
									"scope": 482,
									"src": "4195:621:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "4858:703:0",
										"statements": [
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "harvest_total_number",
														"nameLocation": "4874:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "4869:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4869:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 379,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "4897:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 382,
															"indexExpression": {
																"expression": {
																	"id": 380,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4906:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4906:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4897:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "4897:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 384,
																		"name": "max_a_token_reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "4940:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 385,
																				"name": "User_Map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 122,
																				"src": "4961:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																					"typeString": "mapping(address => struct StakeContract.User storage ref)"
																				}
																			},
																			"id": 388,
																			"indexExpression": {
																				"expression": {
																					"id": 386,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4970:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4970:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4961:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$117_storage",
																				"typeString": "struct StakeContract.User storage ref"
																			}
																		},
																		"id": 389,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "user_a_token_reward",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 116,
																		"src": "4961:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4940:61:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 391,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4939:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 392,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "5004:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 395,
																"indexExpression": {
																	"expression": {
																		"id": 393,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5013:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5013:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5004:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$117_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 110,
															"src": "5004:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4939:97:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4897:139:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4869:167:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 404,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5072:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5072:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "harvest_total_number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5084:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 401,
																	"name": "totoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "5054:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 400,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "5047:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5047:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "5047:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5047:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "5047:58:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 410,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5130:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5130:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "harvest_total_number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5142:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "5121:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5121:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "EmitStatement",
												"src": "5116:47:0"
											},
											{
												"expression": {
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 415,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "5174:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 418,
															"indexExpression": {
																"expression": {
																	"id": 416,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5183:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5183:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5174:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "5174:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5216:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5174:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "5174:43:0"
											},
											{
												"expression": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 423,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "5228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 426,
															"indexExpression": {
																"expression": {
																	"id": 424,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5237:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5228:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "user_a_token_reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "5228:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 428,
														"name": "max_a_token_reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "5271:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5228:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "5228:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 435,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5330:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5330:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 437,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "5342:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 440,
																"indexExpression": {
																	"expression": {
																		"id": 438,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5351:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5351:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5342:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$117_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 110,
															"src": "5342:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 432,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "5309:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 431,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "5302:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5302:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "5302:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5302:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "5302:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 445,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5401:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5401:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 447,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "5413:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 450,
																"indexExpression": {
																	"expression": {
																		"id": 448,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5422:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5422:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5413:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$117_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 110,
															"src": "5413:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 444,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "5392:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5392:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "EmitStatement",
												"src": "5387:59:0"
											},
											{
												"expression": {
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 454,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "5457:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 455,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "5472:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 458,
															"indexExpression": {
																"expression": {
																	"id": 456,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5481:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5481:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5472:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "5472:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5457:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "5457:47:0"
											},
											{
												"expression": {
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 462,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "5515:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$117_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 465,
															"indexExpression": {
																"expression": {
																	"id": 463,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5524:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5524:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5515:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$117_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "5515:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5515:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "5515:36:0"
											}
										]
									},
									"functionSelector": "7634f260",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawharvest",
									"nameLocation": "4833:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4848:2:0"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4858:0:0"
									},
									"scope": 482,
									"src": "4824:737:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "5615:46:0",
										"statements": [
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "set_block_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "5626:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 477,
														"name": "_blocktime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "5643:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5626:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "5626:27:0"
											}
										]
									},
									"functionSelector": "c5c4a79c",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setblocktime",
									"nameLocation": "5578:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "_blocktime",
												"nameLocation": "5596:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5591:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5591:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5590:17:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5615:0:0"
									},
									"scope": 482,
									"src": "5569:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 483,
							"src": "730:4934:0",
							"usedErrors": []
						}
					],
					"src": "36:5686:0"
				},
				"id": 0
			}
		}
	}
}