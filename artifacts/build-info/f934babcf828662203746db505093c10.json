{
	"id": "f934babcf828662203746db505093c10",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"定息矿池-进阶.sol": {
				"content": " // SPDX-License-Identifier: MIT  \r\npragma solidity ^0.8.6;\r\n\r\nimport \"./safeMath/safemath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n\r\ncontract StakeContract {\r\n    using SafeMath for uint;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // 利息\r\n    uint public ratio;\r\n    // 质押代币 \r\n    address public staketoken;\r\n    // 奖励代币\r\n    address public rewardtoken;\r\n    // 质押总数\r\n    uint public staketotal;\r\n    address public owner;\r\n\r\n    struct User {\r\n        // 用户质押数量\r\n        uint stakeNumber;\r\n        // 上次质押时间\r\n        uint last_Stake_Time;\r\n        // 上次累计未领取奖励代币数量\r\n        uint last_totoken_ratio;  \r\n        // 所有可领取奖励代币数量\r\n        uint whole_ratio;\r\n        // 上次收益时间\r\n        uint last_totoken_Time;\r\n    }\r\n\r\n    mapping(address => User) public User_Map;\r\n\r\n    constructor (address _staketoken) {\r\n        owner = msg.sender;\r\n        require(_staketoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        staketoken = _staketoken;\r\n        rewardtoken = _staketoken;\r\n    }\r\n\r\n    // 设置年化利息\r\n    function setratio(uint _ratio) external {\r\n        ratio = _ratio;\r\n    }\r\n\r\n    // 质押方法\r\n    function deposit(uint _amount) public returns (bool) {\r\n        // 判断用户余额是否大于质押数量\r\n        require(IERC20(staketoken).balanceOf(msg.sender) > _amount, \"Balance Insufficient\");\r\n        // 用户发送代币\r\n        IERC20(staketoken).safeTransferFrom(msg.sender, address(this), _amount);\r\n        // 计算上次累计未领取奖励代币数量\r\n        uint unClime_Reward_Token_Number = (block.timestamp.sub(User_Map[msg.sender].last_Stake_Time))\r\n        .mul((User_Map[msg.sender].stakeNumber.mul(ratio).div(100))\r\n        .div(31536000));\r\n        // 将每次的上次未领取奖励代币数量累计起来\r\n        User_Map[msg.sender].last_totoken_ratio += unClime_Reward_Token_Number;\r\n        // 每次质押需要更新用户质押数量\r\n        User_Map[msg.sender].stakeNumber += _amount;\r\n        // 每次质押将z\r\n        User_Map[msg.sender].last_Stake_Time = block.timestamp;\r\n        staketotal += _amount;\r\n        User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time;\r\n        return (true);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"safeMath/safemath.sol": {
				"content": " // SPDX-License-Identifier: MIT  \r\npragma solidity ^0.8.6;\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\ncontract math {\r\n    using SafeMath for uint;\r\n\r\n    function matha(uint _a, uint _b) public view returns (uint)  {\r\n        uint c = _a.add(_b);\r\n        return c;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122002b2e2e234e9937f011fbd7b24b6f5acb84e9934ee08829f0a74702ece334aee64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122002b2e2e234e9937f011fbd7b24b6f5acb84e9934ee08829f0a74702ece334aee64736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xB2 0xE2 0xE2 CALLVALUE 0xE9 SWAP4 PUSH32 0x11FBD7B24B6F5ACB84E9934EE08829F0A74702ECE334AEE64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122002b2e2e234e9937f011fbd7b24b6f5acb84e9934ee08829f0a74702ece334aee64736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xB2 0xE2 0xE2 CALLVALUE 0xE9 SWAP4 PUSH32 0x11FBD7B24B6F5ACB84E9934EE08829F0A74702ECE334AEE64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002b2e2e234e9937f011fbd7b24b6f5acb84e9934ee08829f0a74702ece334aee64736f6c634300080f0033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"safeMath/safemath.sol",
								"定息矿池-进阶.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209c04b831aac689088ded863f1485f0f5f3c68efcc39fd774c35c7d3466935d9164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c04b831aac689088ded863f1485f0f5f3c68efcc39fd774c35c7d3466935d9164736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 DIV 0xB8 BALANCE 0xAA 0xC6 DUP10 ADDMOD DUP14 0xED DUP7 EXTCODEHASH EQ DUP6 CREATE CREATE2 RETURN 0xC6 DUP15 0xFC 0xC3 SWAP16 0xD7 PUSH21 0xC35C7D3466935D9164736F6C634300080F00330000 ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c04b831aac689088ded863f1485f0f5f3c68efcc39fd774c35c7d3466935d9164736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 DIV 0xB8 BALANCE 0xAA 0xC6 DUP10 ADDMOD DUP14 0xED DUP7 EXTCODEHASH EQ DUP6 CREATE CREATE2 RETURN 0xC6 DUP15 0xFC 0xC3 SWAP16 0xD7 PUSH21 0xC35C7D3466935D9164736F6C634300080F00330000 ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c04b831aac689088ded863f1485f0f5f3c68efcc39fd774c35c7d3466935d9164736f6c634300080f0033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"safeMath/safemath.sol",
								"定息矿池-进阶.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"safeMath/safemath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"safeMath/safemath.sol\":63:577  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"safeMath/safemath.sol\":63:577  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b44cca71dd0fd40e7fd306b93d7b5bb17b40d498c21bd5011dbfdf2c47e95cb264736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b44cca71dd0fd40e7fd306b93d7b5bb17b40d498c21bd5011dbfdf2c47e95cb264736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x4C 0xCA PUSH18 0xDD0FD40E7FD306B93D7B5BB17B40D498C21B 0xD5 ADD SAR 0xBF 0xDF 0x2C SELFBALANCE 0xE9 0x5C 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "63:514:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;63:514:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b44cca71dd0fd40e7fd306b93d7b5bb17b40d498c21bd5011dbfdf2c47e95cb264736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x4C 0xCA PUSH18 0xDD0FD40E7FD306B93D7B5BB17B40D498C21B 0xD5 ADD SAR 0xBF 0xDF 0x2C SELFBALANCE 0xE9 0x5C 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "63:514:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 577,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 63,
									"end": 577,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b44cca71dd0fd40e7fd306b93d7b5bb17b40d498c21bd5011dbfdf2c47e95cb264736f6c634300080f0033",
									".code": [
										{
											"begin": 63,
											"end": 577,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 63,
											"end": 577,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 63,
											"end": 577,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 63,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 577,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 63,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 577,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 63,
											"end": 577,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"safeMath/safemath.sol",
								"定息矿池-进阶.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"safeMath/safemath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"safeMath/safemath.sol\":{\"keccak256\":\"0x97fc4ad193b2a914edb17b5e2e6ca80c5afb817413db1da916fc00694960325a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6018ff050520f0291861aa0b68d6e9369a1e46e55cdd7fe95afac6eae3ff8274\",\"dweb:/ipfs/QmYaYCoStbzohrcbL4qdL4h93DJ8UTyhwJCinnKSb7KUBr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"math": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_b",
									"type": "uint256"
								}
							],
							"name": "matha",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"safeMath/safemath.sol\":583:757  contract math {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"safeMath/safemath.sol\":583:757  contract math {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x803ab3a9\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"safeMath/safemath.sol\":636:754  function matha(uint _a, uint _b) public view returns (uint)  {... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":413:438   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":386:404   */\n      add\n        /* \"safeMath/safemath.sol\":636:754  function matha(uint _a, uint _b) public view returns (uint)  {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"safeMath/safemath.sol\":690:694  uint */\n      0x00\n      dup1\n        /* \"safeMath/safemath.sol\":717:727  _a.add(_b) */\n      tag_11\n        /* \"safeMath/safemath.sol\":717:719  _a */\n      dup5\n        /* \"safeMath/safemath.sol\":724:726  _b */\n      dup5\n        /* \"safeMath/safemath.sol\":717:723  _a.add */\n      tag_12\n        /* \"safeMath/safemath.sol\":717:727  _a.add(_b) */\n      jump\t// in\n    tag_11:\n        /* \"safeMath/safemath.sol\":708:727  uint c = _a.add(_b) */\n      swap2\n      pop\n      pop\n        /* \"safeMath/safemath.sol\":636:754  function matha(uint _a, uint _b) public view returns (uint)  {... */\n    tag_10:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"safeMath/safemath.sol\":87:201  function add(uint a, uint b) internal pure returns (uint c) {... */\n    tag_12:\n        /* \"safeMath/safemath.sol\":139:145  uint c */\n      0x00\n        /* \"safeMath/safemath.sol\":162:167  a + b */\n      tag_14\n        /* \"safeMath/safemath.sol\":166:167  b */\n      dup3\n        /* \"safeMath/safemath.sol\":162:163  a */\n      dup5\n        /* \"safeMath/safemath.sol\":162:167  a + b */\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"safeMath/safemath.sol\":158:167  c = a + b */\n      swap1\n      pop\n        /* \"safeMath/safemath.sol\":191:192  a */\n      dup3\n        /* \"safeMath/safemath.sol\":186:187  c */\n      dup2\n        /* \"safeMath/safemath.sol\":186:192  c >= a */\n      lt\n      iszero\n        /* \"safeMath/safemath.sol\":178:193  require(c >= a) */\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"#utility.yul\":14:262   */\n    tag_6:\n        /* \"#utility.yul\":82:88   */\n      0x00\n        /* \"#utility.yul\":90:96   */\n      dup1\n        /* \"#utility.yul\":143:145   */\n      0x40\n        /* \"#utility.yul\":131:140   */\n      dup4\n        /* \"#utility.yul\":122:129   */\n      dup6\n        /* \"#utility.yul\":118:141   */\n      sub\n        /* \"#utility.yul\":114:146   */\n      slt\n        /* \"#utility.yul\":111:163   */\n      iszero\n      tag_19\n      jumpi\n        /* \"#utility.yul\":159:160   */\n      0x00\n        /* \"#utility.yul\":156:157   */\n      dup1\n        /* \"#utility.yul\":149:161   */\n      revert\n        /* \"#utility.yul\":111:163   */\n    tag_19:\n      pop\n      pop\n        /* \"#utility.yul\":182:205   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":252:254   */\n      0x20\n        /* \"#utility.yul\":237:255   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":224:256   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":14:262   */\n      jump\t// out\n        /* \"#utility.yul\":449:674   */\n    tag_15:\n        /* \"#utility.yul\":489:492   */\n      0x00\n        /* \"#utility.yul\":520:521   */\n      dup3\n        /* \"#utility.yul\":516:522   */\n      not\n        /* \"#utility.yul\":513:514   */\n      dup3\n        /* \"#utility.yul\":510:523   */\n      gt\n        /* \"#utility.yul\":507:643   */\n      iszero\n      tag_22\n      jumpi\n        /* \"#utility.yul\":565:575   */\n      0x4e487b71\n        /* \"#utility.yul\":560:563   */\n      0xe0\n        /* \"#utility.yul\":556:576   */\n      shl\n        /* \"#utility.yul\":553:554   */\n      0x00\n        /* \"#utility.yul\":546:577   */\n      mstore\n        /* \"#utility.yul\":600:604   */\n      0x11\n        /* \"#utility.yul\":597:598   */\n      0x04\n        /* \"#utility.yul\":590:605   */\n      mstore\n        /* \"#utility.yul\":628:632   */\n      0x24\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":618:633   */\n      revert\n        /* \"#utility.yul\":507:643   */\n    tag_22:\n      pop\n        /* \"#utility.yul\":659:668   */\n      add\n      swap1\n        /* \"#utility.yul\":449:674   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a8d64cdb2abd025755119b9057074350bfd337f8b3b308246959218283e4b82864736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060f78061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063803ab3a914602d575b600080fd5b603c6038366004607b565b604e565b60405190815260200160405180910390f35b600080605984846063565b9150505b92915050565b6000606d8284609c565b905082811015605d57600080fd5b60008060408385031215608d57600080fd5b50508035926020909101359150565b6000821982111560bc57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220a8d64cdb2abd025755119b9057074350bfd337f8b3b308246959218283e4b82864736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF7 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x803AB3A9 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x7B JUMP JUMPDEST PUSH1 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x59 DUP5 DUP5 PUSH1 0x63 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6D DUP3 DUP5 PUSH1 0x9C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH1 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH1 0xBC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xD6 0x4C 0xDB 0x2A 0xBD MUL JUMPI SSTORE GT SWAP12 SWAP1 JUMPI SMOD NUMBER POP 0xBF 0xD3 CALLDATACOPY 0xF8 0xB3 0xB3 ADDMOD 0x24 PUSH10 0x59218283E4B82864736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "583:174:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_713": {
									"entryPoint": 99,
									"id": 713,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@matha_808": {
									"entryPoint": 78,
									"id": 808,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:676:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "101:161:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "147:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "156:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "159:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "149:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "149:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "149:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "122:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "131:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "118:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "118:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "143:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "114:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:32:6"
															},
															"nodeType": "YulIf",
															"src": "111:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "172:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "182:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "182:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "214:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "241:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "224:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "214:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "59:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "70:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "82:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "90:6:6",
														"type": ""
													}
												],
												"src": "14:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "368:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "378:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "390:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "386:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "378:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "420:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "431:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "413:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "413:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "337:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "348:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "359:4:6",
														"type": ""
													}
												],
												"src": "267:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "497:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "532:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "553:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "560:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "565:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "556:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "556:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "546:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "546:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "546:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "597:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "600:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "590:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "590:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "625:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "628:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "618:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "618:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "618:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "513:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "520:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "516:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "510:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:13:6"
															},
															"nodeType": "YulIf",
															"src": "507:136:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "652:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "663:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "666:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "659:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "652:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "480:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "483:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "489:3:6",
														"type": ""
													}
												],
												"src": "449:225:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063803ab3a914602d575b600080fd5b603c6038366004607b565b604e565b60405190815260200160405180910390f35b600080605984846063565b9150505b92915050565b6000606d8284609c565b905082811015605d57600080fd5b60008060408385031215608d57600080fd5b50508035926020909101359150565b6000821982111560bc57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220a8d64cdb2abd025755119b9057074350bfd337f8b3b308246959218283e4b82864736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x803AB3A9 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x7B JUMP JUMPDEST PUSH1 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x59 DUP5 DUP5 PUSH1 0x63 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6D DUP3 DUP5 PUSH1 0x9C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH1 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH1 0xBC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xD6 0x4C 0xDB 0x2A 0xBD MUL JUMPI SSTORE GT SWAP12 SWAP1 JUMPI SMOD NUMBER POP 0xBF 0xD3 CALLDATACOPY 0xF8 0xB3 0xB3 ADDMOD 0x24 PUSH10 0x59218283E4B82864736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "583:174:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:118;;;;;;:::i;:::-;;:::i;:::-;;;413:25:6;;;401:2;386:18;636:118:4;;;;;;;;690:4;;717:10;:2;724;717:6;:10::i;:::-;708:19;-1:-1:-1;;636:118:4;;;;;:::o;87:114::-;139:6;162:5;166:1;162;:5;:::i;:::-;158:9;;191:1;186;:6;;178:15;;;;;14:248:6;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:6;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:6:o;449:225::-;489:3;520:1;516:6;513:1;510:13;507:136;;;565:10;560:3;556:20;553:1;546:31;600:4;597:1;590:15;628:4;625:1;618:15;507:136;-1:-1:-1;659:9:6;;449:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "49400",
								"executionCost": "99",
								"totalCost": "49499"
							},
							"external": {
								"matha(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 583,
									"end": 757,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 583,
									"end": 757,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 583,
									"end": 757,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 583,
									"end": 757,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 583,
									"end": 757,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 583,
									"end": 757,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 583,
									"end": 757,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 583,
									"end": 757,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 583,
									"end": 757,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 583,
									"end": 757,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 583,
									"end": 757,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a8d64cdb2abd025755119b9057074350bfd337f8b3b308246959218283e4b82864736f6c634300080f0033",
									".code": [
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "803AB3A9"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 757,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 583,
											"end": 757,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 636,
											"end": 754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 636,
											"end": 754,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 636,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 636,
											"end": 754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 413,
											"end": 438,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 438,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 413,
											"end": 438,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 636,
											"end": 754,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 690,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 717,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 717,
											"end": 719,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 724,
											"end": 726,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 717,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 717,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 717,
											"end": 727,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 717,
											"end": 727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 727,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 636,
											"end": 754,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 636,
											"end": 754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 636,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 87,
											"end": 201,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 87,
											"end": 201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 162,
											"end": 163,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 162,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 162,
											"end": 167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 162,
											"end": 167,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 162,
											"end": 167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 158,
											"end": 167,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 158,
											"end": 167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 191,
											"end": 192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 186,
											"end": 187,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 186,
											"end": 192,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 186,
											"end": 192,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 178,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 178,
											"end": 193,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 178,
											"end": 193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 178,
											"end": 193,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14,
											"end": 262,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 88,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 96,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 140,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 122,
											"end": 129,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 118,
											"end": 141,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 114,
											"end": 146,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 111,
											"end": 163,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 111,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 111,
											"end": 163,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 159,
											"end": 160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 157,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 149,
											"end": 161,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 111,
											"end": 163,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 111,
											"end": 163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 182,
											"end": 205,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 182,
											"end": 205,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 254,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 237,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 237,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 224,
											"end": 256,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 224,
											"end": 256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 449,
											"end": 674,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 449,
											"end": 674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 489,
											"end": 492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 521,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 516,
											"end": 522,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 513,
											"end": 514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 510,
											"end": 523,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 643,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 507,
											"end": 643,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 575,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 560,
											"end": 563,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 556,
											"end": 576,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 553,
											"end": 554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 590,
											"end": 605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 632,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 633,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 643,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 507,
											"end": 643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 659,
											"end": 668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 659,
											"end": 668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 449,
											"end": 674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"safeMath/safemath.sol",
								"定息矿池-进阶.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"matha(uint256,uint256)": "803ab3a9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"}],\"name\":\"matha\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"safeMath/safemath.sol\":\"math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"safeMath/safemath.sol\":{\"keccak256\":\"0x97fc4ad193b2a914edb17b5e2e6ca80c5afb817413db1da916fc00694960325a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6018ff050520f0291861aa0b68d6e9369a1e46e55cdd7fe95afac6eae3ff8274\",\"dweb:/ipfs/QmYaYCoStbzohrcbL4qdL4h93DJ8UTyhwJCinnKSb7KUBr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"定息矿池-进阶.sol": {
				"StakeContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staketoken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "User_Map",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakeNumber",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_Stake_Time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "whole_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_Time",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardtoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								}
							],
							"name": "setratio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "staketoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "staketotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":169:2346  contract StakeContract {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":912:1118  constructor (address _staketoken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":957:962  owner */\n  0x04\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":957:975  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":965:975  msg.sender */\n  caller\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":957:975  owner = msg.sender */\n  or\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":994:1019  _staketoken != address(0) */\n  dup2\n  and\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":986:1039  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":986:1039  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x10\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:608   */\n  mstore\n    /* \"#utility.yul\":625:643   */\n  0x64\n  add\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":986:1039  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1050:1060  staketoken */\n  0x01\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1050:1074  staketoken = _staketoken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1085:1096  rewardtoken */\n  0x02\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1085:1110  rewardtoken = _staketoken */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":169:2346  contract StakeContract {... */\n  jump(tag_10)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_12:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_13\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_13:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:649   */\ntag_10:\n    /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":169:2346  contract StakeContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":169:2346  contract StakeContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdab2997b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe8221917\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x1afaa6e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6dff132e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x71ca337d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8c93ecff\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1153:1226  function setratio(uint _ratio) external {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1204:1209  ratio */\n      0x00\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1204:1218  ratio = _ratio */\n      sstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1153:1226  function setratio(uint _ratio) external {... */\n      jump\n    tag_12:\n      stop\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":378:404  address public rewardtoken */\n    tag_4:\n      sload(0x02)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":363:395   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":345:396   */\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":378:404  address public rewardtoken */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":279:296  uint public ratio */\n    tag_5:\n      tag_20\n      sload(0x00)\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":553:578   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":541:543   */\n      0x20\n        /* \"#utility.yul\":526:544   */\n      add\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":279:296  uint public ratio */\n      tag_18\n        /* \"#utility.yul\":407:584   */\n      jump\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":863:903  mapping(address => User) public User_Map */\n    tag_6:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      dup6\n      jump\n    tag_24:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1139:1164   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":1195:1197   */\n      0x20\n        /* \"#utility.yul\":1180:1198   */\n      dup7\n      add\n        /* \"#utility.yul\":1173:1207   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1223:1241   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":1216:1250   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1281:1283   */\n      0x60\n        /* \"#utility.yul\":1266:1284   */\n      dup4\n      add\n        /* \"#utility.yul\":1259:1293   */\n      mstore\n        /* \"#utility.yul\":1324:1327   */\n      0x80\n        /* \"#utility.yul\":1309:1328   */\n      dup3\n      add\n        /* \"#utility.yul\":1302:1337   */\n      mstore\n        /* \"#utility.yul\":1126:1129   */\n      0xa0\n        /* \"#utility.yul\":1111:1130   */\n      add\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":863:903  mapping(address => User) public User_Map */\n      tag_18\n        /* \"#utility.yul\":880:1343   */\n      jump\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":461:481  address public owner */\n    tag_7:\n      sload(0x04)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1255:2333  function deposit(uint _amount) public returns (bool) {... */\n    tag_8:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1513:1527   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1506:1528   */\n      iszero\n        /* \"#utility.yul\":1488:1529   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1476:1478   */\n      0x20\n        /* \"#utility.yul\":1461:1479   */\n      add\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1255:2333  function deposit(uint _amount) public returns (bool) {... */\n      tag_18\n        /* \"#utility.yul\":1348:1535   */\n      jump\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":325:350  address public staketoken */\n    tag_9:\n      sload(0x01)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":432:454  uint public staketotal */\n    tag_10:\n      tag_20\n      sload(0x03)\n      dup2\n      jump\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1255:2333  function deposit(uint _amount) public returns (bool) {... */\n    tag_35:\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1389:1399  staketoken */\n      sload(0x01)\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1382:1422  IERC20(staketoken).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1411:1421  msg.sender */\n      caller\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1382:1422  IERC20(staketoken).balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1302:1306  bool */\n      0x00\n      swap2\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1425:1432  _amount */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1389:1399  staketoken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1382:1410  IERC20(staketoken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1382:1422  IERC20(staketoken).balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1382:1432  IERC20(staketoken).balanceOf(msg.sender) > _amount */\n      gt\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1374:1457  require(IERC20(staketoken).balanceOf(msg.sender) > _amount, \"Balance Insufficient\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1931:1933   */\n      0x20\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1374:1457  require(IERC20(staketoken).balanceOf(msg.sender) > _amount, \"Balance Insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1913:1934   */\n      mstore\n        /* \"#utility.yul\":1970:1972   */\n      0x14\n        /* \"#utility.yul\":1950:1968   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1943:1973   */\n      mstore\n      shl(0x62, 0x10985b185b98d948125b9cdd59999a58da595b9d)\n        /* \"#utility.yul\":1989:2007   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1982:2032   */\n      mstore\n        /* \"#utility.yul\":2049:2067   */\n      0x64\n      add\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1374:1457  require(IERC20(staketoken).balanceOf(msg.sender) > _amount, \"Balance Insufficient\") */\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1506:1516  staketoken */\n      sload(0x01)\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1499:1570  IERC20(staketoken).safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_54\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1506:1516  staketoken */\n      and\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1535:1545  msg.sender */\n      caller\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1555:1559  this */\n      address\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1562:1569  _amount */\n      dup6\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1499:1534  IERC20(staketoken).safeTransferFrom */\n      tag_55\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1499:1570  IERC20(staketoken).safeTransferFrom(msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_54:\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1639:1671  uint unClime_Reward_Token_Number */\n      0x00\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1786:1791  ratio */\n      dup1\n      sload\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1758:1768  msg.sender */\n      caller\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1769  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1757  User_Map */\n      0x05\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1769  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1781  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1674:1827  (block.timestamp.sub(User_Map[msg.sender].last_Stake_Time))... */\n      tag_56\n      swap2\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1748:1826  (User_Map[msg.sender].stakeNumber.mul(ratio).div(100))... */\n      tag_57\n      swap2\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1817:1825  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1801  User_Map[msg.sender].stakeNumber.mul(ratio).div(100) */\n      tag_59\n      swap2\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1797:1800  100 */\n      0x64\n      swap2\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1801  User_Map[msg.sender].stakeNumber.mul(ratio).div(100) */\n      dup4\n      swap2\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1781  User_Map[msg.sender].stakeNumber */\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1785  User_Map[msg.sender].stakeNumber.mul */\n      tag_60\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1792  User_Map[msg.sender].stakeNumber.mul(ratio) */\n      jump\t// in\n    tag_59:\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1796  User_Map[msg.sender].stakeNumber.mul(ratio).div */\n      swap1\n      tag_61\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1749:1801  User_Map[msg.sender].stakeNumber.mul(ratio).div(100) */\n      jump\t// in\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1748:1826  (User_Map[msg.sender].stakeNumber.mul(ratio).div(100))... */\n    tag_57:\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1704:1714  msg.sender */\n      caller\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1695:1715  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1695:1703  User_Map */\n      0x05\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1695:1715  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1695:1731  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1675:1732  block.timestamp.sub(User_Map[msg.sender].last_Stake_Time) */\n      tag_62\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1675:1690  block.timestamp */\n      timestamp\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1675:1694  block.timestamp.sub */\n      tag_63\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1675:1732  block.timestamp.sub(User_Map[msg.sender].last_Stake_Time) */\n      jump\t// in\n    tag_62:\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1674:1747  (block.timestamp.sub(User_Map[msg.sender].last_Stake_Time))... */\n      swap1\n      tag_60\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1674:1827  (block.timestamp.sub(User_Map[msg.sender].last_Stake_Time))... */\n      jump\t// in\n    tag_56:\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1917:1927  msg.sender */\n      caller\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1908:1928  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1908:1916  User_Map */\n      0x05\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1908:1928  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1908:1947  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1908:1978  User_Map[msg.sender].last_totoken_ratio += unClime_Reward_Token_Number */\n      dup1\n      sload\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1639:1827  uint unClime_Reward_Token_Number = (block.timestamp.sub(User_Map[msg.sender].last_Stake_Time))... */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1908:1947  User_Map[msg.sender].last_totoken_ratio */\n      swap1\n      swap2\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1908:1928  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1908:1978  User_Map[msg.sender].last_totoken_ratio += unClime_Reward_Token_Number */\n      tag_64\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1639:1827  uint unClime_Reward_Token_Number = (block.timestamp.sub(User_Map[msg.sender].last_Stake_Time))... */\n      dup5\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1908:1978  User_Map[msg.sender].last_totoken_ratio += unClime_Reward_Token_Number */\n      tag_65\n      jump\t// in\n    tag_64:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2053:2063  msg.sender */\n      caller\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2044:2064  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2044:2052  User_Map */\n      0x05\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2044:2064  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2044:2087  User_Map[msg.sender].stakeNumber += _amount */\n      dup1\n      sload\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2080:2087  _amount */\n      dup6\n      swap3\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2044:2064  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2044:2087  User_Map[msg.sender].stakeNumber += _amount */\n      tag_66\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2080:2087  _amount */\n      dup5\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2044:2087  User_Map[msg.sender].stakeNumber += _amount */\n      tag_65\n      jump\t// in\n    tag_66:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2136:2146  msg.sender */\n      caller\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2127:2147  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2127:2135  User_Map */\n      0x05\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2127:2147  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2166:2181  block.timestamp */\n      timestamp\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2127:2163  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2127:2181  User_Map[msg.sender].last_Stake_Time = block.timestamp */\n      sstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2192:2202  staketotal */\n      0x03\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2192:2213  staketotal += _amount */\n      dup1\n      sload\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2206:2213  _amount */\n      dup6\n      swap3\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2127:2147  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2192:2213  staketotal += _amount */\n      tag_67\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2206:2213  _amount */\n      dup5\n      swap1\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2192:2213  staketotal += _amount */\n      tag_65\n      jump\t// in\n    tag_67:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2274:2284  msg.sender */\n      caller\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2265:2285  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2265:2273  User_Map */\n      0x05\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2265:2285  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2265:2301  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      dup1\n      dup3\n      add\n      sload\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2224:2262  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      swap1\n      swap3\n      add\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2224:2301  User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":2265:2301  User_Map[msg.sender].last_Stake_Time */\n      swap4\n        /* \"\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0-\\xe8\\xbf\\x9b\\xe9\\x98\\xb6.sol\":1255:2333  function deposit(uint _amount) public returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2601:2616   */\n      dup6\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2583:2617   */\n      mstore\n        /* \"#utility.yul\":2653:2668   */\n      dup5\n      and\n        /* \"#utility.yul\":2633:2651   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2626:2669   */\n      mstore\n        /* \"#utility.yul\":2685:2703   */\n      0x64\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2678:2712   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2518:2536   */\n      0x84\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_69\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"safeMath/safemath.sol\":327:455  function mul(uint a, uint b) internal pure returns (uint c) {... */\n    tag_60:\n        /* \"safeMath/safemath.sol\":379:385  uint c */\n      0x00\n        /* \"safeMath/safemath.sol\":402:407  a * b */\n      tag_74\n        /* \"safeMath/safemath.sol\":406:407  b */\n      dup3\n        /* \"safeMath/safemath.sol\":402:403  a */\n      dup5\n        /* \"safeMath/safemath.sol\":402:407  a * b */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"safeMath/safemath.sol\":398:407  c = a * b */\n      swap1\n      pop\n        /* \"safeMath/safemath.sol\":426:432  a == 0 */\n      dup3\n      iszero\n      dup1\n        /* \"safeMath/safemath.sol\":426:446  a == 0 || c / a == b */\n      tag_76\n      jumpi\n      pop\n        /* \"safeMath/safemath.sol\":445:446  b */\n      dup2\n        /* \"safeMath/safemath.sol\":436:441  c / a */\n      tag_77\n        /* \"safeMath/safemath.sol\":440:441  a */\n      dup5\n        /* \"safeMath/safemath.sol\":436:437  c */\n      dup4\n        /* \"safeMath/safemath.sol\":436:441  c / a */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"safeMath/safemath.sol\":436:446  c / a == b */\n      eq\n        /* \"safeMath/safemath.sol\":426:446  a == 0 || c / a == b */\n    tag_76:\n        /* \"safeMath/safemath.sol\":418:447  require(a == 0 || c / a == b) */\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n        /* \"safeMath/safemath.sol\":327:455  function mul(uint a, uint b) internal pure returns (uint c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"safeMath/safemath.sol\":461:574  function div(uint a, uint b) internal pure returns (uint c) {... */\n    tag_61:\n        /* \"safeMath/safemath.sol\":513:519  uint c */\n      0x00\n        /* \"safeMath/safemath.sol\":544:545  0 */\n      dup1\n        /* \"safeMath/safemath.sol\":540:541  b */\n      dup3\n        /* \"safeMath/safemath.sol\":540:545  b > 0 */\n      gt\n        /* \"safeMath/safemath.sol\":532:546  require(b > 0) */\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n        /* \"safeMath/safemath.sol\":561:566  a / b */\n      tag_82\n        /* \"safeMath/safemath.sol\":565:566  b */\n      dup3\n        /* \"safeMath/safemath.sol\":561:562  a */\n      dup5\n        /* \"safeMath/safemath.sol\":561:566  a / b */\n      tag_78\n      jump\t// in\n    tag_82:\n        /* \"safeMath/safemath.sol\":557:566  c = a / b */\n      swap4\n        /* \"safeMath/safemath.sol\":461:574  function div(uint a, uint b) internal pure returns (uint c) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"safeMath/safemath.sol\":207:321  function sub(uint a, uint b) internal pure returns (uint c) {... */\n    tag_63:\n        /* \"safeMath/safemath.sol\":259:265  uint c */\n      0x00\n        /* \"safeMath/safemath.sol\":291:292  a */\n      dup3\n        /* \"safeMath/safemath.sol\":286:287  b */\n      dup3\n        /* \"safeMath/safemath.sol\":286:292  b <= a */\n      gt\n      iszero\n        /* \"safeMath/safemath.sol\":278:293  require(b <= a) */\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n        /* \"safeMath/safemath.sol\":308:313  a - b */\n      tag_82\n        /* \"safeMath/safemath.sol\":312:313  b */\n      dup3\n        /* \"safeMath/safemath.sol\":308:309  a */\n      dup5\n        /* \"safeMath/safemath.sol\":308:313  a - b */\n      tag_86\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      and\n      tag_89\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_93\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3732:3734   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3714:3735   */\n      mstore\n        /* \"#utility.yul\":3771:3773   */\n      0x2a\n        /* \"#utility.yul\":3751:3769   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3744:3774   */\n      mstore\n        /* \"#utility.yul\":3810:3844   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":3790:3808   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3783:3845   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":3861:3879   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3854:3894   */\n      mstore\n        /* \"#utility.yul\":3911:3930   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_52\n        /* \"#utility.yul\":3530:3936   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4143:4145   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4125:4146   */\n      mstore\n        /* \"#utility.yul\":4182:4184   */\n      0x26\n        /* \"#utility.yul\":4162:4180   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4155:4185   */\n      mstore\n        /* \"#utility.yul\":4221:4255   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":4201:4219   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4194:4256   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":4272:4290   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4265:4301   */\n      mstore\n        /* \"#utility.yul\":4318:4337   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_52\n        /* \"#utility.yul\":3941:4343   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4550:4552   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4532:4553   */\n      mstore\n        /* \"#utility.yul\":4589:4591   */\n      0x1d\n        /* \"#utility.yul\":4569:4587   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4562:4592   */\n      mstore\n        /* \"#utility.yul\":4628:4659   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":4608:4626   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4601:4660   */\n      mstore\n        /* \"#utility.yul\":4677:4695   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_52\n        /* \"#utility.yul\":4348:4701   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_112\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_111)\n    tag_112:\n      0x60\n      swap2\n      pop\n    tag_111:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_113\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_117\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_82)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_127:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:875   */\n    tag_26:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":701:703   */\n      0x20\n        /* \"#utility.yul\":689:698   */\n      dup3\n        /* \"#utility.yul\":680:687   */\n      dup5\n        /* \"#utility.yul\":676:699   */\n      sub\n        /* \"#utility.yul\":672:704   */\n      slt\n        /* \"#utility.yul\":669:721   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":717:718   */\n      0x00\n        /* \"#utility.yul\":714:715   */\n      dup1\n        /* \"#utility.yul\":707:719   */\n      revert\n        /* \"#utility.yul\":669:721   */\n    tag_131:\n        /* \"#utility.yul\":743:766   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":795:826   */\n      dup2\n      and\n        /* \"#utility.yul\":785:827   */\n      dup2\n      eq\n        /* \"#utility.yul\":775:845   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":841:842   */\n      0x00\n        /* \"#utility.yul\":838:839   */\n      dup1\n        /* \"#utility.yul\":831:843   */\n      revert\n        /* \"#utility.yul\":1540:1724   */\n    tag_50:\n        /* \"#utility.yul\":1610:1616   */\n      0x00\n        /* \"#utility.yul\":1663:1665   */\n      0x20\n        /* \"#utility.yul\":1651:1660   */\n      dup3\n        /* \"#utility.yul\":1642:1649   */\n      dup5\n        /* \"#utility.yul\":1638:1661   */\n      sub\n        /* \"#utility.yul\":1634:1666   */\n      slt\n        /* \"#utility.yul\":1631:1683   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1679:1680   */\n      0x00\n        /* \"#utility.yul\":1676:1677   */\n      dup1\n        /* \"#utility.yul\":1669:1681   */\n      revert\n        /* \"#utility.yul\":1631:1683   */\n    tag_136:\n      pop\n        /* \"#utility.yul\":1702:1718   */\n      mload\n      swap2\n        /* \"#utility.yul\":1540:1724   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2078:2205   */\n    tag_123:\n        /* \"#utility.yul\":2139:2149   */\n      0x4e487b71\n        /* \"#utility.yul\":2134:2137   */\n      0xe0\n        /* \"#utility.yul\":2130:2150   */\n      shl\n        /* \"#utility.yul\":2127:2128   */\n      0x00\n        /* \"#utility.yul\":2120:2151   */\n      mstore\n        /* \"#utility.yul\":2170:2174   */\n      0x11\n        /* \"#utility.yul\":2167:2168   */\n      0x04\n        /* \"#utility.yul\":2160:2175   */\n      mstore\n        /* \"#utility.yul\":2194:2198   */\n      0x24\n        /* \"#utility.yul\":2191:2192   */\n      0x00\n        /* \"#utility.yul\":2184:2199   */\n      revert\n        /* \"#utility.yul\":2210:2338   */\n    tag_65:\n        /* \"#utility.yul\":2250:2253   */\n      0x00\n        /* \"#utility.yul\":2281:2282   */\n      dup3\n        /* \"#utility.yul\":2277:2283   */\n      not\n        /* \"#utility.yul\":2274:2275   */\n      dup3\n        /* \"#utility.yul\":2271:2284   */\n      gt\n        /* \"#utility.yul\":2268:2307   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":2287:2305   */\n      tag_141\n      tag_123\n      jump\t// in\n    tag_141:\n      pop\n        /* \"#utility.yul\":2323:2332   */\n      add\n      swap1\n        /* \"#utility.yul\":2210:2338   */\n      jump\t// out\n        /* \"#utility.yul\":2723:2891   */\n    tag_75:\n        /* \"#utility.yul\":2763:2770   */\n      0x00\n        /* \"#utility.yul\":2829:2830   */\n      dup2\n        /* \"#utility.yul\":2825:2826   */\n      0x00\n        /* \"#utility.yul\":2821:2827   */\n      not\n        /* \"#utility.yul\":2817:2831   */\n      div\n        /* \"#utility.yul\":2814:2815   */\n      dup4\n        /* \"#utility.yul\":2811:2832   */\n      gt\n        /* \"#utility.yul\":2806:2807   */\n      dup3\n        /* \"#utility.yul\":2799:2808   */\n      iszero\n        /* \"#utility.yul\":2792:2809   */\n      iszero\n        /* \"#utility.yul\":2788:2833   */\n      and\n        /* \"#utility.yul\":2785:2856   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":2836:2854   */\n      tag_145\n      tag_123\n      jump\t// in\n    tag_145:\n      pop\n        /* \"#utility.yul\":2876:2885   */\n      mul\n      swap1\n        /* \"#utility.yul\":2723:2891   */\n      jump\t// out\n        /* \"#utility.yul\":2896:3113   */\n    tag_78:\n        /* \"#utility.yul\":2936:2937   */\n      0x00\n        /* \"#utility.yul\":2962:2963   */\n      dup3\n        /* \"#utility.yul\":2952:3084   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":3006:3016   */\n      0x4e487b71\n        /* \"#utility.yul\":3001:3004   */\n      0xe0\n        /* \"#utility.yul\":2997:3017   */\n      shl\n        /* \"#utility.yul\":2994:2995   */\n      0x00\n        /* \"#utility.yul\":2987:3018   */\n      mstore\n        /* \"#utility.yul\":3041:3045   */\n      0x12\n        /* \"#utility.yul\":3038:3039   */\n      0x04\n        /* \"#utility.yul\":3031:3046   */\n      mstore\n        /* \"#utility.yul\":3069:3073   */\n      0x24\n        /* \"#utility.yul\":3066:3067   */\n      0x00\n        /* \"#utility.yul\":3059:3074   */\n      revert\n        /* \"#utility.yul\":2952:3084   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":3098:3107   */\n      div\n      swap1\n        /* \"#utility.yul\":2896:3113   */\n      jump\t// out\n        /* \"#utility.yul\":3118:3243   */\n    tag_86:\n        /* \"#utility.yul\":3158:3162   */\n      0x00\n        /* \"#utility.yul\":3186:3187   */\n      dup3\n        /* \"#utility.yul\":3183:3184   */\n      dup3\n        /* \"#utility.yul\":3180:3188   */\n      lt\n        /* \"#utility.yul\":3177:3211   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":3191:3209   */\n      tag_150\n      tag_123\n      jump\t// in\n    tag_150:\n      pop\n        /* \"#utility.yul\":3228:3237   */\n      sub\n      swap1\n        /* \"#utility.yul\":3118:3243   */\n      jump\t// out\n        /* \"#utility.yul\":3248:3525   */\n    tag_92:\n        /* \"#utility.yul\":3315:3321   */\n      0x00\n        /* \"#utility.yul\":3368:3370   */\n      0x20\n        /* \"#utility.yul\":3356:3365   */\n      dup3\n        /* \"#utility.yul\":3347:3354   */\n      dup5\n        /* \"#utility.yul\":3343:3366   */\n      sub\n        /* \"#utility.yul\":3339:3371   */\n      slt\n        /* \"#utility.yul\":3336:3388   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":3384:3385   */\n      0x00\n        /* \"#utility.yul\":3381:3382   */\n      dup1\n        /* \"#utility.yul\":3374:3386   */\n      revert\n        /* \"#utility.yul\":3336:3388   */\n    tag_152:\n        /* \"#utility.yul\":3416:3425   */\n      dup2\n        /* \"#utility.yul\":3410:3426   */\n      mload\n        /* \"#utility.yul\":3469:3474   */\n      dup1\n        /* \"#utility.yul\":3462:3475   */\n      iszero\n        /* \"#utility.yul\":3455:3476   */\n      iszero\n        /* \"#utility.yul\":3448:3453   */\n      dup2\n        /* \"#utility.yul\":3445:3477   */\n      eq\n        /* \"#utility.yul\":3435:3495   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":3491:3492   */\n      0x00\n        /* \"#utility.yul\":3488:3489   */\n      dup1\n        /* \"#utility.yul\":3481:3493   */\n      revert\n        /* \"#utility.yul\":4706:4964   */\n    tag_124:\n        /* \"#utility.yul\":4778:4779   */\n      0x00\n        /* \"#utility.yul\":4788:4901   */\n    tag_158:\n        /* \"#utility.yul\":4802:4808   */\n      dup4\n        /* \"#utility.yul\":4799:4800   */\n      dup2\n        /* \"#utility.yul\":4796:4809   */\n      lt\n        /* \"#utility.yul\":4788:4901   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":4878:4889   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4872:4890   */\n      mload\n        /* \"#utility.yul\":4859:4870   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":4852:4891   */\n      mstore\n        /* \"#utility.yul\":4824:4826   */\n      0x20\n        /* \"#utility.yul\":4817:4827   */\n      add\n        /* \"#utility.yul\":4788:4901   */\n      jump(tag_158)\n    tag_160:\n        /* \"#utility.yul\":4919:4925   */\n      dup4\n        /* \"#utility.yul\":4916:4917   */\n      dup2\n        /* \"#utility.yul\":4913:4926   */\n      gt\n        /* \"#utility.yul\":4910:4958   */\n      iszero\n      tag_69\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":4954:4955   */\n      0x00\n        /* \"#utility.yul\":4936:4952   */\n      swap2\n      add\n        /* \"#utility.yul\":4929:4956   */\n      mstore\n        /* \"#utility.yul\":4706:4964   */\n      jump\t// out\n        /* \"#utility.yul\":4969:5243   */\n    tag_109:\n        /* \"#utility.yul\":5098:5101   */\n      0x00\n        /* \"#utility.yul\":5136:5142   */\n      dup3\n        /* \"#utility.yul\":5130:5143   */\n      mload\n        /* \"#utility.yul\":5152:5205   */\n      tag_163\n        /* \"#utility.yul\":5198:5204   */\n      dup2\n        /* \"#utility.yul\":5193:5196   */\n      dup5\n        /* \"#utility.yul\":5186:5190   */\n      0x20\n        /* \"#utility.yul\":5178:5184   */\n      dup8\n        /* \"#utility.yul\":5174:5191   */\n      add\n        /* \"#utility.yul\":5152:5205   */\n      tag_124\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5221:5237   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":4969:5243   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5248:5631   */\n    tag_122:\n        /* \"#utility.yul\":5397:5399   */\n      0x20\n        /* \"#utility.yul\":5386:5395   */\n      dup2\n        /* \"#utility.yul\":5379:5400   */\n      mstore\n        /* \"#utility.yul\":5360:5364   */\n      0x00\n        /* \"#utility.yul\":5429:5435   */\n      dup3\n        /* \"#utility.yul\":5423:5436   */\n      mload\n        /* \"#utility.yul\":5472:5478   */\n      dup1\n        /* \"#utility.yul\":5467:5469   */\n      0x20\n        /* \"#utility.yul\":5456:5465   */\n      dup5\n        /* \"#utility.yul\":5452:5470   */\n      add\n        /* \"#utility.yul\":5445:5479   */\n      mstore\n        /* \"#utility.yul\":5488:5554   */\n      tag_165\n        /* \"#utility.yul\":5547:5553   */\n      dup2\n        /* \"#utility.yul\":5542:5544   */\n      0x40\n        /* \"#utility.yul\":5531:5540   */\n      dup6\n        /* \"#utility.yul\":5527:5545   */\n      add\n        /* \"#utility.yul\":5522:5524   */\n      0x20\n        /* \"#utility.yul\":5514:5520   */\n      dup8\n        /* \"#utility.yul\":5510:5525   */\n      add\n        /* \"#utility.yul\":5488:5554   */\n      tag_124\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5615:5617   */\n      0x1f\n        /* \"#utility.yul\":5594:5609   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5590:5619   */\n      and\n        /* \"#utility.yul\":5575:5620   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5622:5624   */\n      0x40\n        /* \"#utility.yul\":5571:5625   */\n      add\n      swap3\n        /* \"#utility.yul\":5248:5631   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205fc8e71edca599d1e018d1fafe9778d9f2d5b2e7eebe6ce19bf2ce3a5495861964736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_875": {
									"entryPoint": null,
									"id": 875,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:651:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:6"
															},
															"nodeType": "YulIf",
															"src": "204:70:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:290:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "483:166:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "511:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "545:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "584:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:6"
																	},
																	{
																		"hexValue": "4e4f542c532030582041444452455353",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "589:18:6",
																		"type": "",
																		"value": "NOT,S 0X ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:46:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "617:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "629:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "625:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "617:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "460:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "474:4:6",
														"type": ""
													}
												],
												"src": "309:340:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"NOT,S 0X ADDRESS\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161093e38038061093e83398101604081905261002f916100bd565b600480546001600160a01b031916331790556001600160a01b03811661008e5760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b604482015260640160405180910390fd5b600180546001600160a01b039092166001600160a01b03199283168117909155600280549092161790556100ed565b6000602082840312156100cf57600080fd5b81516001600160a01b03811681146100e657600080fd5b9392505050565b610842806100fc6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b1461014e578063b6b55f2514610161578063dab2997b14610184578063e82219171461019757600080fd5b80631afaa6e81461008d5780636dff132e146100a257806371ca337d146100d25780638c93ecff146100e9575b600080fd5b6100a061009b36600461068e565b600055565b005b6002546100b5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db60005481565b6040519081526020016100c9565b6101266100f73660046106a7565b600560205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016100c9565b6004546100b5906001600160a01b031681565b61017461016f36600461068e565b6101a0565b60405190151581526020016100c9565b6001546100b5906001600160a01b031681565b6100db60035481565b6001546040516370a0823160e01b815233600482015260009183916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156101ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021191906106d0565b1161025a5760405162461bcd60e51b815260206004820152601460248201527310985b185b98d948125b9cdd59999a58da595b9d60621b60448201526064015b60405180910390fd5b600154610272906001600160a01b031633308561036c565b60008054338252600560205260408220546102ca916102a6916301e13380916102a0916064918391906103cc565b906103fe565b336000908152600560205260409020600101546102c490429061041d565b906103cc565b336000908152600560205260408120600201805492935083929091906102f19084906106ff565b909155505033600090815260056020526040812080548592906103159084906106ff565b909155505033600090815260056020526040812042600190910155600380548592906103429084906106ff565b90915550503360009081526005602052604090206001808201546004909201919091559392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526103c6908590610436565b50505050565b60006103d88284610717565b90508215806103ef5750816103ed8483610736565b145b6103f857600080fd5b92915050565b600080821161040c57600080fd5b6104168284610736565b9392505050565b60008282111561042c57600080fd5b6104168284610758565b600061048b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661050d9092919063ffffffff16565b80519091501561050857808060200190518101906104a9919061076f565b6105085760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610251565b505050565b606061051c8484600085610524565b949350505050565b6060824710156105855760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610251565b6001600160a01b0385163b6105dc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610251565b600080866001600160a01b031685876040516105f891906107bd565b60006040518083038185875af1925050503d8060008114610635576040519150601f19603f3d011682016040523d82523d6000602084013e61063a565b606091505b509150915061064a828286610655565b979650505050505050565b60608315610664575081610416565b8251156106745782518084602001fd5b8160405162461bcd60e51b815260040161025191906107d9565b6000602082840312156106a057600080fd5b5035919050565b6000602082840312156106b957600080fd5b81356001600160a01b038116811461041657600080fd5b6000602082840312156106e257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610712576107126106e9565b500190565b6000816000190483118215151615610731576107316106e9565b500290565b60008261075357634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561076a5761076a6106e9565b500390565b60006020828403121561078157600080fd5b8151801515811461041657600080fd5b60005b838110156107ac578181015183820152602001610794565b838111156103c65750506000910152565b600082516107cf818460208701610791565b9190910192915050565b60208152600082518060208401526107f8816040850160208701610791565b601f01601f1916919091016040019291505056fea26469706673582212205fc8e71edca599d1e018d1fafe9778d9f2d5b2e7eebe6ce19bf2ce3a5495861964736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x93E CODESIZE SUB DUP1 PUSH2 0x93E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBD JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0xED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x842 DUP1 PUSH2 0xFC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xE8221917 EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1AFAA6E8 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x6DFF132E EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH2 0x126 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDB PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST GT PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10985B185B98D948125B9CDD59999A58DA595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x272 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x2CA SWAP2 PUSH2 0x2A6 SWAP2 PUSH4 0x1E13380 SWAP2 PUSH2 0x2A0 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x3CC JUMP JUMPDEST SWAP1 PUSH2 0x3FE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2C4 SWAP1 TIMESTAMP SWAP1 PUSH2 0x41D JUMP JUMPDEST SWAP1 PUSH2 0x3CC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2F1 SWAP1 DUP5 SWAP1 PUSH2 0x6FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x315 SWAP1 DUP5 SWAP1 PUSH2 0x6FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x342 SWAP1 DUP5 SWAP1 PUSH2 0x6FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3C6 SWAP1 DUP6 SWAP1 PUSH2 0x436 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8 DUP3 DUP5 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO DUP1 PUSH2 0x3EF JUMPI POP DUP2 PUSH2 0x3ED DUP5 DUP4 PUSH2 0x736 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x416 DUP3 DUP5 PUSH2 0x736 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x416 DUP3 DUP5 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x50D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x508 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x51C DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x524 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x63A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x64A DUP3 DUP3 DUP7 PUSH2 0x655 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x664 JUMPI POP DUP2 PUSH2 0x416 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x674 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x712 JUMPI PUSH2 0x712 PUSH2 0x6E9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x731 JUMPI PUSH2 0x731 PUSH2 0x6E9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x753 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x76A JUMPI PUSH2 0x76A PUSH2 0x6E9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x794 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C6 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x7CF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x791 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7F8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x791 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xC8 0xE7 0x1E 0xDC 0xA5 SWAP10 0xD1 0xE0 XOR 0xD1 STATICCALL INVALID SWAP8 PUSH25 0xD9F2D5B2E7EEBE6CE19BF2CE3A5495861964736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "169:2177:5:-:0;;;912:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;957:5;:18;;-1:-1:-1;;;;;;957:18:5;965:10;957:18;;;-1:-1:-1;;;;;994:25:5;;986:53;;;;-1:-1:-1;;;986:53:5;;511:2:6;986:53:5;;;493:21:6;550:2;530:18;;;523:30;-1:-1:-1;;;569:18:6;;;562:46;625:18;;986:53:5;;;;;;;;1050:10;:24;;-1:-1:-1;;;;;1050:24:5;;;-1:-1:-1;;;;;;1050:24:5;;;;;;;;1085:11;:25;;;;;;;;169:2177;;14:290:6;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;309:340::-;169:2177:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@User_Map_846": {
									"entryPoint": null,
									"id": 846,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_393": {
									"entryPoint": 1078,
									"id": 393,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_993": {
									"entryPoint": 416,
									"id": 993,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_785": {
									"entryPoint": 1022,
									"id": 785,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_553": {
									"entryPoint": 1316,
									"id": 553,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_483": {
									"entryPoint": 1293,
									"id": 483,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_763": {
									"entryPoint": 972,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_830": {
									"entryPoint": null,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ratio_822": {
									"entryPoint": null,
									"id": 822,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardtoken_826": {
									"entryPoint": null,
									"id": 826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_171": {
									"entryPoint": 876,
									"id": 171,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setratio_885": {
									"entryPoint": null,
									"id": 885,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@staketoken_824": {
									"entryPoint": null,
									"id": 824,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staketotal_828": {
									"entryPoint": null,
									"id": 828,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_735": {
									"entryPoint": 1053,
									"id": 735,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verifyCallResult_688": {
									"entryPoint": 1621,
									"id": 688,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9be1f40e57c36cad304817e465a471f758cbc91162f0a9c1318089f897eaeb24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5633:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:6"
															},
															"nodeType": "YulIf",
															"src": "94:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:6",
														"type": ""
													}
												],
												"src": "14:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "367:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "383:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "388:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "379:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "379:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "392:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "375:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "375:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "363:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "363:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:6",
														"type": ""
													}
												],
												"src": "199:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "508:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "518:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "530:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "541:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "526:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "526:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "518:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "560:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "571:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "553:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "553:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "553:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "477:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "488:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "499:4:6",
														"type": ""
													}
												],
												"src": "407:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "659:216:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "705:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "714:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "717:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "680:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "689:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "676:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "672:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "672:32:6"
															},
															"nodeType": "YulIf",
															"src": "669:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "730:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "756:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "743:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "734:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "829:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "838:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "841:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "831:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "831:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "831:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "788:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "799:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "814:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "819:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "810:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "810:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "823:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "806:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "806:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "785:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "785:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "778:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:50:6"
															},
															"nodeType": "YulIf",
															"src": "775:70:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "854:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "864:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "854:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:6",
														"type": ""
													}
												],
												"src": "589:286:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1093:250:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1103:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1115:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1126:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1103:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1146:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1157:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1139:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1139:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1195:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1200:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1173:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1173:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1173:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1227:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1238:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1223:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1223:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1243:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1216:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1216:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1270:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1281:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1266:18:6"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1286:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1259:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1259:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1313:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1324:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1309:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1309:19:6"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1302:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1302:35:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1030:9:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1041:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1049:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1057:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1065:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1073:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1084:4:6",
														"type": ""
													}
												],
												"src": "880:463:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1443:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1453:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1465:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1461:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1461:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1453:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1495:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1520:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1513:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1513:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1506:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1506:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1488:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1488:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1412:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1423:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1434:4:6",
														"type": ""
													}
												],
												"src": "1348:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1621:103:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1667:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1676:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1679:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1669:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1669:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1669:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1642:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1651:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1638:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1638:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1634:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:32:6"
															},
															"nodeType": "YulIf",
															"src": "1631:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1692:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1708:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1702:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1692:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1587:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1598:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1610:6:6",
														"type": ""
													}
												],
												"src": "1540:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1903:170:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1920:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1931:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1913:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1913:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1913:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1954:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1965:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1950:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1950:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1970:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1943:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1943:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1943:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1993:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2004:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1989:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1989:18:6"
																	},
																	{
																		"hexValue": "42616c616e636520496e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2009:22:6",
																		"type": "",
																		"value": "Balance Insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1982:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1982:50:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2053:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2064:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2049:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2041:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9be1f40e57c36cad304817e465a471f758cbc91162f0a9c1318089f897eaeb24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1880:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:6",
														"type": ""
													}
												],
												"src": "1729:344:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2110:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2134:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2139:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2130:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2130:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2120:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2167:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2170:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2160:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2160:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2191:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2194:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2184:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2184:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2184:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2078:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2258:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2285:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2287:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2287:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2287:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2274:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2281:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2277:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2277:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2271:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:13:6"
															},
															"nodeType": "YulIf",
															"src": "2268:39:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2316:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2327:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2330:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2323:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2241:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2244:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2250:3:6",
														"type": ""
													}
												],
												"src": "2210:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2500:218:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2510:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2522:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2533:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2518:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2510:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2545:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2563:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2568:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2572:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2555:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2555:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2549:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2590:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2605:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2613:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2601:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2637:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2648:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2633:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2633:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2657:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2665:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2653:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2653:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2626:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2626:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2705:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2678:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2678:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2453:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2464:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2472:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2480:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2491:4:6",
														"type": ""
													}
												],
												"src": "2343:375:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2775:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2834:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2836:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2836:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2836:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2806:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2799:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2799:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2792:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2792:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2814:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2825:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2821:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2821:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2829:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2817:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2817:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2811:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2811:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2788:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2788:45:6"
															},
															"nodeType": "YulIf",
															"src": "2785:71:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2865:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2880:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2883:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2865:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2754:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2757:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2763:7:6",
														"type": ""
													}
												],
												"src": "2723:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2942:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2973:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2994:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3001:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3006:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2997:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2997:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2987:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2987:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2987:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3038:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3041:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3031:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3031:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3031:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3066:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3069:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3059:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3059:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3059:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2962:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:9:6"
															},
															"nodeType": "YulIf",
															"src": "2952:132:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3093:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3102:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3105:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3098:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3098:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3093:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2927:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2930:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2936:1:6",
														"type": ""
													}
												],
												"src": "2896:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3167:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3189:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3191:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3191:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3191:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3183:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3186:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3180:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3180:8:6"
															},
															"nodeType": "YulIf",
															"src": "3177:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3220:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3232:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3235:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3220:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3149:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3152:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3158:4:6",
														"type": ""
													}
												],
												"src": "3118:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3326:199:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3372:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3381:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3384:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3374:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3374:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3374:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3347:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3356:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3343:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3343:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3368:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3339:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3339:32:6"
															},
															"nodeType": "YulIf",
															"src": "3336:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3397:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3416:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3410:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3410:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3401:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3479:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3488:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3491:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3481:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3481:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3481:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3448:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3469:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3462:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3462:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3455:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3455:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3445:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3445:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3438:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:40:6"
															},
															"nodeType": "YulIf",
															"src": "3435:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3504:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3514:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3292:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3303:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3315:6:6",
														"type": ""
													}
												],
												"src": "3248:277:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3704:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3721:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3732:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3714:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3755:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3766:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3751:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3751:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3771:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3744:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3744:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3744:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3794:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3805:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:18:6"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3810:34:6",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3783:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3783:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3783:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3865:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3876:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3861:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3861:18:6"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3881:12:6",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3854:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3854:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3854:40:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3903:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3915:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3926:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3903:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3681:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3695:4:6",
														"type": ""
													}
												],
												"src": "3530:406:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4115:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4132:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4143:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4125:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4125:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4125:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4182:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4205:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4216:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4201:18:6"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4221:34:6",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4194:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4194:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:6"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4292:8:6",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4310:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4322:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4333:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4318:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4318:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4310:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4092:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4106:4:6",
														"type": ""
													}
												],
												"src": "3941:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4522:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4539:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4550:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4532:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4532:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4573:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4584:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4569:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4569:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4589:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4562:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4562:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4562:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4612:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4623:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4608:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4608:18:6"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4628:31:6",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4681:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4692:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4677:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4669:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4499:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4513:4:6",
														"type": ""
													}
												],
												"src": "4348:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4759:205:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4769:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4778:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4773:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4838:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4863:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4868:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4859:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4859:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4882:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4887:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4878:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4878:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4872:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4872:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4852:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4852:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4852:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4799:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4802:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4796:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4810:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4812:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4821:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4817:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4817:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4812:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4792:3:6",
																"statements": []
															},
															"src": "4788:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4927:31:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4940:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4945:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4936:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4936:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4954:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4929:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4929:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4929:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4916:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4919:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4913:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4913:13:6"
															},
															"nodeType": "YulIf",
															"src": "4910:48:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4737:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4742:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4747:6:6",
														"type": ""
													}
												],
												"src": "4706:258:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5106:137:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5116:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5136:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5130:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5120:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5178:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5186:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5174:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5174:17:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5193:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5198:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5152:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5152:53:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5214:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5225:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5230:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5214:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5082:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5087:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5098:3:6",
														"type": ""
													}
												],
												"src": "4969:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5369:262:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5386:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5397:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5379:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5409:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5429:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5423:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5413:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5456:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5467:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5452:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5452:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5472:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5445:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5445:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5445:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5514:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5522:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5510:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5510:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5531:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5542:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5527:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5547:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5488:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5488:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5488:66:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5563:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5579:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5598:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5606:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5594:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5594:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5615:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5611:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5611:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5590:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5590:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5575:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5575:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5622:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5571:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5571:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5563:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5338:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5349:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5360:4:6",
														"type": ""
													}
												],
												"src": "5248:383:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9be1f40e57c36cad304817e465a471f758cbc91162f0a9c1318089f897eaeb24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Balance Insufficient\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b1461014e578063b6b55f2514610161578063dab2997b14610184578063e82219171461019757600080fd5b80631afaa6e81461008d5780636dff132e146100a257806371ca337d146100d25780638c93ecff146100e9575b600080fd5b6100a061009b36600461068e565b600055565b005b6002546100b5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db60005481565b6040519081526020016100c9565b6101266100f73660046106a7565b600560205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016100c9565b6004546100b5906001600160a01b031681565b61017461016f36600461068e565b6101a0565b60405190151581526020016100c9565b6001546100b5906001600160a01b031681565b6100db60035481565b6001546040516370a0823160e01b815233600482015260009183916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156101ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021191906106d0565b1161025a5760405162461bcd60e51b815260206004820152601460248201527310985b185b98d948125b9cdd59999a58da595b9d60621b60448201526064015b60405180910390fd5b600154610272906001600160a01b031633308561036c565b60008054338252600560205260408220546102ca916102a6916301e13380916102a0916064918391906103cc565b906103fe565b336000908152600560205260409020600101546102c490429061041d565b906103cc565b336000908152600560205260408120600201805492935083929091906102f19084906106ff565b909155505033600090815260056020526040812080548592906103159084906106ff565b909155505033600090815260056020526040812042600190910155600380548592906103429084906106ff565b90915550503360009081526005602052604090206001808201546004909201919091559392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526103c6908590610436565b50505050565b60006103d88284610717565b90508215806103ef5750816103ed8483610736565b145b6103f857600080fd5b92915050565b600080821161040c57600080fd5b6104168284610736565b9392505050565b60008282111561042c57600080fd5b6104168284610758565b600061048b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661050d9092919063ffffffff16565b80519091501561050857808060200190518101906104a9919061076f565b6105085760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610251565b505050565b606061051c8484600085610524565b949350505050565b6060824710156105855760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610251565b6001600160a01b0385163b6105dc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610251565b600080866001600160a01b031685876040516105f891906107bd565b60006040518083038185875af1925050503d8060008114610635576040519150601f19603f3d011682016040523d82523d6000602084013e61063a565b606091505b509150915061064a828286610655565b979650505050505050565b60608315610664575081610416565b8251156106745782518084602001fd5b8160405162461bcd60e51b815260040161025191906107d9565b6000602082840312156106a057600080fd5b5035919050565b6000602082840312156106b957600080fd5b81356001600160a01b038116811461041657600080fd5b6000602082840312156106e257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610712576107126106e9565b500190565b6000816000190483118215151615610731576107316106e9565b500290565b60008261075357634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561076a5761076a6106e9565b500390565b60006020828403121561078157600080fd5b8151801515811461041657600080fd5b60005b838110156107ac578181015183820152602001610794565b838111156103c65750506000910152565b600082516107cf818460208701610791565b9190910192915050565b60208152600082518060208401526107f8816040850160208701610791565b601f01601f1916919091016040019291505056fea26469706673582212205fc8e71edca599d1e018d1fafe9778d9f2d5b2e7eebe6ce19bf2ce3a5495861964736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xE8221917 EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1AFAA6E8 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x6DFF132E EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH2 0x126 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDB PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST GT PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10985B185B98D948125B9CDD59999A58DA595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x272 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x2CA SWAP2 PUSH2 0x2A6 SWAP2 PUSH4 0x1E13380 SWAP2 PUSH2 0x2A0 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x3CC JUMP JUMPDEST SWAP1 PUSH2 0x3FE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2C4 SWAP1 TIMESTAMP SWAP1 PUSH2 0x41D JUMP JUMPDEST SWAP1 PUSH2 0x3CC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2F1 SWAP1 DUP5 SWAP1 PUSH2 0x6FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x315 SWAP1 DUP5 SWAP1 PUSH2 0x6FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x342 SWAP1 DUP5 SWAP1 PUSH2 0x6FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3C6 SWAP1 DUP6 SWAP1 PUSH2 0x436 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8 DUP3 DUP5 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO DUP1 PUSH2 0x3EF JUMPI POP DUP2 PUSH2 0x3ED DUP5 DUP4 PUSH2 0x736 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x416 DUP3 DUP5 PUSH2 0x736 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x416 DUP3 DUP5 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x50D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x508 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x51C DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x524 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x63A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x64A DUP3 DUP3 DUP7 PUSH2 0x655 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x664 JUMPI POP DUP2 PUSH2 0x416 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x674 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x712 JUMPI PUSH2 0x712 PUSH2 0x6E9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x731 JUMPI PUSH2 0x731 PUSH2 0x6E9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x753 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x76A JUMPI PUSH2 0x76A PUSH2 0x6E9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x794 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C6 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x7CF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x791 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7F8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x791 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xC8 0xE7 0x1E 0xDC 0xA5 SWAP10 0xD1 0xE0 XOR 0xD1 STATICCALL INVALID SWAP8 PUSH25 0xD9F2D5B2E7EEBE6CE19BF2CE3A5495861964736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "169:2177:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:73;;;;;;:::i;:::-;1204:5;:14;1153:73;;;378:26;;;;;-1:-1:-1;;;;;378:26:5;;;;;;-1:-1:-1;;;;;363:32:6;;;345:51;;333:2;318:18;378:26:5;;;;;;;;279:17;;;;;;;;;553:25:6;;;541:2;526:18;279:17:5;407:177:6;863:40:5;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1139:25:6;;;1195:2;1180:18;;1173:34;;;;1223:18;;;1216:34;;;;1281:2;1266:18;;1259:34;1324:3;1309:19;;1302:35;1126:3;1111:19;863:40:5;880:463:6;461:20:5;;;;;-1:-1:-1;;;;;461:20:5;;;1255:1078;;;;;;:::i;:::-;;:::i;:::-;;;1513:14:6;;1506:22;1488:41;;1476:2;1461:18;1255:1078:5;1348:187:6;325:25:5;;;;;-1:-1:-1;;;;;325:25:5;;;432:22;;;;;;1255:1078;1389:10;;1382:40;;-1:-1:-1;;;1382:40:5;;1411:10;1382:40;;;345:51:6;1302:4:5;;1425:7;;-1:-1:-1;;;;;1389:10:5;;;;1382:28;;318:18:6;;1382:40:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;1374:83;;;;-1:-1:-1;;;1374:83:5;;1931:2:6;1374:83:5;;;1913:21:6;1970:2;1950:18;;;1943:30;-1:-1:-1;;;1989:18:6;;;1982:50;2049:18;;1374:83:5;;;;;;;;;1506:10;;1499:71;;-1:-1:-1;;;;;1506:10:5;1535;1555:4;1562:7;1499:35;:71::i;:::-;1639:32;1786:5;;1758:10;1749:20;;:8;:20;;;;;:32;1674:153;;1748:78;;1817:8;;1749:52;;1797:3;;1749:52;;:32;:36;:43::i;:::-;:47;;:52::i;1748:78::-;1704:10;1695:20;;;;:8;:20;;;;;:36;;;1675:57;;:15;;:19;:57::i;:::-;1674:73;;:153::i;:::-;1917:10;1908:20;;;;:8;:20;;;;;:39;;:70;;1639:188;;-1:-1:-1;1639:188:5;;1908:39;;:20;:70;;1639:188;;1908:70;:::i;:::-;;;;-1:-1:-1;;2053:10:5;2044:20;;;;:8;:20;;;;;:43;;2080:7;;2044:20;:43;;2080:7;;2044:43;:::i;:::-;;;;-1:-1:-1;;2136:10:5;2127:20;;;;:8;:20;;;;;2166:15;2127:36;;;;:54;2192:10;:21;;2206:7;;2127:20;2192:21;;2206:7;;2192:21;:::i;:::-;;;;-1:-1:-1;;2274:10:5;2265:20;;;;:8;:20;;;;;:36;;;;;2224:38;;;;:77;;;;2265:36;1255:1078;-1:-1:-1;;;1255:1078:5:o;974:241:2:-;1139:68;;;-1:-1:-1;;;;;2601:15:6;;;1139:68:2;;;2583:34:6;2653:15;;2633:18;;;2626:43;2685:18;;;;2678:34;;;1139:68:2;;;;;;;;;;2518:18:6;;;;1139:68:2;;;;;;;;-1:-1:-1;;;;;1139:68:2;-1:-1:-1;;;1139:68:2;;;1112:96;;1132:5;;1112:19;:96::i;:::-;974:241;;;;:::o;327:128:4:-;379:6;402:5;406:1;402;:5;:::i;:::-;398:9;-1:-1:-1;426:6:4;;;:20;;-1:-1:-1;445:1:4;436:5;440:1;436;:5;:::i;:::-;:10;426:20;418:29;;;;;;327:128;;;;:::o;461:113::-;513:6;544:1;540;:5;532:14;;;;;;561:5;565:1;561;:5;:::i;:::-;557:9;461:113;-1:-1:-1;;;461:113:4:o;207:114::-;259:6;291:1;286;:6;;278:15;;;;;;308:5;312:1;308;:5;:::i;3747:706:2:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:2;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:2;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:2;;3732:2:6;4351:85:2;;;3714:21:6;3771:2;3751:18;;;3744:30;3810:34;3790:18;;;3783:62;-1:-1:-1;;;3861:18:6;;;3854:40;3911:19;;4351:85:2;3530:406:6;4351:85:2;3817:636;3747:706;;:::o;3861:223:3:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:3:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;4143:2:6;5137:81:3;;;4125:21:6;4182:2;4162:18;;;4155:30;4221:34;4201:18;;;4194:62;-1:-1:-1;;;4272:18:6;;;4265:36;4318:19;;5137:81:3;3941:402:6;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;4550:2:6;5228:60:3;;;4532:21:6;4589:2;4569:18;;;4562:30;4628:31;4608:18;;;4601:59;4677:18;;5228:60:3;4348:353:6;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:3;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:3;;;;;;;;:::i;14:180:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:6;;14:180;-1:-1:-1;14:180:6:o;589:286::-;648:6;701:2;689:9;680:7;676:23;672:32;669:52;;;717:1;714;707:12;669:52;743:23;;-1:-1:-1;;;;;795:31:6;;785:42;;775:70;;841:1;838;831:12;1540:184;1610:6;1663:2;1651:9;1642:7;1638:23;1634:32;1631:52;;;1679:1;1676;1669:12;1631:52;-1:-1:-1;1702:16:6;;1540:184;-1:-1:-1;1540:184:6:o;2078:127::-;2139:10;2134:3;2130:20;2127:1;2120:31;2170:4;2167:1;2160:15;2194:4;2191:1;2184:15;2210:128;2250:3;2281:1;2277:6;2274:1;2271:13;2268:39;;;2287:18;;:::i;:::-;-1:-1:-1;2323:9:6;;2210:128::o;2723:168::-;2763:7;2829:1;2825;2821:6;2817:14;2814:1;2811:21;2806:1;2799:9;2792:17;2788:45;2785:71;;;2836:18;;:::i;:::-;-1:-1:-1;2876:9:6;;2723:168::o;2896:217::-;2936:1;2962;2952:132;;3006:10;3001:3;2997:20;2994:1;2987:31;3041:4;3038:1;3031:15;3069:4;3066:1;3059:15;2952:132;-1:-1:-1;3098:9:6;;2896:217::o;3118:125::-;3158:4;3186:1;3183;3180:8;3177:34;;;3191:18;;:::i;:::-;-1:-1:-1;3228:9:6;;3118:125::o;3248:277::-;3315:6;3368:2;3356:9;3347:7;3343:23;3339:32;3336:52;;;3384:1;3381;3374:12;3336:52;3416:9;3410:16;3469:5;3462:13;3455:21;3448:5;3445:32;3435:60;;3491:1;3488;3481:12;4706:258;4778:1;4788:113;4802:6;4799:1;4796:13;4788:113;;;4878:11;;;4872:18;4859:11;;;4852:39;4824:2;4817:10;4788:113;;;4919:6;4916:1;4913:13;4910:48;;;-1:-1:-1;;4954:1:6;4936:16;;4929:27;4706:258::o;4969:274::-;5098:3;5136:6;5130:13;5152:53;5198:6;5193:3;5186:4;5178:6;5174:17;5152:53;:::i;:::-;5221:16;;;;;4969:274;-1:-1:-1;;4969:274:6:o;5248:383::-;5397:2;5386:9;5379:21;5360:4;5429:6;5423:13;5472:6;5467:2;5456:9;5452:18;5445:34;5488:66;5547:6;5542:2;5531:9;5527:18;5522:2;5514:6;5510:15;5488:66;:::i;:::-;5615:2;5594:15;-1:-1:-1;;5590:29:6;5575:45;;;;5622:2;5571:54;;5248:383;-1:-1:-1;;5248:383:6:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "422800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"User_Map(address)": "11095",
								"deposit(uint256)": "infinite",
								"owner()": "2326",
								"ratio()": "2340",
								"rewardtoken()": "2349",
								"setratio(uint256)": "22313",
								"staketoken()": "2370",
								"staketotal()": "2361"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 2346,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 912,
									"end": 1118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 912,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 957,
									"end": 962,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 957,
									"end": 975,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 957,
									"end": 975,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 957,
									"end": 975,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 965,
									"end": 975,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 957,
									"end": 975,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 957,
									"end": 975,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 957,
									"end": 975,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 994,
									"end": 1019,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 994,
									"end": 1019,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 562,
									"end": 608,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 625,
									"end": 643,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 625,
									"end": 643,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 986,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1060,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1074,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1085,
									"end": 1096,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1085,
									"end": 1110,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1085,
									"end": 1110,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1085,
									"end": 1110,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1085,
									"end": 1110,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1085,
									"end": 1110,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1085,
									"end": 1110,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1085,
									"end": 1110,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1085,
									"end": 1110,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 309,
									"end": 649,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 309,
									"end": 649,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2346,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fc8e71edca599d1e018d1fafe9778d9f2d5b2e7eebe6ce19bf2ce3a5495861964736f6c634300080f0033",
									".code": [
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "B6B55F25"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "DAB2997B"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "E8221917"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "1AFAA6E8"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "6DFF132E"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "71CA337D"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "8C93ECFF"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 2346,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1153,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1218,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1226,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 378,
											"end": 404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 378,
											"end": 404,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 378,
											"end": 404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 404,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 395,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 345,
											"end": 396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 378,
											"end": 404,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 378,
											"end": 404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 404,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 378,
											"end": 404,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 279,
											"end": 296,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 279,
											"end": 296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 279,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 296,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 279,
											"end": 296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 279,
											"end": 296,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 279,
											"end": 296,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 279,
											"end": 296,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 296,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 553,
											"end": 578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 541,
											"end": 543,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 279,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 407,
											"end": 584,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 863,
											"end": 903,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 863,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 863,
											"end": 903,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 863,
											"end": 903,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1164,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1207,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1207,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1207,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1281,
											"end": 1283,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1309,
											"end": 1328,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1309,
											"end": 1328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1337,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1129,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1111,
											"end": 1130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 863,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 880,
											"end": 1343,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 461,
											"end": 481,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 461,
											"end": 481,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 461,
											"end": 481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 461,
											"end": 481,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1255,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1255,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1527,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1529,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1478,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1348,
											"end": 1535,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 325,
											"end": 350,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 325,
											"end": 350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 325,
											"end": 350,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 325,
											"end": 350,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 325,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 325,
											"end": 350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 325,
											"end": 350,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 325,
											"end": 350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 325,
											"end": 350,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 454,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 432,
											"end": 454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 432,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 432,
											"end": 454,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 432,
											"end": 454,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 432,
											"end": 454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 432,
											"end": 454,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1399,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1389,
											"end": 1399,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1421,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1432,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1389,
											"end": 1399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1399,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1382,
											"end": 1410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1382,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1382,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1913,
											"end": 1934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1970,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10985B185B98D948125B9CDD59999A58DA595B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1989,
											"end": 2007,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1989,
											"end": 2007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1374,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1506,
											"end": 1516,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1516,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1545,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1559,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1499,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1791,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 1791,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1758,
											"end": 1768,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1781,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1674,
											"end": 1827,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1748,
											"end": 1826,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1825,
											"name": "PUSH",
											"source": 5,
											"value": "1E13380"
										},
										{
											"begin": 1817,
											"end": 1825,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1749,
											"end": 1801,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1801,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1801,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1749,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1792,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1749,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1749,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1826,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1748,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1714,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1695,
											"end": 1715,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1715,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1715,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1731,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1731,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1675,
											"end": 1732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1675,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1732,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1675,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1674,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1827,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1674,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1927,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1928,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1928,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1908,
											"end": 1928,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1928,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1928,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1928,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1928,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1978,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1978,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1827,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1827,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1639,
											"end": 1827,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1827,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1908,
											"end": 1978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1908,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1978,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1908,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1978,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1978,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2063,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2052,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2087,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2087,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2087,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2044,
											"end": 2087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2087,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2044,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2087,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2044,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2087,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2146,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2135,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2127,
											"end": 2147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2147,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2147,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2163,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2127,
											"end": 2163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2163,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2202,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2213,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2213,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2192,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2274,
											"end": 2284,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2301,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2265,
											"end": 2301,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2301,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2301,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2301,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 2333,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1255,
											"end": 2333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2668,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2668,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1112,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 327,
											"end": 455,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 327,
											"end": 455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 379,
											"end": 385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 406,
											"end": 407,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 402,
											"end": 403,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 402,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 402,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 402,
											"end": 407,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 402,
											"end": 407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 398,
											"end": 407,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 426,
											"end": 432,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 426,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 426,
											"end": 446,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 436,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 436,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 436,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 436,
											"end": 441,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 436,
											"end": 446,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 426,
											"end": 446,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 426,
											"end": 446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 418,
											"end": 447,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 418,
											"end": 447,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 327,
											"end": 455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 327,
											"end": 455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 327,
											"end": 455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 327,
											"end": 455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 327,
											"end": 455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 461,
											"end": 574,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 461,
											"end": 574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 513,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 545,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 540,
											"end": 545,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 532,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 532,
											"end": 546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 532,
											"end": 546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 532,
											"end": 546,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 532,
											"end": 546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 561,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 565,
											"end": 566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 561,
											"end": 562,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 561,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 561,
											"end": 566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 566,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 561,
											"end": 566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 566,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 461,
											"end": 574,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 461,
											"end": 574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 207,
											"end": 321,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 207,
											"end": 321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 259,
											"end": 265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 286,
											"end": 292,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 286,
											"end": 292,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 278,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 278,
											"end": 293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 278,
											"end": 293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 278,
											"end": 293,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 278,
											"end": 293,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 278,
											"end": 293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 308,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 312,
											"end": 313,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 308,
											"end": 309,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 308,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 308,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3773,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 3751,
											"end": 3769,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3751,
											"end": 3769,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3751,
											"end": 3769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 3790,
											"end": 3808,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3790,
											"end": 3808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3845,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3911,
											"end": 3930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3530,
											"end": 3936,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4025,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4184,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4255,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3941,
											"end": 4343,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4552,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4553,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4569,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4569,
											"end": 4587,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4569,
											"end": 4587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4562,
											"end": 4592,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4659,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4608,
											"end": 4626,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4608,
											"end": 4626,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 4626,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4348,
											"end": 4701,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5341,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5389,
											"end": 5440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 8252,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 589,
											"end": 875,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 589,
											"end": 875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 689,
											"end": 698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 680,
											"end": 687,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 676,
											"end": 699,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 672,
											"end": 704,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 669,
											"end": 721,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 669,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 669,
											"end": 721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 717,
											"end": 718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 719,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 669,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 669,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 743,
											"end": 766,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 766,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 795,
											"end": 826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 795,
											"end": 826,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 785,
											"end": 827,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 775,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 775,
											"end": 845,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 841,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 831,
											"end": 843,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1724,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1540,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1666,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1683,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1631,
											"end": 1683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1631,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1718,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2205,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2078,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2134,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2130,
											"end": 2150,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2151,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2194,
											"end": 2198,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2338,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2210,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2277,
											"end": 2283,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2307,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2268,
											"end": 2307,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2287,
											"end": 2305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2323,
											"end": 2332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2891,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2723,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2831,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2808,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2809,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2856,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2785,
											"end": 2856,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2836,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2876,
											"end": 2885,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 3113,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2896,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2952,
											"end": 3084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3001,
											"end": 3004,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2997,
											"end": 3017,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3045,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3073,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3084,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2952,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3098,
											"end": 3107,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3243,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3118,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3188,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3211,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3177,
											"end": 3211,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3191,
											"end": 3209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3525,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3248,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3356,
											"end": 3365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3371,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3388,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3336,
											"end": 3388,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3388,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3336,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3435,
											"end": 3495,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3489,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3493,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4964,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4706,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4800,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4809,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4878,
											"end": 4889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4878,
											"end": 4889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4878,
											"end": 4889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4859,
											"end": 4870,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4859,
											"end": 4870,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4859,
											"end": 4870,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4852,
											"end": 4891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4826,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4817,
											"end": 4827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4925,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4926,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4958,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4910,
											"end": 4958,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4954,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4936,
											"end": 4952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 4956,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5243,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4969,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5101,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5130,
											"end": 5143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5198,
											"end": 5204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5196,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5190,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5184,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5152,
											"end": 5205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5237,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4969,
											"end": 5243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5631,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5248,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5386,
											"end": 5395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5469,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5479,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5547,
											"end": 5553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5531,
											"end": 5540,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5522,
											"end": 5524,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5514,
											"end": 5520,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5488,
											"end": 5554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5554,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5488,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5617,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5594,
											"end": 5609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5619,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5575,
											"end": 5620,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5575,
											"end": 5620,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5575,
											"end": 5620,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5575,
											"end": 5620,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5624,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5571,
											"end": 5625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5625,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5631,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5248,
											"end": 5631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"safeMath/safemath.sol",
								"定息矿池-进阶.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"User_Map(address)": "8c93ecff",
							"deposit(uint256)": "b6b55f25",
							"owner()": "8da5cb5b",
							"ratio()": "71ca337d",
							"rewardtoken()": "6dff132e",
							"setratio(uint256)": "1afaa6e8",
							"staketoken()": "dab2997b",
							"staketotal()": "e8221917"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staketoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"User_Map\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_Stake_Time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"whole_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_Time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setratio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staketoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staketotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5b9a\\u606f\\u77ff\\u6c60-\\u8fdb\\u9636.sol\":\"StakeContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"safeMath/safemath.sol\":{\"keccak256\":\"0x97fc4ad193b2a914edb17b5e2e6ca80c5afb817413db1da916fc00694960325a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6018ff050520f0291861aa0b68d6e9369a1e46e55cdd7fe95afac6eae3ff8274\",\"dweb:/ipfs/QmYaYCoStbzohrcbL4qdL4h93DJ8UTyhwJCinnKSb7KUBr\"]},\"\\u5b9a\\u606f\\u77ff\\u6c60-\\u8fdb\\u9636.sol\":{\"keccak256\":\"0xa4630d7857eb0a359b788f316272626132e7b930a891f51e3054eac36837e77c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7eefeb6055d899c44502f3c1633f59fcd81282a412b41dbeadfaef2b7da6b6e1\",\"dweb:/ipfs/QmQQX2S96eRRCivsqQGEQyty5N9pycvNKRDmKUaSMaNA6o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 822,
								"contract": "定息矿池-进阶.sol:StakeContract",
								"label": "ratio",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 824,
								"contract": "定息矿池-进阶.sol:StakeContract",
								"label": "staketoken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 826,
								"contract": "定息矿池-进阶.sol:StakeContract",
								"label": "rewardtoken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 828,
								"contract": "定息矿池-进阶.sol:StakeContract",
								"label": "staketotal",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 830,
								"contract": "定息矿池-进阶.sol:StakeContract",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 846,
								"contract": "定息矿池-进阶.sol:StakeContract",
								"label": "User_Map",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(User)841_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)841_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakeContract.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)841_storage"
							},
							"t_struct(User)841_storage": {
								"encoding": "inplace",
								"label": "struct StakeContract.User",
								"members": [
									{
										"astId": 832,
										"contract": "定息矿池-进阶.sol:StakeContract",
										"label": "stakeNumber",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 834,
										"contract": "定息矿池-进阶.sol:StakeContract",
										"label": "last_Stake_Time",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 836,
										"contract": "定息矿池-进阶.sol:StakeContract",
										"label": "last_totoken_ratio",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 838,
										"contract": "定息矿池-进阶.sol:StakeContract",
										"label": "whole_ratio",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 840,
										"contract": "定息矿池-进阶.sol:StakeContract",
										"label": "last_totoken_Time",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> safeMath/safemath.sol:27:5:\n   |\n27 |     function matha(uint _a, uint _b) public view returns (uint)  {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 754,
					"file": "safeMath/safemath.sol",
					"start": 636
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1494:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1519:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1542:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1568:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1585:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1604:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:1"
									},
									"scope": 113,
									"src": "1446:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1950:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1988:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:1"
									},
									"scope": 113,
									"src": "1934:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 113,
									"src": "2189:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "620:1631:1",
							"usedErrors": []
						}
					],
					"src": "114:2138:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							689
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 78,
							"src": "140:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 114,
							"src": "164:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 690,
							"src": "211:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 122,
									"libraryName": {
										"id": 120,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "737:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:2",
									"typeName": {
										"id": 121,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "865:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "895:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 136,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "925:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "925:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 139,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "950:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "954:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 134,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 132,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "875:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "875:86:2"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 123,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "794:6:2"
													},
													"referencedDeclaration": 77,
													"src": "794:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "816:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "836:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:2"
									},
									"scope": 394,
									"src": "763:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1102:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1132:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 161,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "1162:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "1162:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 164,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1191:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 165,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1197:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1201:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 159,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 157,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1112:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:2"
											}
										]
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 146,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1009:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1031:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1053:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1073:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:2"
									},
									"scope": 394,
									"src": "974:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1581:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "1830:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 191,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 189,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 193,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 177,
																					"src": "1877:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 187,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 175,
																					"src": "1846:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "1846:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 197,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2001:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 206,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 175,
																			"src": "2031:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2031:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 209,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "2055:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "2064:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 204,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 202,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1981:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1505:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 173,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1505:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1505:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1527:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1552:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:2"
									},
									"scope": 394,
									"src": "1475:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "2200:194:2",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "2210:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 231,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 229,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 233,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "2264:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 227,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2233:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "2233:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 235,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2275:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2310:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 242,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "2340:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2340:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 245,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "2364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 246,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "2373:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 240,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 238,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "2290:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:2"
											}
										]
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2124:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 216,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2124:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2124:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2146:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2171:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:2"
									},
									"scope": 394,
									"src": "2084:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2516:370:2",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:2",
												"statements": [
													{
														"assignments": [
															262
														],
														"declarations": [
															{
																"constant": false,
																"id": 262,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2550:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 271,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 267,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 265,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 269,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 263,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2573:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2573:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2634:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 274,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "2650:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:2"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2715:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 284,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2738:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 282,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "2753:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 286,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2792:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 289,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "2822:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "2822:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 292,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "2846:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 293,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 280,
																			"src": "2855:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 287,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 285,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2772:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 296,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:2"
													}
												]
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2440:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 252,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2440:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2440:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2462:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:2"
									},
									"scope": 394,
									"src": "2400:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3107:257:2",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3117:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [
														{
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3152:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 321,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3139:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3139:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "3188:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3197:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 332,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3204:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 333,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3214:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 334,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3217:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 335,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3220:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 326,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "3168:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:2"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3232:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"id": 342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 340,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3253:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3253:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 346,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "3290:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 347,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "3304:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:2"
											}
										]
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2921:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$113",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 113,
														"src": "2921:12:2"
													},
													"referencedDeclaration": 113,
													"src": "2921:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$113",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2949:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2972:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3020:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3063:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3082:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:2"
									},
									"scope": 394,
									"src": "2892:472:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3817:636:2",
										"statements": [
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "4166:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [
														{
															"id": 371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 368,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "4200:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 483,
														"src": "4192:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 375,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4275:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 391,
												"nodeType": "IfStatement",
												"src": "4271:176:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "4298:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 382,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "4370:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 384,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 383,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 385,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 380,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 379,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3776:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3776:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3776:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3790:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:2"
									},
									"scope": 394,
									"src": "3747:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 395,
							"src": "707:3748:2",
							"usedErrors": []
						}
					],
					"src": "115:4341:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							689
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 689,
							"linearizedBaseContracts": [
								689
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 405,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 404,
												"id": 410,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 689,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 423,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		],
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 421,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													432,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 431,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 433,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 689,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 456,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															463,
															483
														],
														"referencedDeclaration": 483,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 455,
												"id": 461,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 689,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 479,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 475,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															553
														],
														"referencedDeclaration": 553,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 474,
												"id": 481,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 689,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 495,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															553
														],
														"referencedDeclaration": 553,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 494,
												"id": 501,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 689,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 520,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		],
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 518,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 523,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 530,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													536,
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 535,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"arguments": [
														{
															"id": 543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 539,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 541,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 548,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 549,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 546,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 516,
												"id": 551,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 689,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 563,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															570,
															605
														],
														"referencedDeclaration": 605,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 562,
												"id": 568,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 689,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 584,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 583,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													590,
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 589,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 591,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 593,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 600,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 598,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 581,
												"id": 603,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 576,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 689,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 615,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															622,
															657
														],
														"referencedDeclaration": 657,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 614,
												"id": 620,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 689,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 636,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 635,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													642,
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 641,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 645,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 652,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 653,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 650,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 633,
												"id": 655,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 689,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "7721:582:3",
										"statements": [
											{
												"condition": {
													"id": 669,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 660,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "7792:505:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 673,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 683,
																"nodeType": "Block",
																"src": "8234:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 680,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 664,
																					"src": "8259:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 679,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 682,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:3"
																	}
																]
															},
															"id": 684,
															"nodeType": "IfStatement",
															"src": "7872:415:3",
															"trueBody": {
																"id": 678,
																"nodeType": "Block",
																"src": "7899:329:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:3"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 662,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 662,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 677,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "7731:566:3",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 670,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 668,
															"id": 671,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 663,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 689,
									"src": "7561:742:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 690,
							"src": "194:8111:3",
							"usedErrors": []
						}
					],
					"src": "101:8205:3"
				},
				"id": 3
			},
			"safeMath/safemath.sol": {
				"ast": {
					"absolutePath": "safeMath/safemath.sol",
					"exportedSymbols": {
						"SafeMath": [
							786
						],
						"math": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 786,
							"linearizedBaseContracts": [
								786
							],
							"name": "SafeMath",
							"nameLocation": "71:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "147:54:4",
										"statements": [
											{
												"expression": {
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 700,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "158:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 701,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "162:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 702,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "166:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "162:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "158:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "158:9:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 707,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "186:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 708,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "191:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "186:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "178:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "178:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "178:15:4"
											}
										]
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "96:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "105:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "100:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "100:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "113:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "108:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "108:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "99:16:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "139:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "139:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:8:4"
									},
									"scope": 786,
									"src": "87:114:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "267:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 723,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "286:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 724,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "291:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "286:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "278:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "278:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "278:15:4"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 728,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "304:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 729,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "308:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 730,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "312:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "308:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "304:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "304:9:4"
											}
										]
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "216:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "225:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "220:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "220:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "233:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "228:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "228:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:16:4"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "264:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "259:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "259:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:8:4"
									},
									"scope": 786,
									"src": "207:114:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "387:68:4",
										"statements": [
											{
												"expression": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 744,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "398:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 745,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "402:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 746,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "406:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "402:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "398:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "398:9:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 751,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "426:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "431:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "426:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 754,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "436:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 755,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 737,
																		"src": "440:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "436:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 757,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "445:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "436:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "426:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "418:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "418:29:4"
											}
										]
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "336:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "345:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "340:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "353:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "348:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "348:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:16:4"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "384:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "379:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "379:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:8:4"
									},
									"scope": 786,
									"src": "327:128:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "521:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "540:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "544:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "540:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 772,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "532:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "532:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "532:14:4"
											},
											{
												"expression": {
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 778,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "557:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 779,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "561:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 780,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "565:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "561:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "557:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "557:9:4"
											}
										]
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "470:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "479:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "474:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "474:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "487:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "482:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:16:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "518:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "513:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "513:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:8:4"
									},
									"scope": 786,
									"src": "461:113:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "63:514:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "math",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "math",
							"nameLocation": "592:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 789,
									"libraryName": {
										"id": 787,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 786,
										"src": "610:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "604:24:4",
									"typeName": {
										"id": 788,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "623:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "697:57:4",
										"statements": [
											{
												"assignments": [
													799
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "713:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 807,
														"src": "708:6:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 798,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "708:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 804,
												"initialValue": {
													"arguments": [
														{
															"id": 802,
															"name": "_b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "724:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 800,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "717:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 713,
														"src": "717:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "717:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "708:19:4"
											},
											{
												"expression": {
													"id": 805,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 799,
													"src": "745:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 797,
												"id": 806,
												"nodeType": "Return",
												"src": "738:8:4"
											}
										]
									},
									"functionSelector": "803ab3a9",
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "matha",
									"nameLocation": "645:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "_a",
												"nameLocation": "656:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "651:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "651:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "_b",
												"nameLocation": "665:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "660:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:18:4"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "690:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "690:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:6:4"
									},
									"scope": 809,
									"src": "636:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 810,
							"src": "583:174:4",
							"usedErrors": []
						}
					],
					"src": "36:721:4"
				},
				"id": 4
			},
			"定息矿池-进阶.sol": {
				"ast": {
					"absolutePath": "定息矿池-进阶.sol",
					"exportedSymbols": {
						"Address": [
							689
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							394
						],
						"SafeMath": [
							786
						],
						"StakeContract": [
							994
						],
						"math": [
							809
						]
					},
					"id": 995,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:5"
						},
						{
							"absolutePath": "safeMath/safemath.sol",
							"file": "./safeMath/safemath.sol",
							"id": 812,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 995,
							"sourceUnit": 810,
							"src": "63:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 813,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 995,
							"sourceUnit": 395,
							"src": "98:65:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakeContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 994,
							"linearizedBaseContracts": [
								994
							],
							"name": "StakeContract",
							"nameLocation": "178:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 816,
									"libraryName": {
										"id": 814,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 786,
										"src": "205:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "199:24:5",
									"typeName": {
										"id": 815,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "218:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 820,
									"libraryName": {
										"id": 817,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 394,
										"src": "235:9:5"
									},
									"nodeType": "UsingForDirective",
									"src": "229:27:5",
									"typeName": {
										"id": 819,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 818,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "249:6:5"
										},
										"referencedDeclaration": 77,
										"src": "249:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "71ca337d",
									"id": 822,
									"mutability": "mutable",
									"name": "ratio",
									"nameLocation": "291:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "279:17:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 821,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "279:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dab2997b",
									"id": 824,
									"mutability": "mutable",
									"name": "staketoken",
									"nameLocation": "340:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "325:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 823,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6dff132e",
									"id": 826,
									"mutability": "mutable",
									"name": "rewardtoken",
									"nameLocation": "393:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "378:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 825,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "378:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e8221917",
									"id": 828,
									"mutability": "mutable",
									"name": "staketotal",
									"nameLocation": "444:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "432:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 827,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "432:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 830,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "476:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "461:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 829,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "461:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakeContract.User",
									"id": 841,
									"members": [
										{
											"constant": false,
											"id": 832,
											"mutability": "mutable",
											"name": "stakeNumber",
											"nameLocation": "549:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 841,
											"src": "544:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 831,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "544:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 834,
											"mutability": "mutable",
											"name": "last_Stake_Time",
											"nameLocation": "607:15:5",
											"nodeType": "VariableDeclaration",
											"scope": 841,
											"src": "602:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 833,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "602:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 836,
											"mutability": "mutable",
											"name": "last_totoken_ratio",
											"nameLocation": "690:18:5",
											"nodeType": "VariableDeclaration",
											"scope": 841,
											"src": "685:23:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 835,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "685:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 838,
											"mutability": "mutable",
											"name": "whole_ratio",
											"nameLocation": "772:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 841,
											"src": "767:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 837,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "767:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 840,
											"mutability": "mutable",
											"name": "last_totoken_Time",
											"nameLocation": "830:17:5",
											"nodeType": "VariableDeclaration",
											"scope": 841,
											"src": "825:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 839,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "825:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "497:4:5",
									"nodeType": "StructDefinition",
									"scope": 994,
									"src": "490:365:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c93ecff",
									"id": 846,
									"mutability": "mutable",
									"name": "User_Map",
									"nameLocation": "895:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "863:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$841_storage_$",
										"typeString": "mapping(address => struct StakeContract.User)"
									},
									"typeName": {
										"id": 845,
										"keyType": {
											"id": 842,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "871:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "863:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$841_storage_$",
											"typeString": "mapping(address => struct StakeContract.User)"
										},
										"valueType": {
											"id": 844,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 843,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 841,
												"src": "882:4:5"
											},
											"referencedDeclaration": 841,
											"src": "882:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$841_storage_ptr",
												"typeString": "struct StakeContract.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "946:172:5",
										"statements": [
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 851,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "957:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 852,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "965:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "965:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "957:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "957:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 857,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "994:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1017:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1009:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 858,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1009:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1009:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "994:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1020:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "986:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "986:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "986:53:5"
											},
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 866,
														"name": "staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "1050:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 867,
														"name": "_staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1063:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1050:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "1050:24:5"
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 870,
														"name": "rewardtoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "1085:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 871,
														"name": "_staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1099:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1085:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1085:25:5"
											}
										]
									},
									"id": 875,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "_staketoken",
												"nameLocation": "933:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "925:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:21:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "946:0:5"
									},
									"scope": 994,
									"src": "912:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "1193:33:5",
										"statements": [
											{
												"expression": {
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 880,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "1204:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 881,
														"name": "_ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1212:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1204:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "1204:14:5"
											}
										]
									},
									"functionSelector": "1afaa6e8",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setratio",
									"nameLocation": "1162:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "1176:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1171:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:13:5"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:0:5"
									},
									"scope": 994,
									"src": "1153:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "1308:1025:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 897,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1411:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1411:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 894,
																				"name": "staketoken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "1389:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 893,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1382:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1382:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1382:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1382:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 900,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "1425:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1382:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42616c616e636520496e73756666696369656e74",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1434:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9be1f40e57c36cad304817e465a471f758cbc91162f0a9c1318089f897eaeb24",
																"typeString": "literal_string \"Balance Insufficient\""
															},
															"value": "Balance Insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9be1f40e57c36cad304817e465a471f758cbc91162f0a9c1318089f897eaeb24",
																"typeString": "literal_string \"Balance Insufficient\""
															}
														],
														"id": 892,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1374:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:83:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "1374:83:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 909,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1535:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1535:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 913,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1555:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$994",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$994",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1547:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 911,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1547:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1547:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "1562:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 906,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "1506:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 905,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1499:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1499:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "1499:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1499:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "1499:71:5"
											},
											{
												"assignments": [
													919
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "unClime_Reward_Token_Number",
														"nameLocation": "1644:27:5",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "1639:32:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 918,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1639:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "3331353336303030",
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1817:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "31536000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	}
																],
																"expression": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"hexValue": "313030",
																					"id": 940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1797:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 937,
																							"name": "ratio",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 822,
																							"src": "1786:5:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"baseExpression": {
																									"id": 931,
																									"name": "User_Map",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 846,
																									"src": "1749:8:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$841_storage_$",
																										"typeString": "mapping(address => struct StakeContract.User storage ref)"
																									}
																								},
																								"id": 934,
																								"indexExpression": {
																									"expression": {
																										"id": 932,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1758:3:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 933,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1758:10:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1749:20:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$841_storage",
																									"typeString": "struct StakeContract.User storage ref"
																								}
																							},
																							"id": 935,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakeNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 832,
																							"src": "1749:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 936,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 763,
																						"src": "1749:36:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 938,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1749:43:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 785,
																				"src": "1749:47:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1749:52:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 942,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1748:54:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "1748:68:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1748:78:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 923,
																					"name": "User_Map",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 846,
																					"src": "1695:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$841_storage_$",
																						"typeString": "mapping(address => struct StakeContract.User storage ref)"
																					}
																				},
																				"id": 926,
																				"indexExpression": {
																					"expression": {
																						"id": 924,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1704:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 925,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1704:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1695:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$841_storage",
																					"typeString": "struct StakeContract.User storage ref"
																				}
																			},
																			"id": 927,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "last_Stake_Time",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 834,
																			"src": "1695:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 920,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1675:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "1675:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 735,
																		"src": "1675:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1675:57:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 929,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:59:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "1674:73:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1674:153:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1639:188:5"
											},
											{
												"expression": {
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 948,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "1908:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$841_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 951,
															"indexExpression": {
																"expression": {
																	"id": 949,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1917:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1917:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1908:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$841_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 836,
														"src": "1908:39:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 953,
														"name": "unClime_Reward_Token_Number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "1951:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1908:70:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "1908:70:5"
											},
											{
												"expression": {
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 956,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "2044:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$841_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 959,
															"indexExpression": {
																"expression": {
																	"id": 957,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2053:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2053:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2044:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$841_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 832,
														"src": "2044:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 961,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "2080:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2044:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "2044:43:5"
											},
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 964,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "2127:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$841_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 967,
															"indexExpression": {
																"expression": {
																	"id": 965,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2136:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2136:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2127:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$841_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "2127:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 969,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2166:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2127:54:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "2127:54:5"
											},
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 973,
														"name": "staketotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "2192:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 974,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "2206:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2192:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "2192:21:5"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 977,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "2224:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$841_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 980,
															"indexExpression": {
																"expression": {
																	"id": 978,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2233:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2233:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2224:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$841_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 840,
														"src": "2224:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 982,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "2265:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$841_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 985,
															"indexExpression": {
																"expression": {
																	"id": 983,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2274:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2274:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2265:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$841_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "2265:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2224:77:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2224:77:5"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2320:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"id": 990,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2319:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 891,
												"id": 991,
												"nodeType": "Return",
												"src": "2312:13:5"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1264:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1277:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1272:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:14:5"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1302:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 889,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1302:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:6:5"
									},
									"scope": 994,
									"src": "1255:1078:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 995,
							"src": "169:2177:5",
							"usedErrors": []
						}
					],
					"src": "36:2310:5"
				},
				"id": 5
			}
		}
	}
}