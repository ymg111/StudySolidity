{
	"id": "57805bd77402e94bdb89ab21173d3817",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"自己写个矿池,定息矿池.sol": {
				"content": " // SPDX-License-Identifier: MIT  \r\n\r\npragma solidity ^0.8.7;  \r\n \r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint);\r\n\r\n    function balanceOf(address account) external view returns (uint);\r\n\r\n    function transfer(address recipient, uint amout) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint amout) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint amout) external returns (bool);\r\n\r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n\r\n}\r\n\r\ncontract StakeContract {\r\n    // uint public stakeTime;\r\n    uint public ratio;\r\n    address public staketoken;\r\n    address public totoken;\r\n    uint public stakeSupple;\r\n    address public owner;\r\n    \r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n    event transfer(address indexed to, uint amout);\r\n\r\n    struct User {\r\n        uint stakeNumber;\r\n        uint last_Stake_Time;\r\n        uint last_totoken_ratio;  \r\n        uint whole_ratio;\r\n        uint last_totoken_Time;\r\n    }\r\n\r\n    mapping(address => User) public User_Map;\r\n\r\n    constructor (address _staketoken, address _totoken) {\r\n        owner = msg.sender;\r\n        require(_staketoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_totoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_staketoken == _totoken,\"NEED agreement\");\r\n        staketoken = _staketoken;\r\n        totoken = _totoken;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner , \"not owner\");\r\n        _;\r\n    }\r\n\r\n    // function getStakeTime() public view returns (uint) {\r\n    //     return stakeTime;\r\n    // }\r\n\r\n    function setRatio(uint _ratio) external onlyOwner {    \r\n        ratio = _ratio;     \r\n    }\r\n\r\n    function Stake(uint _amount) public returns (bool){\r\n\r\n        IERC20(staketoken).transferFrom(msg.sender, address(this), _amount); \r\n\r\n        emit Trasfer(msg.sender, address(this), _amount);\r\n\r\n        uint last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n        User_Map[msg.sender].last_totoken_ratio += last_totoken_ratio;\r\n        User_Map[msg.sender].stakeNumber += _amount;\r\n        User_Map[msg.sender].last_Stake_Time = block.timestamp;\r\n        stakeSupple += _amount;\r\n        User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time;\r\n        return true;     \r\n    }\r\n\r\n    function harvestwithDraw() public returns (bool) {\r\n        User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n        IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].whole_ratio);\r\n\r\n        User_Map[msg.sender].whole_ratio = 0;\r\n        User_Map[msg.sender].last_totoken_ratio = 0;\r\n   \r\n        IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].stakeNumber);\r\n        stakeSupple -= User_Map[msg.sender].stakeNumber;\r\n        User_Map[msg.sender].stakeNumber = 0;\r\n       \r\n        return true;\r\n    }  \r\n    \r\n    // function withDraw () public returns (bool) {\r\n    //     IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber); \r\n\r\n    //     emit transfer(msg.sender, User_Map[msg.sender].stakeNumber);\r\n            \r\n    //     stakeSupple -= User_Map[msg.sender].stakeNumber;\r\n    //     User_Map[msg.sender].stakeNumber = 0;\r\n\r\n    //     return true;\r\n    // }\r\n\r\n    // function harvest() public returns (bool) {\r\n    //     User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n\r\n    //     IERC20(totoken).transfer(msg.sender,  User_Map[msg.sender].whole_ratio); \r\n\r\n    //     emit transfer(msg.sender, User_Map[msg.sender].whole_ratio);\r\n\r\n    //     User_Map[msg.sender].Clima_Number +=  User_Map[msg.sender].whole_ratio;\r\n    //     User_Map[msg.sender].whole_ratio = 0; \r\n    //     User_Map[msg.sender].last_totoken_ratio = 0;\r\n    //     User_Map[msg.sender].last_totoken_Time = block.timestamp;\r\n\r\n    //     return true;  \r\n    // }\r\n         \r\n    // function withDrawtwo (uint _amount) public returns (bool) {\r\n    //     require(_amount <= User_Map[msg.sender].stakeNumber, \"buzu\");\r\n    //     IERC20(staketoken).transfer(msg.sender, _amount); \r\n    //     User_Map[msg.sender].stakeNumber -= _amount;\r\n    //     stakeSupple -= _amount;\r\n    //     ret urn true;\r\n    // }\r\n\r\n\r\n    function newTotokenRatio() public view returns (uint) {\r\n        uint newtime = block.timestamp - User_Map[msg.sender].last_totoken_Time;\r\n        uint newTotokenRatione = newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) + User_Map[msg.sender].last_totoken_ratio;\r\n        return newTotokenRatione;  \r\n    }\r\n\r\n    function lastTotokenRatio()public view returns(uint) {\r\n        uint _lastTotokenRatio = User_Map[msg.sender].last_totoken_ratio;\r\n        return _lastTotokenRatio;\r\n    }\r\n     \r\n\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"自己写个矿池,定息矿池.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":{\"keccak256\":\"0x1f4261b1afd4940bdd0ea3d2c598bcb9ac82325d62299334841df7e3303d4efc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3d7a95a3ac868e9027c8a6ba1e87699364dee248b8377accbafe2af076b4a36\",\"dweb:/ipfs/QmXEXM8A2AG3ejtBXQrHFysMx7ebM1imnGfmERRchApTwB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakeContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staketoken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_totoken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "User_Map",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakeNumber",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_Stake_Time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "whole_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_Time",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvestwithDraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTotokenRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newTotokenRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								}
							],
							"name": "setRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeSupple",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "staketoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5550  contract StakeContract {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1383:1721  constructor (address _staketoken, address _totoken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1446:1451  owner */\n  0x04\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1446:1464  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1454:1464  msg.sender */\n  caller\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1446:1464  owner = msg.sender */\n  or\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1483:1508  _staketoken != address(0) */\n  dup3\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1475:1528  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1475:1528  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x10\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:793   */\n  mstore\n    /* \"#utility.yul\":810:828   */\n  0x64\n  add\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1475:1528  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1547:1569  _totoken != address(0) */\n  dup2\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1539:1589  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1539:1589  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x10\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:793   */\n  mstore\n    /* \"#utility.yul\":810:828   */\n  0x64\n  add\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1539:1589  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_7\n    /* \"#utility.yul\":494:834   */\n  jump\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1539:1589  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\ntag_9:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1623:1631  _totoken */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1608:1631  _staketoken == _totoken */\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1608:1619  _staketoken */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1608:1631  _staketoken == _totoken */\n  and\n  eq\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1600:1649  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1600:1649  require(_staketoken == _totoken,\"NEED agreement\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1023:1044   */\n  mstore\n    /* \"#utility.yul\":1080:1082   */\n  0x0e\n    /* \"#utility.yul\":1060:1078   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1053:1083   */\n  mstore\n  shl(0x92, 0x13915151081859dc99595b595b9d)\n    /* \"#utility.yul\":1099:1117   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1092:1136   */\n  mstore\n    /* \"#utility.yul\":1153:1171   */\n  0x64\n  add\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1600:1649  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_7\n    /* \"#utility.yul\":839:1177   */\n  jump\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1600:1649  require(_staketoken == _totoken,\"NEED agreement\") */\ntag_11:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1660:1670  staketoken */\n  0x01\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1660:1684  staketoken = _staketoken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1695:1702  totoken */\n  0x02\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1695:1713  totoken = _totoken */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5550  contract StakeContract {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_20:\n    /* \"#utility.yul\":375:415   */\n  tag_21\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_22\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":839:1177   */\ntag_16:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5550  contract StakeContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5550  contract StakeContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8c93ecff\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8c93ecff\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb2237ba3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd942727f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdab2997b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfb5bca7a\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x227a473b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c46502d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x529aca49\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5e9f4435\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x71ca337d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2034:2731  function Stake(uint _amount) public returns (bool){... */\n    tag_3:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":364:378   */\n      swap1\n      iszero\n        /* \"#utility.yul\":357:379   */\n      iszero\n        /* \"#utility.yul\":339:380   */\n      dup2\n      mstore\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":312:330   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2034:2731  function Stake(uint _amount) public returns (bool){... */\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":849:871  address public totoken */\n    tag_4:\n      sload(0x02)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":555:587   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":537:588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":525:527   */\n      0x20\n        /* \"#utility.yul\":510:528   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":849:871  address public totoken */\n      tag_19\n        /* \"#utility.yul\":391:594   */\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5028:5357  function newTotokenRatio() public view returns (uint) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":745:770   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5028:5357  function newTotokenRatio() public view returns (uint) {... */\n      tag_19\n        /* \"#utility.yul\":599:776   */\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5365:5536  function lastTotokenRatio()public view returns(uint) {... */\n    tag_6:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5463:5473  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5412:5416  uint */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5454:5474  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5454:5462  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5454:5474  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5454:5493  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5365:5536  function lastTotokenRatio()public view returns(uint) {... */\n      jump(tag_25)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":793:810  uint public ratio */\n    tag_7:\n      tag_25\n      sload(0x00)\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1334:1374  mapping(address => User) public User_Map */\n    tag_8:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      dup6\n      jump\n    tag_35:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1331:1356   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":1387:1389   */\n      0x20\n        /* \"#utility.yul\":1372:1390   */\n      dup7\n      add\n        /* \"#utility.yul\":1365:1399   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1415:1433   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":1408:1442   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1473:1475   */\n      0x60\n        /* \"#utility.yul\":1458:1476   */\n      dup4\n      add\n        /* \"#utility.yul\":1451:1485   */\n      mstore\n        /* \"#utility.yul\":1516:1519   */\n      0x80\n        /* \"#utility.yul\":1501:1520   */\n      dup3\n      add\n        /* \"#utility.yul\":1494:1529   */\n      mstore\n        /* \"#utility.yul\":1318:1321   */\n      0xa0\n        /* \"#utility.yul\":1303:1322   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1334:1374  mapping(address => User) public User_Map */\n      tag_19\n        /* \"#utility.yul\":1072:1535   */\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":908:928  address public owner */\n    tag_9:\n      sload(0x04)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1934:2026  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_10:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":878:901  uint public stakeSupple */\n    tag_11:\n      tag_25\n      sload(0x03)\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":817:842  address public staketoken */\n    tag_12:\n      sload(0x01)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2739:3558  function harvestwithDraw() public returns (bool) {... */\n    tag_13:\n      tag_15\n      tag_54\n      jump\t// in\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2034:2731  function Stake(uint _amount) public returns (bool){... */\n    tag_18:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2104:2114  staketoken */\n      sload(0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2097:2164  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2129:2139  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2097:2164  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1780:1814   */\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2149:2153  this */\n      address\n        /* \"#utility.yul\":1830:1848   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1823:1866   */\n      mstore\n        /* \"#utility.yul\":1882:1900   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":1875:1909   */\n      dup4\n      swap1\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2079:2083  bool */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2104:2114  staketoken */\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2097:2128  IERC20(staketoken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":1715:1733   */\n      0x64\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2097:2164  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2183:2226  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":745:770   */\n      dup3\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2211:2215  this */\n      address\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2191:2201  msg.sender */\n      caller\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2183:2226  Trasfer(msg.sender, address(this), _amount) */\n      0x1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c\n      swap1\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2183:2226  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2239:2262  uint last_totoken_ratio */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2361:2366  ratio */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2335:2345  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2326:2346  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2326:2334  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2326:2346  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2326:2358  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2375:2383  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2368:2371  100 */\n      0x64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2326:2366  User_Map[msg.sender].stakeNumber * ratio */\n      tag_64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2361:2366  ratio */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2326:2366  User_Map[msg.sender].stakeNumber * ratio */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2326:2371  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2325:2383  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_68\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2293:2303  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2284:2304  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2284:2292  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2284:2304  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2284:2320  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2266:2320  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_69\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2266:2281  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2266:2320  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2265:2384  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_71\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_71:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2404:2414  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2395:2415  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2395:2403  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2395:2415  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2395:2434  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2395:2456  User_Map[msg.sender].last_totoken_ratio += last_totoken_ratio */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2239:2384  uint last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2395:2434  User_Map[msg.sender].last_totoken_ratio */\n      swap1\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2395:2415  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2395:2456  User_Map[msg.sender].last_totoken_ratio += last_totoken_ratio */\n      tag_72\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2239:2384  uint last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2395:2456  User_Map[msg.sender].last_totoken_ratio += last_totoken_ratio */\n      tag_73\n      jump\t// in\n    tag_72:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2476:2486  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2467:2487  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2467:2475  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2467:2487  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2467:2510  User_Map[msg.sender].stakeNumber += _amount */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2503:2510  _amount */\n      dup6\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2467:2487  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2467:2510  User_Map[msg.sender].stakeNumber += _amount */\n      tag_74\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2503:2510  _amount */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2467:2510  User_Map[msg.sender].stakeNumber += _amount */\n      tag_73\n      jump\t// in\n    tag_74:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2530:2540  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2521:2541  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2521:2529  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2521:2541  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2560:2575  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2521:2557  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2521:2575  User_Map[msg.sender].last_Stake_Time = block.timestamp */\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2586:2597  stakeSupple */\n      0x03\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2586:2608  stakeSupple += _amount */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2601:2608  _amount */\n      dup6\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2521:2541  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2586:2608  stakeSupple += _amount */\n      tag_75\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2601:2608  _amount */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2586:2608  stakeSupple += _amount */\n      tag_73\n      jump\t// in\n    tag_75:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2669:2679  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2660:2680  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2660:2668  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2660:2680  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2660:2696  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      dup1\n      dup3\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2619:2657  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      swap1\n      swap3\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2619:2696  User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2660:2696  User_Map[msg.sender].last_Stake_Time */\n      swap4\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2034:2731  function Stake(uint _amount) public returns (bool){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5028:5357  function newTotokenRatio() public view returns (uint) {... */\n    tag_26:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5135:5145  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5076:5080  uint */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5126:5146  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5126:5134  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5126:5146  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5126:5164  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5076:5080  uint */\n      dup2\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5108:5164  block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      tag_77\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5108:5123  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5108:5164  block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      tag_70\n      jump\t// in\n    tag_77:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5282:5292  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5175:5197  uint newTotokenRatione */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5273:5293  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5273:5281  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5273:5293  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5273:5312  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5247:5252  ratio */\n      dup3\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5212:5244  User_Map[msg.sender].stakeNumber */\n      swap2\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5093:5164  uint newtime = block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      swap4\n      swap5\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5175:5197  uint newTotokenRatione */\n      swap2\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5261:5269  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5254:5257  100 */\n      0x64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5212:5252  User_Map[msg.sender].stakeNumber * ratio */\n      tag_78\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5247:5252  ratio */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5212:5252  User_Map[msg.sender].stakeNumber * ratio */\n      tag_65\n      jump\t// in\n    tag_78:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5212:5257  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_79\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_79:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5211:5269  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_80\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_80:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5200:5270  newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_81\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5200:5207  newtime */\n      dup5\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5200:5270  newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_65\n      jump\t// in\n    tag_81:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5200:5312  newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) + User_Map[msg.sender].last_totoken_ratio */\n      tag_82\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_82:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5175:5312  uint newTotokenRatione = newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) + User_Map[msg.sender].last_totoken_ratio */\n      swap4\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5028:5357  function newTotokenRatio() public view returns (uint) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1934:2026  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_46:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1783:1788  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1769:1779  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1769:1788  msg.sender == owner */\n      eq\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1761:1803  require(msg.sender == owner , \"not owner\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3194:3196   */\n      0x20\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1761:1803  require(msg.sender == owner , \"not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3176:3197   */\n      mstore\n        /* \"#utility.yul\":3233:3234   */\n      0x09\n        /* \"#utility.yul\":3213:3231   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3206:3235   */\n      mstore\n      shl(0xb9, 0x3737ba1037bbb732b9)\n        /* \"#utility.yul\":3251:3269   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3244:3283   */\n      mstore\n        /* \"#utility.yul\":3300:3318   */\n      0x64\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1761:1803  require(msg.sender == owner , \"not owner\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1999:2004  ratio */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1999:2013  ratio = _ratio */\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1934:2026  function setRatio(uint _ratio) external onlyOwner {    ... */\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2739:3558  function harvestwithDraw() public returns (bool) {... */\n    tag_54:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2782:2786  bool */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2972:2977  ratio */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2946:2956  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2957  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2945  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2957  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2969  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2986:2994  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2979:2982  100 */\n      0x64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2977  User_Map[msg.sender].stakeNumber * ratio */\n      tag_90\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2972:2977  ratio */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2977  User_Map[msg.sender].stakeNumber * ratio */\n      tag_65\n      jump\t// in\n    tag_90:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2982  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_91\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_91:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2936:2994  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_92\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_92:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2904:2914  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2895:2915  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2895:2903  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2895:2915  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2895:2931  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2877:2931  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_93\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2877:2892  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2877:2931  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_70\n      jump\t// in\n    tag_93:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2876:2995  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_94\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_94:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2843:2853  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2834:2854  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2834:2842  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2834:2854  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2834:2873  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2834:2995  User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_95\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_95:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2808:2818  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2799:2819  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2799:2807  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2799:2819  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2799:2831  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2799:2995  User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      dup4\n      swap1\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3013:3020  totoken */\n      sload(0x02)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3006:3076  IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3503:3554   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3570:3588   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3563:3597   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3013:3020  totoken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3006:3030  IERC20(totoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3476:3494   */\n      0x44\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3006:3076  IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_100:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3104:3114  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3116:3136  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3116:3124  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3116:3136  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3116:3148  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3095:3149  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap2\n      mload\n        /* \"#utility.yul\":745:770   */\n      swap2\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3095:3149  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n      swap2\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3095:3149  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3171:3181  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3197:3198  0 */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3162:3182  User_Map[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3162:3170  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3162:3182  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3162:3194  User_Map[msg.sender].whole_ratio */\n      0x03\n      dup2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3162:3198  User_Map[msg.sender].whole_ratio = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3209:3248  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3209:3252  User_Map[msg.sender].last_totoken_ratio = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n      0x01\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3275:3285  staketoken */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3308:3340  User_Map[msg.sender].stakeNumber */\n      swap2\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3268:3341  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3503:3554   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":3570:3588   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3563:3597   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3275:3285  staketoken */\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3268:3295  IERC20(staketoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3476:3494   */\n      0x44\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3268:3341  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_105:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3369:3379  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3381:3401  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3381:3389  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3381:3401  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3381:3413  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3360:3414  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap2\n      mload\n        /* \"#utility.yul\":745:770   */\n      swap2\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3360:3414  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n      swap2\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3360:3414  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3449:3459  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3440:3460  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3440:3448  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3440:3460  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3440:3472  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3425:3436  stakeSupple */\n      0x03\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3425:3472  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3440:3472  User_Map[msg.sender].stakeNumber */\n      swap2\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3425:3436  stakeSupple */\n      swap1\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3425:3472  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_107\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3440:3472  User_Map[msg.sender].stakeNumber */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3425:3472  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_70\n      jump\t// in\n    tag_107:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3492:3502  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3518:3519  0 */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3483:3503  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3483:3491  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3483:3503  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3483:3519  User_Map[msg.sender].stakeNumber = 0 */\n      sstore\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3546:3550  true */\n      0x01\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2739:3558  function harvestwithDraw() public returns (bool) {... */\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_17:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_111:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1067   */\n    tag_37:\n        /* \"#utility.yul\":840:846   */\n      0x00\n        /* \"#utility.yul\":893:895   */\n      0x20\n        /* \"#utility.yul\":881:890   */\n      dup3\n        /* \"#utility.yul\":872:879   */\n      dup5\n        /* \"#utility.yul\":868:891   */\n      sub\n        /* \"#utility.yul\":864:896   */\n      slt\n        /* \"#utility.yul\":861:913   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      dup1\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":861:913   */\n    tag_116:\n        /* \"#utility.yul\":935:958   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":987:1018   */\n      dup2\n      and\n        /* \"#utility.yul\":977:1019   */\n      dup2\n      eq\n        /* \"#utility.yul\":967:1037   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1030:1031   */\n      dup1\n        /* \"#utility.yul\":1023:1035   */\n      revert\n        /* \"#utility.yul\":1920:2197   */\n    tag_62:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":2040:2042   */\n      0x20\n        /* \"#utility.yul\":2028:2037   */\n      dup3\n        /* \"#utility.yul\":2019:2026   */\n      dup5\n        /* \"#utility.yul\":2015:2038   */\n      sub\n        /* \"#utility.yul\":2011:2043   */\n      slt\n        /* \"#utility.yul\":2008:2060   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":2056:2057   */\n      0x00\n        /* \"#utility.yul\":2053:2054   */\n      dup1\n        /* \"#utility.yul\":2046:2058   */\n      revert\n        /* \"#utility.yul\":2008:2060   */\n    tag_121:\n        /* \"#utility.yul\":2088:2097   */\n      dup2\n        /* \"#utility.yul\":2082:2098   */\n      mload\n        /* \"#utility.yul\":2141:2146   */\n      dup1\n        /* \"#utility.yul\":2134:2147   */\n      iszero\n        /* \"#utility.yul\":2127:2148   */\n      iszero\n        /* \"#utility.yul\":2120:2125   */\n      dup2\n        /* \"#utility.yul\":2117:2149   */\n      eq\n        /* \"#utility.yul\":2107:2167   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":2163:2164   */\n      0x00\n        /* \"#utility.yul\":2160:2161   */\n      dup1\n        /* \"#utility.yul\":2153:2165   */\n      revert\n        /* \"#utility.yul\":2202:2329   */\n    tag_108:\n        /* \"#utility.yul\":2263:2273   */\n      0x4e487b71\n        /* \"#utility.yul\":2258:2261   */\n      0xe0\n        /* \"#utility.yul\":2254:2274   */\n      shl\n        /* \"#utility.yul\":2251:2252   */\n      0x00\n        /* \"#utility.yul\":2244:2275   */\n      mstore\n        /* \"#utility.yul\":2294:2298   */\n      0x11\n        /* \"#utility.yul\":2291:2292   */\n      0x04\n        /* \"#utility.yul\":2284:2299   */\n      mstore\n        /* \"#utility.yul\":2318:2322   */\n      0x24\n        /* \"#utility.yul\":2315:2316   */\n      0x00\n        /* \"#utility.yul\":2308:2323   */\n      revert\n        /* \"#utility.yul\":2334:2502   */\n    tag_65:\n        /* \"#utility.yul\":2374:2381   */\n      0x00\n        /* \"#utility.yul\":2440:2441   */\n      dup2\n        /* \"#utility.yul\":2436:2437   */\n      0x00\n        /* \"#utility.yul\":2432:2438   */\n      not\n        /* \"#utility.yul\":2428:2442   */\n      div\n        /* \"#utility.yul\":2425:2426   */\n      dup4\n        /* \"#utility.yul\":2422:2443   */\n      gt\n        /* \"#utility.yul\":2417:2418   */\n      dup3\n        /* \"#utility.yul\":2410:2419   */\n      iszero\n        /* \"#utility.yul\":2403:2420   */\n      iszero\n        /* \"#utility.yul\":2399:2444   */\n      and\n        /* \"#utility.yul\":2396:2467   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2447:2465   */\n      tag_126\n      tag_108\n      jump\t// in\n    tag_126:\n      pop\n        /* \"#utility.yul\":2487:2496   */\n      mul\n      swap1\n        /* \"#utility.yul\":2334:2502   */\n      jump\t// out\n        /* \"#utility.yul\":2507:2724   */\n    tag_67:\n        /* \"#utility.yul\":2547:2548   */\n      0x00\n        /* \"#utility.yul\":2573:2574   */\n      dup3\n        /* \"#utility.yul\":2563:2695   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":2617:2627   */\n      0x4e487b71\n        /* \"#utility.yul\":2612:2615   */\n      0xe0\n        /* \"#utility.yul\":2608:2628   */\n      shl\n        /* \"#utility.yul\":2605:2606   */\n      0x00\n        /* \"#utility.yul\":2598:2629   */\n      mstore\n        /* \"#utility.yul\":2652:2656   */\n      0x12\n        /* \"#utility.yul\":2649:2650   */\n      0x04\n        /* \"#utility.yul\":2642:2657   */\n      mstore\n        /* \"#utility.yul\":2680:2684   */\n      0x24\n        /* \"#utility.yul\":2677:2678   */\n      0x00\n        /* \"#utility.yul\":2670:2685   */\n      revert\n        /* \"#utility.yul\":2563:2695   */\n    tag_128:\n      pop\n        /* \"#utility.yul\":2709:2718   */\n      div\n      swap1\n        /* \"#utility.yul\":2507:2724   */\n      jump\t// out\n        /* \"#utility.yul\":2729:2854   */\n    tag_70:\n        /* \"#utility.yul\":2769:2773   */\n      0x00\n        /* \"#utility.yul\":2797:2798   */\n      dup3\n        /* \"#utility.yul\":2794:2795   */\n      dup3\n        /* \"#utility.yul\":2791:2799   */\n      lt\n        /* \"#utility.yul\":2788:2822   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":2802:2820   */\n      tag_131\n      tag_108\n      jump\t// in\n    tag_131:\n      pop\n        /* \"#utility.yul\":2839:2848   */\n      sub\n      swap1\n        /* \"#utility.yul\":2729:2854   */\n      jump\t// out\n        /* \"#utility.yul\":2859:2987   */\n    tag_73:\n        /* \"#utility.yul\":2899:2902   */\n      0x00\n        /* \"#utility.yul\":2930:2931   */\n      dup3\n        /* \"#utility.yul\":2926:2932   */\n      not\n        /* \"#utility.yul\":2923:2924   */\n      dup3\n        /* \"#utility.yul\":2920:2933   */\n      gt\n        /* \"#utility.yul\":2917:2956   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":2936:2954   */\n      tag_134\n      tag_108\n      jump\t// in\n    tag_134:\n      pop\n        /* \"#utility.yul\":2972:2981   */\n      add\n      swap1\n        /* \"#utility.yul\":2859:2987   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122052167ad7176d98323c1142ec594b417d6d8a471cb2896f9a677861e1b1c8f64864736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1179:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:1"
															},
															"nodeType": "YulIf",
															"src": "304:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													}
												],
												"src": "196:293:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "668:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "696:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "678:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "730:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "708:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "769:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:1"
																	},
																	{
																		"hexValue": "4e4f542c532030582041444452455353",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "774:18:1",
																		"type": "",
																		"value": "NOT,S 0X ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "802:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "814:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "802:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "645:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "659:4:1",
														"type": ""
													}
												],
												"src": "494:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1013:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1030:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1023:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1075:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1053:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1114:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1099:18:1"
																	},
																	{
																		"hexValue": "4e4545442061677265656d656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1119:16:1",
																		"type": "",
																		"value": "NEED agreement"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1145:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1157:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1168:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1153:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1145:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "990:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1004:4:1",
														"type": ""
													}
												],
												"src": "839:338:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"NOT,S 0X ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"NEED agreement\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516109ac3803806109ac83398101604081905261002f91610177565b600480546001600160a01b031916331790556001600160a01b03821661008f5760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b60448201526064015b60405180910390fd5b6001600160a01b0381166100d85760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b6044820152606401610086565b806001600160a01b0316826001600160a01b03161461012a5760405162461bcd60e51b815260206004820152600e60248201526d13915151081859dc99595b595b9d60921b6044820152606401610086565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556101aa565b80516001600160a01b038116811461017257600080fd5b919050565b6000806040838503121561018a57600080fd5b6101938361015b565b91506101a16020840161015b565b90509250929050565b6107f3806101b96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638c93ecff116100715780638c93ecff146101385780638da5cb5b1461019d578063b2237ba3146101b0578063d942727f146101c5578063dab2997b146101ce578063fb5bca7a146101e157600080fd5b8063227a473b146100ae5780632c46502d146100d6578063529aca49146101015780635e9f44351461011757806371ca337d1461012f575b600080fd5b6100c16100bc3660046106d3565b6101e9565b60405190151581526020015b60405180910390f35b6002546100e9906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b61010961039e565b6040519081526020016100cd565b33600090815260056020526040902060020154610109565b61010960005481565b6101756101463660046106ec565b600560205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016100cd565b6004546100e9906001600160a01b031681565b6101c36101be3660046106d3565b61041c565b005b61010960035481565b6001546100e9906001600160a01b031681565b6100c161046b565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102659190610715565b50604051828152309033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a360008054338252600560205260408220546301e13380916064916102c1919061074d565b6102cb919061076c565b6102d5919061076c565b336000908152600560205260409020600101546102f2904261078e565b6102fc919061074d565b336000908152600560205260408120600201805492935083929091906103239084906107a5565b909155505033600090815260056020526040812080548592906103479084906107a5565b909155505033600090815260056020526040812042600190910155600380548592906103749084906107a5565b90915550503360009081526005602052604090206001808201546004909201919091559392505050565b3360009081526005602052604081206004015481906103bd904261078e565b33600090815260056020526040812060028101548254915493945091926301e13380916064916103ed919061074d565b6103f7919061076c565b610401919061076c565b61040b908461074d565b61041591906107a5565b9392505050565b6004546001600160a01b031633146104665760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640160405180910390fd5b600055565b60008054338252600560205260408220546301e133809160649161048f919061074d565b610499919061076c565b6104a3919061076c565b336000908152600560205260409020600101546104c0904261078e565b6104ca919061074d565b336000908152600560205260409020600201546104e791906107a5565b3360008181526005602052604090819020600301839055600254905163a9059cbb60e01b8152600481019290925260248201929092526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105759190610715565b50336000818152600560209081526040918290206003015491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a2336000818152600560205260408082206003810183905560028101929092556001549154905163a9059cbb60e01b8152600481019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561062c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106509190610715565b50336000818152600560209081526040918290205491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a23360009081526005602052604081205460038054919290916106b890849061078e565b90915550503360009081526005602052604081205550600190565b6000602082840312156106e557600080fd5b5035919050565b6000602082840312156106fe57600080fd5b81356001600160a01b038116811461041557600080fd5b60006020828403121561072757600080fd5b8151801515811461041557600080fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561076757610767610737565b500290565b60008261078957634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156107a0576107a0610737565b500390565b600082198211156107b8576107b8610737565b50019056fea264697066735822122052167ad7176d98323c1142ec594b417d6d8a471cb2896f9a677861e1b1c8f64864736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x9AC CODESIZE SUB DUP1 PUSH2 0x9AC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x13915151081859DC99595B595B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x1AA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 DUP4 PUSH2 0x15B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A1 PUSH1 0x20 DUP5 ADD PUSH2 0x15B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F3 DUP1 PUSH2 0x1B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C93ECFF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xFB5BCA7A EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x227A473B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x2C46502D EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x529ACA49 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x5E9F4435 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0x12F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0x109 PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x109 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xE9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x241 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2F2 SWAP1 TIMESTAMP PUSH2 0x78E JUMP JUMPDEST PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x323 SWAP1 DUP5 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x347 SWAP1 DUP5 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x374 SWAP1 DUP5 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH2 0x3BD SWAP1 TIMESTAMP PUSH2 0x78E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP3 SLOAD SWAP2 SLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x40B SWAP1 DUP5 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4C0 SWAP1 TIMESTAMP PUSH2 0x78E JUMP JUMPDEST PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x551 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 SLOAD SWAP2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x62C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x650 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x6B8 SWAP1 DUP5 SWAP1 PUSH2 0x78E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x767 JUMPI PUSH2 0x767 PUSH2 0x737 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x789 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x7A0 JUMPI PUSH2 0x7A0 PUSH2 0x737 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0x737 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE AND PUSH27 0xD7176D98323C1142EC594B417D6D8A471CB2896F9A677861E1B1C8 0xF6 BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "732:4818:0:-:0;;;1383:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1446:5;:18;;-1:-1:-1;;;;;;1446:18:0;1454:10;1446:18;;;-1:-1:-1;;;;;1483:25:0;;1475:53;;;;-1:-1:-1;;;1475:53:0;;696:2:1;1475:53:0;;;678:21:1;735:2;715:18;;;708:30;-1:-1:-1;;;754:18:1;;;747:46;810:18;;1475:53:0;;;;;;;;;-1:-1:-1;;;;;1547:22:0;;1539:50;;;;-1:-1:-1;;;1539:50:0;;696:2:1;1539:50:0;;;678:21:1;735:2;715:18;;;708:30;-1:-1:-1;;;754:18:1;;;747:46;810:18;;1539:50:0;494:340:1;1539:50:0;1623:8;-1:-1:-1;;;;;1608:23:0;:11;-1:-1:-1;;;;;1608:23:0;;1600:49;;;;-1:-1:-1;;;1600:49:0;;1041:2:1;1600:49:0;;;1023:21:1;1080:2;1060:18;;;1053:30;-1:-1:-1;;;1099:18:1;;;1092:44;1153:18;;1600:49:0;839:338:1;1600:49:0;1660:10;:24;;-1:-1:-1;;;;;1660:24:0;;;-1:-1:-1;;;;;;1660:24:0;;;;;;;1695:7;:18;;;;;;;;;;;732:4818;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;839:338::-;732:4818:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Stake_288": {
									"entryPoint": 489,
									"id": 288,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@User_Map_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvestwithDraw_410": {
									"entryPoint": 1131,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastTotokenRatio_469": {
									"entryPoint": null,
									"id": 469,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@newTotokenRatio_453": {
									"entryPoint": 926,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ratio_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRatio_188": {
									"entryPoint": 1052,
									"id": 188,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeSupple_76": {
									"entryPoint": null,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staketoken_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totoken_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3605:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "304:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "312:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "312:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "304:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "346:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "371:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "364:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "364:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "357:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "357:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "339:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "339:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "263:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "285:4:1",
														"type": ""
													}
												],
												"src": "199:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "492:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "502:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "514:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "502:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "559:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "575:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "580:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "571:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "571:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "584:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "567:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "567:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "537:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "461:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "472:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "483:4:1",
														"type": ""
													}
												],
												"src": "391:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "710:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "722:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "718:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "710:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "763:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "669:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "680:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "691:4:1",
														"type": ""
													}
												],
												"src": "599:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "872:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "881:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "864:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:32:1"
															},
															"nodeType": "YulIf",
															"src": "861:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "935:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "926:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1021:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1030:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1023:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "980:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "991:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1006:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1011:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1002:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1002:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1015:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "998:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "998:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "977:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:50:1"
															},
															"nodeType": "YulIf",
															"src": "967:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1046:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1056:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1046:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "817:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "828:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "840:6:1",
														"type": ""
													}
												],
												"src": "781:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1285:250:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1295:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1307:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1318:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1303:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1303:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1295:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1338:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1349:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1376:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1387:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1392:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1365:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1365:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1365:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1430:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1415:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1435:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1408:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1408:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1462:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1473:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1458:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1451:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1505:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1516:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1522:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1222:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1233:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1241:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1249:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1257:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1276:4:1",
														"type": ""
													}
												],
												"src": "1072:463:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1697:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1707:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1719:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1730:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1715:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1707:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1742:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1760:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1765:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1756:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1756:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1769:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1752:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1746:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1787:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1802:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1810:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1798:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1780:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1780:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1780:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1834:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1845:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1862:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1850:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1850:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1886:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1897:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1882:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1902:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1875:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1650:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1661:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1669:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1677:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1688:4:1",
														"type": ""
													}
												],
												"src": "1540:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1998:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2044:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2053:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2046:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2046:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2046:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2019:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2028:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2015:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:32:1"
															},
															"nodeType": "YulIf",
															"src": "2008:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2069:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2088:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2082:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2073:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2151:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2160:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2163:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2153:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2153:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2153:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2120:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2141:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2134:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2134:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2127:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2127:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2117:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2110:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2110:40:1"
															},
															"nodeType": "YulIf",
															"src": "2107:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2176:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2186:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:1",
														"type": ""
													}
												],
												"src": "1920:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2234:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2251:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2258:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2263:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2244:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2244:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2291:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2294:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2284:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2315:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2318:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2308:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2202:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2445:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2447:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2447:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2417:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2410:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2410:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2403:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2425:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2436:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2432:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2432:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2440:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2428:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2422:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2422:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:45:1"
															},
															"nodeType": "YulIf",
															"src": "2396:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2476:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2491:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2494:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2487:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2476:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2365:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2368:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2374:7:1",
														"type": ""
													}
												],
												"src": "2334:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2584:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2605:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2612:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2617:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2608:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2608:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2598:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2598:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2649:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2652:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2642:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2642:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2642:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2680:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2573:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:9:1"
															},
															"nodeType": "YulIf",
															"src": "2563:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2704:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2713:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2716:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2704:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2538:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2541:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2547:1:1",
														"type": ""
													}
												],
												"src": "2507:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2778:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2800:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2802:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2802:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2802:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2794:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2797:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2791:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:8:1"
															},
															"nodeType": "YulIf",
															"src": "2788:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2831:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2843:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2846:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2831:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2760:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2763:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2769:4:1",
														"type": ""
													}
												],
												"src": "2729:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2907:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2934:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2936:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2936:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2936:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2923:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2930:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2926:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2920:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:13:1"
															},
															"nodeType": "YulIf",
															"src": "2917:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2965:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2976:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2979:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2972:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2965:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2890:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2893:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2899:3:1",
														"type": ""
													}
												],
												"src": "2859:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3166:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3183:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3194:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3176:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3176:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3217:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3228:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3213:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3213:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3206:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3206:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3255:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3266:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3251:18:1"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3271:11:1",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3244:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3292:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3304:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3315:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3300:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3292:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3143:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3157:4:1",
														"type": ""
													}
												],
												"src": "2992:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3458:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3468:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3480:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3491:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3476:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3476:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3468:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3510:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3525:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3541:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3546:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3537:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3537:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3550:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3533:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3533:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3521:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3521:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3503:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3574:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3585:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3570:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3590:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3563:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3419:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3430:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3438:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3449:4:1",
														"type": ""
													}
												],
												"src": "3329:274:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80638c93ecff116100715780638c93ecff146101385780638da5cb5b1461019d578063b2237ba3146101b0578063d942727f146101c5578063dab2997b146101ce578063fb5bca7a146101e157600080fd5b8063227a473b146100ae5780632c46502d146100d6578063529aca49146101015780635e9f44351461011757806371ca337d1461012f575b600080fd5b6100c16100bc3660046106d3565b6101e9565b60405190151581526020015b60405180910390f35b6002546100e9906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b61010961039e565b6040519081526020016100cd565b33600090815260056020526040902060020154610109565b61010960005481565b6101756101463660046106ec565b600560205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016100cd565b6004546100e9906001600160a01b031681565b6101c36101be3660046106d3565b61041c565b005b61010960035481565b6001546100e9906001600160a01b031681565b6100c161046b565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102659190610715565b50604051828152309033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a360008054338252600560205260408220546301e13380916064916102c1919061074d565b6102cb919061076c565b6102d5919061076c565b336000908152600560205260409020600101546102f2904261078e565b6102fc919061074d565b336000908152600560205260408120600201805492935083929091906103239084906107a5565b909155505033600090815260056020526040812080548592906103479084906107a5565b909155505033600090815260056020526040812042600190910155600380548592906103749084906107a5565b90915550503360009081526005602052604090206001808201546004909201919091559392505050565b3360009081526005602052604081206004015481906103bd904261078e565b33600090815260056020526040812060028101548254915493945091926301e13380916064916103ed919061074d565b6103f7919061076c565b610401919061076c565b61040b908461074d565b61041591906107a5565b9392505050565b6004546001600160a01b031633146104665760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640160405180910390fd5b600055565b60008054338252600560205260408220546301e133809160649161048f919061074d565b610499919061076c565b6104a3919061076c565b336000908152600560205260409020600101546104c0904261078e565b6104ca919061074d565b336000908152600560205260409020600201546104e791906107a5565b3360008181526005602052604090819020600301839055600254905163a9059cbb60e01b8152600481019290925260248201929092526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105759190610715565b50336000818152600560209081526040918290206003015491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a2336000818152600560205260408082206003810183905560028101929092556001549154905163a9059cbb60e01b8152600481019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561062c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106509190610715565b50336000818152600560209081526040918290205491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a23360009081526005602052604081205460038054919290916106b890849061078e565b90915550503360009081526005602052604081205550600190565b6000602082840312156106e557600080fd5b5035919050565b6000602082840312156106fe57600080fd5b81356001600160a01b038116811461041557600080fd5b60006020828403121561072757600080fd5b8151801515811461041557600080fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561076757610767610737565b500290565b60008261078957634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156107a0576107a0610737565b500390565b600082198211156107b8576107b8610737565b50019056fea264697066735822122052167ad7176d98323c1142ec594b417d6d8a471cb2896f9a677861e1b1c8f64864736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C93ECFF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xFB5BCA7A EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x227A473B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x2C46502D EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x529ACA49 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x5E9F4435 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0x12F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0x109 PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x109 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xE9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x241 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2F2 SWAP1 TIMESTAMP PUSH2 0x78E JUMP JUMPDEST PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x323 SWAP1 DUP5 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x347 SWAP1 DUP5 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x374 SWAP1 DUP5 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH2 0x3BD SWAP1 TIMESTAMP PUSH2 0x78E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP3 SLOAD SWAP2 SLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x40B SWAP1 DUP5 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4C0 SWAP1 TIMESTAMP PUSH2 0x78E JUMP JUMPDEST PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x551 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 SLOAD SWAP2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x62C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x650 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x6B8 SWAP1 DUP5 SWAP1 PUSH2 0x78E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x767 JUMPI PUSH2 0x767 PUSH2 0x737 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x789 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x7A0 JUMPI PUSH2 0x7A0 PUSH2 0x737 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0x737 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE AND PUSH27 0xD7176D98323C1142EC594B417D6D8A471CB2896F9A677861E1B1C8 0xF6 BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "732:4818:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2034:697;;;;;;:::i;:::-;;:::i;:::-;;;364:14:1;;357:22;339:41;;327:2;312:18;2034:697:0;;;;;;;;849:22;;;;;-1:-1:-1;;;;;849:22:0;;;;;;-1:-1:-1;;;;;555:32:1;;;537:51;;525:2;510:18;849:22:0;391:203:1;5028:329:0;;;:::i;:::-;;;745:25:1;;;733:2;718:18;5028:329:0;599:177:1;5365:171:0;5463:10;5412:4;5454:20;;;:8;:20;;;;;:39;;;5365:171;;793:17;;;;;;1334:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1331:25:1;;;1387:2;1372:18;;1365:34;;;;1415:18;;;1408:34;;;;1473:2;1458:18;;1451:34;1516:3;1501:19;;1494:35;1318:3;1303:19;1334:40:0;1072:463:1;908:20:0;;;;;-1:-1:-1;;;;;908:20:0;;;1934:92;;;;;;:::i;:::-;;:::i;:::-;;878:23;;;;;;817:25;;;;;-1:-1:-1;;;;;817:25:0;;;2739:819;;;:::i;2034:697::-;2104:10;;2097:67;;-1:-1:-1;;;2097:67:0;;2129:10;2097:67;;;1780:34:1;2149:4:0;1830:18:1;;;1823:43;1882:18;;;1875:34;;;2079:4:0;;-1:-1:-1;;;;;2104:10:0;;2097:31;;1715:18:1;;2097:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2183:43:0;;745:25:1;;;2211:4:0;;2191:10;;2183:43;;733:2:1;718:18;2183:43:0;;;;;;;2239:23;2361:5;;2335:10;2326:20;;:8;:20;;;;;:32;2375:8;;2368:3;;2326:40;;2361:5;2326:40;:::i;:::-;:45;;;;:::i;:::-;2325:58;;;;:::i;:::-;2293:10;2284:20;;;;:8;:20;;;;;:36;;;2266:54;;:15;:54;:::i;:::-;2265:119;;;;:::i;:::-;2404:10;2395:20;;;;:8;:20;;;;;:39;;:61;;2239:145;;-1:-1:-1;2239:145:0;;2395:39;;:20;:61;;2239:145;;2395:61;:::i;:::-;;;;-1:-1:-1;;2476:10:0;2467:20;;;;:8;:20;;;;;:43;;2503:7;;2467:20;:43;;2503:7;;2467:43;:::i;:::-;;;;-1:-1:-1;;2530:10:0;2521:20;;;;:8;:20;;;;;2560:15;2521:36;;;;:54;2586:11;:22;;2601:7;;2521:20;2586:22;;2601:7;;2586:22;:::i;:::-;;;;-1:-1:-1;;2669:10:0;2660:20;;;;:8;:20;;;;;:36;;;;;2619:38;;;;:77;;;;2660:36;2034:697;-1:-1:-1;;;2034:697:0:o;5028:329::-;5135:10;5076:4;5126:20;;;:8;:20;;;;;:38;;;5076:4;;5108:56;;:15;:56;:::i;:::-;5282:10;5175:22;5273:20;;;:8;:20;;;;;:39;;;;5247:5;;5212:32;;5093:71;;-1:-1:-1;5175:22:0;;5261:8;;5254:3;;5212:40;;5247:5;5212:40;:::i;:::-;:45;;;;:::i;:::-;5211:58;;;;:::i;:::-;5200:70;;:7;:70;:::i;:::-;:112;;;;:::i;:::-;5175:137;5028:329;-1:-1:-1;;;5028:329:0:o;1934:92::-;1783:5;;-1:-1:-1;;;;;1783:5:0;1769:10;:19;1761:42;;;;-1:-1:-1;;;1761:42:0;;3194:2:1;1761:42:0;;;3176:21:1;3233:1;3213:18;;;3206:29;-1:-1:-1;;;3251:18:1;;;3244:39;3300:18;;1761:42:0;;;;;;;;1999:5:::1;:14:::0;1934:92::o;2739:819::-;2782:4;2972:5;;2946:10;2937:20;;:8;:20;;;;;:32;2986:8;;2979:3;;2937:40;;2972:5;2937:40;:::i;:::-;:45;;;;:::i;:::-;2936:58;;;;:::i;:::-;2904:10;2895:20;;;;:8;:20;;;;;:36;;;2877:54;;:15;:54;:::i;:::-;2876:119;;;;:::i;:::-;2843:10;2834:20;;;;:8;:20;;;;;:39;;;:161;;;;:::i;:::-;2808:10;2799:20;;;;:8;:20;;;;;;;:32;;:196;;;3013:7;;3006:70;;-1:-1:-1;;;3006:70:0;;;;;3503:51:1;;;;3570:18;;;3563:34;;;;-1:-1:-1;;;;;3013:7:0;;;;3006:24;;3476:18:1;;3006:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3104:10:0;3116:20;;;;:8;:20;;;;;;;;;:32;;;3095:54;;745:25:1;;;3095:54:0;;718:18:1;3095:54:0;;;;;;;3171:10;3197:1;3162:20;;;:8;:20;;;;;;:32;;;:36;;;3209:39;;;:43;;;;-1:-1:-1;3275:10:0;3308:32;;3268:73;;-1:-1:-1;;;3268:73:0;;;;;3503:51:1;;;;3570:18;;;3563:34;-1:-1:-1;;;;;3275:10:0;;3268:27;;3476:18:1;;3268:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3369:10:0;3381:20;;;;:8;:20;;;;;;;;;:32;3360:54;;745:25:1;;;3360:54:0;;718:18:1;3360:54:0;;;;;;;3449:10;3440:20;;;;:8;:20;;;;;:32;3425:11;:47;;3440:32;;3425:11;;:47;;3440:32;;3425:47;:::i;:::-;;;;-1:-1:-1;;3492:10:0;3518:1;3483:20;;;:8;:20;;;;;:36;-1:-1:-1;3546:4:0;;2739:819::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;781:286::-;840:6;893:2;881:9;872:7;868:23;864:32;861:52;;;909:1;906;899:12;861:52;935:23;;-1:-1:-1;;;;;987:31:1;;977:42;;967:70;;1033:1;1030;1023:12;1920:277;1987:6;2040:2;2028:9;2019:7;2015:23;2011:32;2008:52;;;2056:1;2053;2046:12;2008:52;2088:9;2082:16;2141:5;2134:13;2127:21;2120:5;2117:32;2107:60;;2163:1;2160;2153:12;2202:127;2263:10;2258:3;2254:20;2251:1;2244:31;2294:4;2291:1;2284:15;2318:4;2315:1;2308:15;2334:168;2374:7;2440:1;2436;2432:6;2428:14;2425:1;2422:21;2417:1;2410:9;2403:17;2399:45;2396:71;;;2447:18;;:::i;:::-;-1:-1:-1;2487:9:1;;2334:168::o;2507:217::-;2547:1;2573;2563:132;;2617:10;2612:3;2608:20;2605:1;2598:31;2652:4;2649:1;2642:15;2680:4;2677:1;2670:15;2563:132;-1:-1:-1;2709:9:1;;2507:217::o;2729:125::-;2769:4;2797:1;2794;2791:8;2788:34;;;2802:18;;:::i;:::-;-1:-1:-1;2839:9:1;;2729:125::o;2859:128::-;2899:3;2930:1;2926:6;2923:1;2920:13;2917:39;;;2936:18;;:::i;:::-;-1:-1:-1;2972:9:1;;2859:128::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "407000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Stake(uint256)": "infinite",
								"User_Map(address)": "11028",
								"harvestwithDraw()": "infinite",
								"lastTotokenRatio()": "2433",
								"newTotokenRatio()": "infinite",
								"owner()": "2359",
								"ratio()": "2384",
								"setRatio(uint256)": "24508",
								"stakeSupple()": "2361",
								"staketoken()": "2425",
								"totoken()": "2360"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 732,
									"end": 5550,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1383,
									"end": 1721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1383,
									"end": 1721,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1446,
									"end": 1451,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1464,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1483,
									"end": 1508,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1483,
									"end": 1508,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 747,
									"end": 793,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 810,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1475,
									"end": 1528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1547,
									"end": 1569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1547,
									"end": 1569,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 747,
									"end": 793,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 810,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 494,
									"end": 834,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1539,
									"end": 1589,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1623,
									"end": 1631,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1608,
									"end": 1619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1044,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 1083,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "13915151081859DC99595B595B9D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "92"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1136,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1171,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1153,
									"end": 1171,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1600,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1660,
									"end": 1670,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1660,
									"end": 1684,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 5550,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052167ad7176d98323c1142ec594b417d6d8a471cb2896f9a677861e1b1c8f64864736f6c634300080f0033",
									".code": [
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "8C93ECFF"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "8C93ECFF"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "B2237BA3"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "D942727F"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "DAB2997B"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "FB5BCA7A"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "227A473B"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "2C46502D"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "529ACA49"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "5E9F4435"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5550,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2034,
											"end": 2731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2034,
											"end": 2731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 364,
											"end": 378,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 357,
											"end": 379,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 339,
											"end": 380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 339,
											"end": 380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 849,
											"end": 871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 537,
											"end": 588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 537,
											"end": 588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 391,
											"end": 594,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5028,
											"end": 5357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 599,
											"end": 776,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5536,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5365,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5463,
											"end": 5473,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5412,
											"end": 5416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5462,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5454,
											"end": 5493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5365,
											"end": 5536,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1334,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1356,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1356,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1389,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1390,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1399,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1399,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1458,
											"end": 1476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1501,
											"end": 1520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1303,
											"end": 1322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1072,
											"end": 1535,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 908,
											"end": 928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1934,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1934,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 817,
											"end": 842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2739,
											"end": 3558,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2739,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2739,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2739,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2739,
											"end": 3558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2104,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2104,
											"end": 2114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2129,
											"end": 2139,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2153,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1882,
											"end": 1900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2104,
											"end": 2114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2104,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2128,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2097,
											"end": 2128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2097,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "PUSH",
											"source": 0,
											"value": "1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C"
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2226,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2326,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2326,
											"end": 2346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2326,
											"end": 2346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2346,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2383,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 2375,
											"end": 2383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2326,
											"end": 2366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2326,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2326,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2326,
											"end": 2371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2326,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2371,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2326,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2325,
											"end": 2383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2325,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2383,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2325,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2320,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2284,
											"end": 2320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2266,
											"end": 2320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2281,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2266,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2266,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2265,
											"end": 2384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2414,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2395,
											"end": 2434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2384,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2239,
											"end": 2384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2395,
											"end": 2456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2384,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2395,
											"end": 2456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2456,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2395,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2456,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2486,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2467,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2467,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2510,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2467,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2510,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2529,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2521,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2541,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2575,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2521,
											"end": 2557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2575,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2597,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2586,
											"end": 2608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2601,
											"end": 2608,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2601,
											"end": 2608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2586,
											"end": 2608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2601,
											"end": 2608,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2601,
											"end": 2608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2586,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2608,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2586,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2608,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2669,
											"end": 2679,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2660,
											"end": 2696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2696,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2619,
											"end": 2657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2696,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2696,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2034,
											"end": 2731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5135,
											"end": 5145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5134,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5126,
											"end": 5146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5126,
											"end": 5146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5126,
											"end": 5146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5146,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5108,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5123,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5108,
											"end": 5164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5164,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5108,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5292,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5281,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5273,
											"end": 5293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5273,
											"end": 5293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5273,
											"end": 5293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5312,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5273,
											"end": 5312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5212,
											"end": 5244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5212,
											"end": 5244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5093,
											"end": 5164,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5093,
											"end": 5164,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5175,
											"end": 5197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5197,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5269,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 5261,
											"end": 5269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5257,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5254,
											"end": 5257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5212,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5212,
											"end": 5252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5212,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5212,
											"end": 5252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5212,
											"end": 5252,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5212,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5212,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5212,
											"end": 5257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5212,
											"end": 5257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5212,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5212,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5212,
											"end": 5257,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5212,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5211,
											"end": 5269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 5269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5211,
											"end": 5269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 5269,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5211,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5200,
											"end": 5270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5207,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5200,
											"end": 5270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5270,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5200,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5200,
											"end": 5312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5200,
											"end": 5312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5312,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5200,
											"end": 5312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5312,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5357,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5028,
											"end": 5357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1934,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1779,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3196,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3213,
											"end": 3231,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3213,
											"end": 3231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3251,
											"end": 3269,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3251,
											"end": 3269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3318,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3300,
											"end": 3318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2739,
											"end": 3558,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2739,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 2956,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2937,
											"end": 2957,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2937,
											"end": 2957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2957,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2986,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 2986,
											"end": 2994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 2982,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2979,
											"end": 2982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2937,
											"end": 2977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2937,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2977,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2937,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2937,
											"end": 2982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2937,
											"end": 2982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2982,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2937,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2936,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2914,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2931,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2895,
											"end": 2931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2877,
											"end": 2931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2892,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2877,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2931,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2877,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2876,
											"end": 2995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2876,
											"end": 2995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2995,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2876,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2843,
											"end": 2853,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2873,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2834,
											"end": 2873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2834,
											"end": 2995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2834,
											"end": 2995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2995,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2834,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2818,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2807,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2799,
											"end": 2831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2995,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3020,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3013,
											"end": 3020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3554,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3554,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3013,
											"end": 3020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3006,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3476,
											"end": 3494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3006,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3006,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3104,
											"end": 3114,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3124,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3116,
											"end": 3148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3149,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3181,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3170,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3194,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3162,
											"end": 3194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3198,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3248,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3209,
											"end": 3248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 3275,
											"end": 3285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3308,
											"end": 3340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3308,
											"end": 3340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3554,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3554,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3275,
											"end": 3285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3268,
											"end": 3295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3476,
											"end": 3494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3268,
											"end": 3341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3268,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3369,
											"end": 3379,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3414,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3459,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 3460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3448,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3440,
											"end": 3460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3440,
											"end": 3460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3440,
											"end": 3460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3436,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3425,
											"end": 3472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3472,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3425,
											"end": 3472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3472,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3425,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3472,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3425,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3472,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3492,
											"end": 3502,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3483,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3483,
											"end": 3503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3519,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3546,
											"end": 3550,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3546,
											"end": 3550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2739,
											"end": 3558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 868,
											"end": 891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 935,
											"end": 958,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1035,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2197,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2028,
											"end": 2037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2008,
											"end": 2060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2058,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2008,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2098,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2149,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2107,
											"end": 2167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2329,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2202,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2273,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2258,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2254,
											"end": 2274,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2284,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2322,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2315,
											"end": 2316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2502,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2334,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2442,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2419,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2396,
											"end": 2467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2447,
											"end": 2465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2724,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2507,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2563,
											"end": 2695,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2612,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2608,
											"end": 2628,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2649,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2685,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2695,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2563,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2709,
											"end": 2718,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2729,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2799,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2788,
											"end": 2822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2802,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2987,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2859,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2933,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2956,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2917,
											"end": 2956,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2936,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"自己写个矿池,定息矿池.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Stake(uint256)": "227a473b",
							"User_Map(address)": "8c93ecff",
							"harvestwithDraw()": "fb5bca7a",
							"lastTotokenRatio()": "5e9f4435",
							"newTotokenRatio()": "529aca49",
							"owner()": "8da5cb5b",
							"ratio()": "71ca337d",
							"setRatio(uint256)": "b2237ba3",
							"stakeSupple()": "d942727f",
							"staketoken()": "dab2997b",
							"totoken()": "2c46502d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staketoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_totoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"User_Map\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_Stake_Time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"whole_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_Time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestwithDraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTotokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newTotokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeSupple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staketoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":\"StakeContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":{\"keccak256\":\"0x1f4261b1afd4940bdd0ea3d2c598bcb9ac82325d62299334841df7e3303d4efc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3d7a95a3ac868e9027c8a6ba1e87699364dee248b8377accbafe2af076b4a36\",\"dweb:/ipfs/QmXEXM8A2AG3ejtBXQrHFysMx7ebM1imnGfmERRchApTwB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "ratio",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 72,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "staketoken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 74,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "totoken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 76,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "stakeSupple",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 78,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 116,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "User_Map",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(User)111_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)111_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakeContract.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)111_storage"
							},
							"t_struct(User)111_storage": {
								"encoding": "inplace",
								"label": "struct StakeContract.User",
								"members": [
									{
										"astId": 102,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "stakeNumber",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 104,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_Stake_Time",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 106,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_totoken_ratio",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 108,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "whole_ratio",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 110,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_totoken_Time",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"自己写个矿池,定息矿池.sol": {
				"ast": {
					"absolutePath": "自己写个矿池,定息矿池.sol",
					"exportedSymbols": {
						"IERC20": [
							68
						],
						"StakeContract": [
							470
						]
					},
					"id": 471,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nameLocation": "78:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "101:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:6:0"
									},
									"scope": 68,
									"src": "92:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "161:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "211:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:6:0"
									},
									"scope": 68,
									"src": "152:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "234:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "251:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "243:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "262:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:31:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "292:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:0"
									},
									"scope": 68,
									"src": "225:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "315:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "333:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "325:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:32:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "380:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:6:0"
									},
									"scope": 68,
									"src": "306:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "403:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "433:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "428:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:29:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "458:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "458:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:6:0"
									},
									"scope": 68,
									"src": "394:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "481:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "502:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "494:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "518:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "510:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "529:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:47:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:6:0"
									},
									"scope": 68,
									"src": "472:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 59,
									"name": "Trasfer",
									"nameLocation": "579:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "603:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "587:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "625:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "609:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "629:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:54:0"
									},
									"src": "573:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 67,
									"name": "Approveal",
									"nameLocation": "653:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "663:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "686:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "716:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "711:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:60:0"
									},
									"src": "647:76:0"
								}
							],
							"scope": 471,
							"src": "68:660:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakeContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 470,
							"linearizedBaseContracts": [
								470
							],
							"name": "StakeContract",
							"nameLocation": "741:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "71ca337d",
									"id": 70,
									"mutability": "mutable",
									"name": "ratio",
									"nameLocation": "805:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "793:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 69,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "793:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dab2997b",
									"id": 72,
									"mutability": "mutable",
									"name": "staketoken",
									"nameLocation": "832:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "817:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "817:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c46502d",
									"id": 74,
									"mutability": "mutable",
									"name": "totoken",
									"nameLocation": "864:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "849:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "849:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d942727f",
									"id": 76,
									"mutability": "mutable",
									"name": "stakeSupple",
									"nameLocation": "890:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "878:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 75,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "878:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 78,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "923:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "908:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 77,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "908:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 86,
									"name": "Trasfer",
									"nameLocation": "947:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "971:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "955:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "993:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "977:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "997:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:54:0"
									},
									"src": "941:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 94,
									"name": "Approveal",
									"nameLocation": "1021:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1031:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1070:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1054:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1084:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:60:0"
									},
									"src": "1015:76:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
									"id": 100,
									"name": "transfer",
									"nameLocation": "1103:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1128:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1112:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1137:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1132:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:32:0"
									},
									"src": "1097:47:0"
								},
								{
									"canonicalName": "StakeContract.User",
									"id": 111,
									"members": [
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "stakeNumber",
											"nameLocation": "1180:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1175:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1175:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "last_Stake_Time",
											"nameLocation": "1207:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1202:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1202:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "last_totoken_ratio",
											"nameLocation": "1238:18:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1233:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 105,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1233:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "whole_ratio",
											"nameLocation": "1274:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1269:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1269:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "last_totoken_Time",
											"nameLocation": "1301:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1296:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1296:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "1159:4:0",
									"nodeType": "StructDefinition",
									"scope": 470,
									"src": "1152:174:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c93ecff",
									"id": 116,
									"mutability": "mutable",
									"name": "User_Map",
									"nameLocation": "1366:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "1334:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
										"typeString": "mapping(address => struct StakeContract.User)"
									},
									"typeName": {
										"id": 115,
										"keyType": {
											"id": 112,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1342:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1334:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
											"typeString": "mapping(address => struct StakeContract.User)"
										},
										"valueType": {
											"id": 114,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 113,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 111,
												"src": "1353:4:0"
											},
											"referencedDeclaration": 111,
											"src": "1353:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$111_storage_ptr",
												"typeString": "struct StakeContract.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1435:286:0",
										"statements": [
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1446:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 124,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1454:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1454:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1446:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1446:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 129,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1483:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1506:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1498:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1498:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1498:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1483:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1509:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1475:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1475:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1475:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 139,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1547:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1559:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 140,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1559:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1559:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1547:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1570:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1539:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1539:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1539:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 149,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1608:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 150,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1623:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1608:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4545442061677265656d656e74",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1632:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															},
															"value": "NEED agreement"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1600:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1600:49:0"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1660:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "_staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1673:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1660:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1660:24:0"
											},
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 159,
														"name": "totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1695:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 160,
														"name": "_totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1705:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1695:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1695:18:0"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "_staketoken",
												"nameLocation": "1404:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1396:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "_totoken",
												"nameLocation": "1425:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1417:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1395:39:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:0:0"
									},
									"scope": 470,
									"src": "1383:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1750:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 167,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1769:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1769:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 169,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1783:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1769:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1791:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1761:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1761:42:0"
											},
											{
												"id": 174,
												"nodeType": "PlaceholderStatement",
												"src": "1814:1:0"
											}
										]
									},
									"id": 176,
									"name": "onlyOwner",
									"nameLocation": "1738:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:0"
									},
									"src": "1729:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1984:42:0",
										"statements": [
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1999:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "_ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "2007:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1999:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1999:14:0"
											}
										]
									},
									"functionSelector": "b2237ba3",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 180,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "1974:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1974:9:0"
										}
									],
									"name": "setRatio",
									"nameLocation": "1943:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "1957:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1952:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1952:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1951:13:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1984:0:0"
									},
									"scope": 470,
									"src": "1934:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "2084:647:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2129:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2129:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 203,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2149:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$470",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$470",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2141:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2141:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2141:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2156:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2104:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 195,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2097:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "2097:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2097:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2097:67:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2191:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2191:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 213,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2211:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$470",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$470",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2203:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 211,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2203:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2203:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2218:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 208,
														"name": "Trasfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2183:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2178:48:0"
											},
											{
												"assignments": [
													219
												],
												"declarations": [
													{
														"constant": false,
														"id": 219,
														"mutability": "mutable",
														"name": "last_totoken_ratio",
														"nameLocation": "2244:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 287,
														"src": "2239:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 218,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 220,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2266:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2266:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 222,
																			"name": "User_Map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 116,
																			"src": "2284:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																				"typeString": "mapping(address => struct StakeContract.User storage ref)"
																			}
																		},
																		"id": 225,
																		"indexExpression": {
																			"expression": {
																				"id": 223,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2293:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2293:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2284:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$111_storage",
																			"typeString": "struct StakeContract.User storage ref"
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "last_Stake_Time",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 104,
																	"src": "2284:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2266:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 228,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2265:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 229,
																							"name": "User_Map",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 116,
																							"src": "2326:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																								"typeString": "mapping(address => struct StakeContract.User storage ref)"
																							}
																						},
																						"id": 232,
																						"indexExpression": {
																							"expression": {
																								"id": 230,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "2335:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 231,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "2335:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2326:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$111_storage",
																							"typeString": "struct StakeContract.User storage ref"
																						}
																					},
																					"id": 233,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeNumber",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 102,
																					"src": "2326:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 234,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "2361:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2326:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2368:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "2326:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 238,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2325:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3331353336303030",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2375:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "31536000"
																},
																"src": "2325:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 241,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2324:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2265:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2239:145:0"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 244,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2395:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 247,
															"indexExpression": {
																"expression": {
																	"id": 245,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2404:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2404:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2395:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "2395:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 249,
														"name": "last_totoken_ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "2438:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2395:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2395:61:0"
											},
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 252,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2467:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 255,
															"indexExpression": {
																"expression": {
																	"id": 253,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2476:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2476:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2467:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2467:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 257,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2467:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2467:43:0"
											},
											{
												"expression": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 260,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2521:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 263,
															"indexExpression": {
																"expression": {
																	"id": 261,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2530:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2530:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2521:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "2521:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 265,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2560:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2560:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2521:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "2521:54:0"
											},
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 269,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2586:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 270,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2586:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "2586:22:0"
											},
											{
												"expression": {
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 273,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2619:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 276,
															"indexExpression": {
																"expression": {
																	"id": 274,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2628:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2628:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2619:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "2619:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 278,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2660:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 281,
															"indexExpression": {
																"expression": {
																	"id": 279,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2669:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2669:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2660:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "2660:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2619:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "2619:77:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2714:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 194,
												"id": 286,
												"nodeType": "Return",
												"src": "2707:11:0"
											}
										]
									},
									"functionSelector": "227a473b",
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Stake",
									"nameLocation": "2043:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2049:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2048:14:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2079:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:6:0"
									},
									"scope": 470,
									"src": "2034:697:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "2788:770:0",
										"statements": [
											{
												"expression": {
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 293,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2799:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 296,
															"indexExpression": {
																"expression": {
																	"id": 294,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2808:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2808:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2799:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "2799:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 298,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "2834:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 301,
																"indexExpression": {
																	"expression": {
																		"id": 299,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2843:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2843:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2834:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "last_totoken_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 106,
															"src": "2834:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 303,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2877:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2877:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 305,
																					"name": "User_Map",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 116,
																					"src": "2895:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																						"typeString": "mapping(address => struct StakeContract.User storage ref)"
																					}
																				},
																				"id": 308,
																				"indexExpression": {
																					"expression": {
																						"id": 306,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2904:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 307,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2904:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2895:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$111_storage",
																					"typeString": "struct StakeContract.User storage ref"
																				}
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "last_Stake_Time",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 104,
																			"src": "2895:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2877:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 311,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2876:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 320,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 318,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 312,
																									"name": "User_Map",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 116,
																									"src": "2937:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																										"typeString": "mapping(address => struct StakeContract.User storage ref)"
																									}
																								},
																								"id": 315,
																								"indexExpression": {
																									"expression": {
																										"id": 313,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2946:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 314,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2946:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2937:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$111_storage",
																									"typeString": "struct StakeContract.User storage ref"
																								}
																							},
																							"id": 316,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakeNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 102,
																							"src": "2937:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 317,
																							"name": "ratio",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "2972:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2937:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 319,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2979:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "2937:45:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 321,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2936:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3331353336303030",
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2986:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31536000_by_1",
																				"typeString": "int_const 31536000"
																			},
																			"value": "31536000"
																		},
																		"src": "2936:58:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 324,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2935:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2876:119:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2834:161:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2799:196:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "2799:196:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 333,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3031:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3031:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 335,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "3043:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 338,
																"indexExpression": {
																	"expression": {
																		"id": 336,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3052:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3052:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3043:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "3043:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 330,
																	"name": "totoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "3013:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 329,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "3006:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3006:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3006:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3006:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "3006:70:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 343,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3104:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3104:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 345,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "3116:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 348,
																"indexExpression": {
																	"expression": {
																		"id": 346,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3125:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3125:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3116:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "3116:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3095:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3095:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "EmitStatement",
												"src": "3090:59:0"
											},
											{
												"expression": {
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 352,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 355,
															"indexExpression": {
																"expression": {
																	"id": 353,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3171:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3171:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3162:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "3162:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3197:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3162:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "3162:36:0"
											},
											{
												"expression": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 360,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3209:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 363,
															"indexExpression": {
																"expression": {
																	"id": 361,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3218:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3218:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3209:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3209:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3251:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3209:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "3209:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 372,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3296:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3296:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 374,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "3308:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 377,
																"indexExpression": {
																	"expression": {
																		"id": 375,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3317:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3317:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3308:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "3308:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 369,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "3275:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 368,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "3268:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3268:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3268:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3268:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "3268:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 382,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3369:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3369:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 384,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "3381:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 387,
																"indexExpression": {
																	"expression": {
																		"id": 385,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3390:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3390:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3381:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "3381:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3360:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3360:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "EmitStatement",
												"src": "3355:59:0"
											},
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 391,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "3425:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 392,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3440:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 395,
															"indexExpression": {
																"expression": {
																	"id": 393,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3449:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3449:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3440:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "3440:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3425:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "3425:47:0"
											},
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 399,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3483:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 402,
															"indexExpression": {
																"expression": {
																	"id": 400,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3492:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3492:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3483:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "3483:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3518:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3483:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "3483:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3546:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 292,
												"id": 408,
												"nodeType": "Return",
												"src": "3539:11:0"
											}
										]
									},
									"functionSelector": "fb5bca7a",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvestwithDraw",
									"nameLocation": "2748:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2763:2:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "2782:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2782:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:6:0"
									},
									"scope": 470,
									"src": "2739:819:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "5082:275:0",
										"statements": [
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "newtime",
														"nameLocation": "5098:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "5093:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 415,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5093:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 417,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5108:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5108:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 419,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5126:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 422,
															"indexExpression": {
																"expression": {
																	"id": 420,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5135:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5135:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5126:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "5126:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5108:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5093:71:0"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "newTotokenRatione",
														"nameLocation": "5180:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "5175:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5175:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 428,
															"name": "newtime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "5200:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 429,
																								"name": "User_Map",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 116,
																								"src": "5212:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																									"typeString": "mapping(address => struct StakeContract.User storage ref)"
																								}
																							},
																							"id": 432,
																							"indexExpression": {
																								"expression": {
																									"id": 430,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "5221:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 431,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "5221:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5212:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$111_storage",
																								"typeString": "struct StakeContract.User storage ref"
																							}
																						},
																						"id": 433,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "stakeNumber",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 102,
																						"src": "5212:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 434,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 70,
																						"src": "5247:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5212:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5254:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "5212:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 438,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5211:47:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3331353336303030",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5261:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31536000_by_1",
																			"typeString": "int_const 31536000"
																		},
																		"value": "31536000"
																	},
																	"src": "5211:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 441,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5210:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5200:70:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 443,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5273:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 446,
															"indexExpression": {
																"expression": {
																	"id": 444,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5282:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5273:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "5273:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5200:112:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5175:137:0"
											},
											{
												"expression": {
													"id": 450,
													"name": "newTotokenRatione",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "5330:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 414,
												"id": 451,
												"nodeType": "Return",
												"src": "5323:24:0"
											}
										]
									},
									"functionSelector": "529aca49",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "newTotokenRatio",
									"nameLocation": "5037:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5052:2:0"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "5076:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5076:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5075:6:0"
									},
									"scope": 470,
									"src": "5028:329:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "5418:118:0",
										"statements": [
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "_lastTotokenRatio",
														"nameLocation": "5434:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 468,
														"src": "5429:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 458,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5429:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 460,
															"name": "User_Map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "5454:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																"typeString": "mapping(address => struct StakeContract.User storage ref)"
															}
														},
														"id": 463,
														"indexExpression": {
															"expression": {
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5463:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5454:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$111_storage",
															"typeString": "struct StakeContract.User storage ref"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "last_totoken_ratio",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 106,
													"src": "5454:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5429:64:0"
											},
											{
												"expression": {
													"id": 466,
													"name": "_lastTotokenRatio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 459,
													"src": "5511:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 457,
												"id": 467,
												"nodeType": "Return",
												"src": "5504:24:0"
											}
										]
									},
									"functionSelector": "5e9f4435",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTotokenRatio",
									"nameLocation": "5374:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5390:2:0"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "5412:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5412:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:6:0"
									},
									"scope": 470,
									"src": "5365:171:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 471,
							"src": "732:4818:0",
							"usedErrors": []
						}
					],
					"src": "38:5514:0"
				},
				"id": 0
			}
		}
	}
}