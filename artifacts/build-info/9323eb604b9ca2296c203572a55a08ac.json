{
	"id": "9323eb604b9ca2296c203572a55a08ac",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"写个amm合约.sol": {
				"content": " // SPDX-License-Identifier: MIT  \r\n\r\npragma solidity ^0.8.7;  \r\ninterface IERC20 {\r\n    function transfer(address recipient, uint amout) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint amout) external returns (bool);\r\n}\r\ncontract Stopcock {\r\n    address public  BTCtoken;\r\n    address public  ETHtoken;\r\n    uint public ReceivedBTCTokenNumber;\r\n    uint public ReceivedETHTokenNumber;\r\n    uint public MaxTokenLimit;\r\n    address public owner;\r\n    uint public tradeETHproportion;\r\n    uint public tradeBTCproportion;\r\n\r\n    struct User{\r\n        uint claimBTCNumber;\r\n        uint claimETHNumber;\r\n    }\r\n\r\n    mapping(address => User) public User_Map;\r\n\r\n\r\n    constructor(address _BTCtoken, address _ETHtoken, uint _ReceivedBTCTokenNumber, uint _ReceivedETHTokenNumber){\r\n        require(_BTCtoken != _ETHtoken);\r\n        owner = msg.sender;\r\n        BTCtoken = _BTCtoken;\r\n        ETHtoken = _ETHtoken;\r\n        ReceivedBTCTokenNumber = _ReceivedBTCTokenNumber;\r\n        ReceivedETHTokenNumber = _ReceivedETHTokenNumber;\r\n    }\r\n\r\n\r\n    function claimBTC(uint _claim) public returns (bool) {\r\n        require(User_Map[msg.sender].claimBTCNumber  < 10000000000000000000, \"claim beyond\");\r\n        IERC20(BTCtoken).transfer(msg.sender,_claim);\r\n        User_Map[msg.sender].claimBTCNumber += _claim;\r\n        ReceivedBTCTokenNumber += _claim;\r\n        tradeBTCproportion = ((ReceivedETHTokenNumber * 1000000000000000000) / ReceivedBTCTokenNumber);  \r\n        return(true);\r\n    }\r\n\r\n    function claimETH(uint _claim) public returns (bool) {\r\n        require(User_Map[msg.sender].claimETHNumber   < 10000000000000000000, \"claim beyond\");\r\n        IERC20(ETHtoken).transfer(msg.sender,_claim);\r\n        User_Map[msg.sender].claimETHNumber += _claim;\r\n        ReceivedETHTokenNumber += _claim;\r\n        tradeETHproportion = ((ReceivedBTCTokenNumber * 1000000000000000000) /  ReceivedETHTokenNumber);\r\n        return(true);\r\n    }\r\n\r\n    function trade(address _fromToken, address   , uint _fromAmount) public returns (bool) {\r\n        if (_fromToken == BTCtoken) {\r\n            IERC20(BTCtoken).transferFrom(msg.sender, address(this), _fromAmount);\r\n            ReceivedBTCTokenNumber += _fromAmount;\r\n            // 使用eth总数除以btc总数，算出来一个btc可以兑换多少eth的数量 你\r\n            // 使用需要btc数量*兑换比例 = 需要发送的eth代币数量\r\n            tradeBTCproportion = ((ReceivedETHTokenNumber * 1000000000000000000) /  ReceivedBTCTokenNumber);\r\n            uint send_ethTokenNumber = (_fromAmount * tradeBTCproportion) / 1000000000000000000;\r\n            IERC20(ETHtoken).transfer(msg.sender,send_ethTokenNumber);\r\n            ReceivedETHTokenNumber -= send_ethTokenNumber;\r\n        }\r\n\r\n        else if(_fromToken == ETHtoken) {\r\n            IERC20(ETHtoken).transferFrom(msg.sender, address(this), _fromAmount);\r\n            ReceivedETHTokenNumber += _fromAmount;\r\n            tradeETHproportion = ((ReceivedBTCTokenNumber * 1000000000000000000) /  ReceivedETHTokenNumber);\r\n            uint send_btcTokenNumber = (_fromAmount * tradeETHproportion) / 1000000000000000000;\r\n            IERC20(BTCtoken).transfer(msg.sender,send_btcTokenNumber);\r\n            ReceivedBTCTokenNumber -= send_btcTokenNumber;\r\n        }\r\n        return true;\r\n    }  \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"写个amm合约.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5199\\u4e2aamm\\u5408\\u7ea6.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5199\\u4e2aamm\\u5408\\u7ea6.sol\":{\"keccak256\":\"0x9c15b6efe53d44a0b867d41764b2e85dde2b26a28c40c4a4616edf8b83bd6bfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f25f522f580bf7c16025496896dad5cb34f0b23198ad7b094d7783a8fb1e9f77\",\"dweb:/ipfs/QmUC5HEiXUrPxx6sBVLAQviHsmj1AB4v6qF8XZ79GETVdP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Stopcock": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_BTCtoken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ETHtoken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ReceivedBTCTokenNumber",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_ReceivedETHTokenNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "BTCtoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ETHtoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MaxTokenLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ReceivedBTCTokenNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ReceivedETHTokenNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "User_Map",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "claimBTCNumber",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimETHNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claim",
									"type": "uint256"
								}
							],
							"name": "claimBTC",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claim",
									"type": "uint256"
								}
							],
							"name": "claimETH",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_fromToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fromAmount",
									"type": "uint256"
								}
							],
							"name": "trade",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradeBTCproportion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradeETHproportion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":266:3348  contract Stopcock {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":708:1076  constructor(address _BTCtoken, address _ETHtoken, uint _ReceivedBTCTokenNumber, uint _ReceivedETHTokenNumber){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":849:858  _ETHtoken */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":836:858  _BTCtoken != _ETHtoken */\n  and\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":836:845  _BTCtoken */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":836:858  _BTCtoken != _ETHtoken */\n  and\n  sub\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":828:859  require(_BTCtoken != _ETHtoken) */\n  tag_6\n  jumpi\n  0x00\n  dup1\n  revert\ntag_6:\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":870:875  owner */\n  0x05\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":870:888  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":878:888  msg.sender */\n  caller\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":870:888  owner = msg.sender */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":870:875  owner */\n  0x00\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":899:919  BTCtoken = _BTCtoken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  swap1\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":870:888  owner = msg.sender */\n  0x01\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":930:950  ETHtoken = _ETHtoken */\n  dup1\n  sload\n  swap5\n  swap1\n  swap6\n  and\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap3\n  sstore\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":961:983  ReceivedBTCTokenNumber */\n  0x02\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":961:1009  ReceivedBTCTokenNumber = _ReceivedBTCTokenNumber */\n  swap2\n  swap1\n  swap2\n  sstore\n  0x03\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1020:1068  ReceivedETHTokenNumber = _ReceivedETHTokenNumber */\n  sstore\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":266:3348  contract Stopcock {... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:191   */\ntag_8:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_11\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_11:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:612   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  dup1\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  dup1\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  dup1\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_13:\n    /* \"#utility.yul\":410:450   */\n  tag_14\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_15\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_8\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":558:560   */\n  0x40\n    /* \"#utility.yul\":543:561   */\n  dup7\n  add\n    /* \"#utility.yul\":537:562   */\n  mload\n    /* \"#utility.yul\":602:604   */\n  0x60\n    /* \"#utility.yul\":587:605   */\n  swap1\n  swap7\n  add\n    /* \"#utility.yul\":581:606   */\n  mload\n    /* \"#utility.yul\":196:612   */\n  swap5\n  swap8\n    /* \"#utility.yul\":459:518   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":196:612   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_9:\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":266:3348  contract Stopcock {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":266:3348  contract Stopcock {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8c93ecff\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8c93ecff\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9393357c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd88ea08\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf733f048\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfe96973a\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x069a0382\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b843498\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2bba682a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5253baae\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x66e48d24\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x81b7dacb\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":394:428  uint public ReceivedETHTokenNumber */\n    tag_3:\n      tag_16\n      sload(0x03)\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":394:428  uint public ReceivedETHTokenNumber */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":353:387  uint public ReceivedBTCTokenNumber */\n    tag_4:\n      tag_16\n      sload(0x02)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":291:315  address public  BTCtoken */\n    tag_5:\n      sload(0x00)\n      tag_23\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_23:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":360:392   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":342:393   */\n      dup2\n      mstore\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":291:315  address public  BTCtoken */\n      tag_18\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1982:3343  function trade(address _fromToken, address   , uint _fromAmount) public returns (bool) {... */\n    tag_6:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1080:1094   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1073:1095   */\n      iszero\n        /* \"#utility.yul\":1055:1096   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1043:1045   */\n      0x20\n        /* \"#utility.yul\":1028:1046   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1982:3343  function trade(address _fromToken, address   , uint _fromAmount) public returns (bool) {... */\n      tag_18\n        /* \"#utility.yul\":915:1102   */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":435:460  uint public MaxTokenLimit */\n    tag_7:\n      tag_16\n      sload(0x04)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":322:346  address public  ETHtoken */\n    tag_8:\n      sload(0x01)\n      tag_23\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":657:697  mapping(address => User) public User_Map */\n    tag_9:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_39:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1472:1497   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1528:1530   */\n      0x20\n        /* \"#utility.yul\":1513:1531   */\n      dup4\n      add\n        /* \"#utility.yul\":1506:1540   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1445:1463   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":657:697  mapping(address => User) public User_Map */\n      tag_18\n        /* \"#utility.yul\":1298:1546   */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":467:487  address public owner */\n    tag_10:\n      sload(0x05)\n      tag_23\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":494:524  uint public tradeETHproportion */\n    tag_11:\n      tag_16\n      sload(0x06)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":531:561  uint public tradeBTCproportion */\n    tag_12:\n      tag_16\n      sload(0x07)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1086:1526  function claimBTC(uint _claim) public returns (bool) {... */\n    tag_13:\n      tag_27\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1534:1974  function claimETH(uint _claim) public returns (bool) {... */\n    tag_14:\n      tag_27\n      tag_60\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1982:3343  function trade(address _fromToken, address   , uint _fromAmount) public returns (bool) {... */\n    tag_30:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2063:2067  bool */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2098:2106  BTCtoken */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2084:2106  _fromToken == BTCtoken */\n      swap1\n      dup6\n      and\n      sub\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2080:3314  if (_fromToken == BTCtoken) {... */\n      tag_64\n      jumpi\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2130:2138  BTCtoken */\n      sload(0x00)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2123:2192  IERC20(BTCtoken).transferFrom(msg.sender, address(this), _fromAmount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2153:2163  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2123:2192  IERC20(BTCtoken).transferFrom(msg.sender, address(this), _fromAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1976:2010   */\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2173:2177  this */\n      address\n        /* \"#utility.yul\":2026:2044   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2019:2062   */\n      mstore\n        /* \"#utility.yul\":2078:2096   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2071:2105   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2130:2138  BTCtoken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2123:2152  IERC20(BTCtoken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":1911:1929   */\n      0x64\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2123:2192  IERC20(BTCtoken).transferFrom(msg.sender, address(this), _fromAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2233:2244  _fromAmount */\n      dup2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2207:2229  ReceivedBTCTokenNumber */\n      0x02\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2207:2244  ReceivedBTCTokenNumber += _fromAmount */\n      dup3\n      dup3\n      sload\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2517:2539  ReceivedBTCTokenNumber */\n      sload(0x02)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2468:2490  ReceivedETHTokenNumber */\n      sload(0x03)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2468:2512  ReceivedETHTokenNumber * 1000000000000000000 */\n      tag_73\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2493:2512  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2468:2512  ReceivedETHTokenNumber * 1000000000000000000 */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2467:2539  (ReceivedETHTokenNumber * 1000000000000000000) /  ReceivedBTCTokenNumber */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2445:2463  tradeBTCproportion */\n      0x07\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2445:2540  tradeBTCproportion = ((ReceivedETHTokenNumber * 1000000000000000000) /  ReceivedBTCTokenNumber) */\n      dup2\n      swap1\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2555:2579  uint send_ethTokenNumber */\n      0x00\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2619:2638  1000000000000000000 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2583:2615  _fromAmount * tradeBTCproportion */\n      tag_77\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2583:2594  _fromAmount */\n      dup6\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2583:2615  _fromAmount * tradeBTCproportion */\n      tag_74\n      jump\t// in\n    tag_77:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2582:2638  (_fromAmount * tradeBTCproportion) / 1000000000000000000 */\n      tag_78\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_78:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2660:2668  ETHtoken */\n      sload(0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2653:2710  IERC20(ETHtoken).transfer(msg.sender,send_ethTokenNumber) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2679:2689  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2653:2710  IERC20(ETHtoken).transfer(msg.sender,send_ethTokenNumber) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3232:3283   */\n      mstore\n        /* \"#utility.yul\":3299:3317   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3292:3326   */\n      dup4\n      swap1\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2555:2638  uint send_ethTokenNumber = (_fromAmount * tradeBTCproportion) / 1000000000000000000 */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2660:2668  ETHtoken */\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2653:2678  IERC20(ETHtoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3205:3223   */\n      0x44\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2653:2710  IERC20(ETHtoken).transfer(msg.sender,send_ethTokenNumber) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_83:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2751:2770  send_ethTokenNumber */\n      dup1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2725:2747  ReceivedETHTokenNumber */\n      0x03\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2725:2770  ReceivedETHTokenNumber -= send_ethTokenNumber */\n      dup3\n      dup3\n      sload\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2080:3314  if (_fromToken == BTCtoken) {... */\n      tag_87\n      swap2\n      pop\n      pop\n      jump\n    tag_64:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2816:2824  ETHtoken */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2802:2824  _fromToken == ETHtoken */\n      swap1\n      dup6\n      and\n      sub\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2799:3314  if(_fromToken == ETHtoken) {... */\n      tag_87\n      jumpi\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2848:2856  ETHtoken */\n      sload(0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2841:2910  IERC20(ETHtoken).transferFrom(msg.sender, address(this), _fromAmount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2871:2881  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2841:2910  IERC20(ETHtoken).transferFrom(msg.sender, address(this), _fromAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1976:2010   */\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2891:2895  this */\n      address\n        /* \"#utility.yul\":2026:2044   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2019:2062   */\n      mstore\n        /* \"#utility.yul\":2078:2096   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2071:2105   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2848:2856  ETHtoken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2841:2870  IERC20(ETHtoken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":1911:1929   */\n      0x64\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2841:2910  IERC20(ETHtoken).transferFrom(msg.sender, address(this), _fromAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_91:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2951:2962  _fromAmount */\n      dup2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2925:2947  ReceivedETHTokenNumber */\n      0x03\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2925:2962  ReceivedETHTokenNumber += _fromAmount */\n      dup3\n      dup3\n      sload\n      tag_92\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_92:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3049:3071  ReceivedETHTokenNumber */\n      sload(0x03)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3000:3022  ReceivedBTCTokenNumber */\n      sload(0x02)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3000:3044  ReceivedBTCTokenNumber * 1000000000000000000 */\n      tag_93\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3025:3044  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3000:3044  ReceivedBTCTokenNumber * 1000000000000000000 */\n      tag_74\n      jump\t// in\n    tag_93:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2999:3071  (ReceivedBTCTokenNumber * 1000000000000000000) /  ReceivedETHTokenNumber */\n      tag_94\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_94:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2977:2995  tradeETHproportion */\n      0x06\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2977:3072  tradeETHproportion = ((ReceivedBTCTokenNumber * 1000000000000000000) /  ReceivedETHTokenNumber) */\n      dup2\n      swap1\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3087:3111  uint send_btcTokenNumber */\n      0x00\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3151:3170  1000000000000000000 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3115:3147  _fromAmount * tradeETHproportion */\n      tag_95\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3115:3126  _fromAmount */\n      dup6\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3115:3147  _fromAmount * tradeETHproportion */\n      tag_74\n      jump\t// in\n    tag_95:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3114:3170  (_fromAmount * tradeETHproportion) / 1000000000000000000 */\n      tag_96\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_96:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3192:3200  BTCtoken */\n      sload(0x00)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3185:3242  IERC20(BTCtoken).transfer(msg.sender,send_btcTokenNumber) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3211:3221  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3185:3242  IERC20(BTCtoken).transfer(msg.sender,send_btcTokenNumber) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3232:3283   */\n      mstore\n        /* \"#utility.yul\":3299:3317   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3292:3326   */\n      dup4\n      swap1\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3087:3170  uint send_btcTokenNumber = (_fromAmount * tradeETHproportion) / 1000000000000000000 */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3192:3200  BTCtoken */\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3185:3210  IERC20(BTCtoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3205:3223   */\n      0x44\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3185:3242  IERC20(BTCtoken).transfer(msg.sender,send_btcTokenNumber) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_100:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3283:3302  send_btcTokenNumber */\n      dup1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3257:3279  ReceivedBTCTokenNumber */\n      0x02\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3257:3302  ReceivedBTCTokenNumber -= send_btcTokenNumber */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_101:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":2799:3314  if(_fromToken == ETHtoken) {... */\n    tag_87:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":3331:3335  true */\n      0x01\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1982:3343  function trade(address _fromToken, address   , uint _fromAmount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1086:1526  function claimBTC(uint _claim) public returns (bool) {... */\n    tag_57:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1167:1177  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1133:1137  bool */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1158:1178  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1158:1166  User_Map */\n      0x08\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1158:1178  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1158:1193  User_Map[msg.sender].claimBTCNumber */\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1197:1217  10000000000000000000 */\n      0x8ac7230489e80000\n      gt\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1150:1234  require(User_Map[msg.sender].claimBTCNumber  < 10000000000000000000, \"claim beyond\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3669:3671   */\n      0x20\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1150:1234  require(User_Map[msg.sender].claimBTCNumber  < 10000000000000000000, \"claim beyond\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3651:3672   */\n      mstore\n        /* \"#utility.yul\":3708:3710   */\n      0x0c\n        /* \"#utility.yul\":3688:3706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3681:3711   */\n      mstore\n      shl(0xa2, 0x18db185a5b4818995e5bdb99)\n        /* \"#utility.yul\":3727:3745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3720:3762   */\n      mstore\n        /* \"#utility.yul\":3779:3797   */\n      0x64\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1150:1234  require(User_Map[msg.sender].claimBTCNumber  < 10000000000000000000, \"claim beyond\") */\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1252:1260  BTCtoken */\n      sload(0x00)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1245:1289  IERC20(BTCtoken).transfer(msg.sender,_claim) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1271:1281  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1245:1289  IERC20(BTCtoken).transfer(msg.sender,_claim) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3232:3283   */\n      mstore\n        /* \"#utility.yul\":3299:3317   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3292:3326   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1252:1260  BTCtoken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1245:1270  IERC20(BTCtoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3205:3223   */\n      0x44\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1245:1289  IERC20(BTCtoken).transfer(msg.sender,_claim) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_109:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1309:1319  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1300:1320  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1300:1308  User_Map */\n      0x08\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1300:1320  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1300:1345  User_Map[msg.sender].claimBTCNumber += _claim */\n      dup1\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1339:1345  _claim */\n      dup5\n      swap3\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1300:1320  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1300:1345  User_Map[msg.sender].claimBTCNumber += _claim */\n      tag_110\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1339:1345  _claim */\n      dup5\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1300:1345  User_Map[msg.sender].claimBTCNumber += _claim */\n      tag_72\n      jump\t// in\n    tag_110:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1382:1388  _claim */\n      dup2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1356:1378  ReceivedBTCTokenNumber */\n      0x02\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1356:1388  ReceivedBTCTokenNumber += _claim */\n      dup3\n      dup3\n      sload\n      tag_111\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_111:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1470:1492  ReceivedBTCTokenNumber */\n      sload(0x02)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1422:1444  ReceivedETHTokenNumber */\n      sload(0x03)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1422:1466  ReceivedETHTokenNumber * 1000000000000000000 */\n      tag_112\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1447:1466  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1422:1466  ReceivedETHTokenNumber * 1000000000000000000 */\n      tag_74\n      jump\t// in\n    tag_112:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1421:1492  (ReceivedETHTokenNumber * 1000000000000000000) / ReceivedBTCTokenNumber */\n      tag_113\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_113:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1399:1417  tradeBTCproportion */\n      0x07\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1399:1493  tradeBTCproportion = ((ReceivedETHTokenNumber * 1000000000000000000) / ReceivedBTCTokenNumber) */\n      sstore\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1513:1517  true */\n      0x01\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1086:1526  function claimBTC(uint _claim) public returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1534:1974  function claimETH(uint _claim) public returns (bool) {... */\n    tag_61:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1615:1625  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1581:1585  bool */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1606:1626  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1606:1614  User_Map */\n      0x08\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1606:1626  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1606:1641  User_Map[msg.sender].claimETHNumber */\n      0x01\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1646:1666  10000000000000000000 */\n      0x8ac7230489e80000\n      gt\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1598:1683  require(User_Map[msg.sender].claimETHNumber   < 10000000000000000000, \"claim beyond\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3669:3671   */\n      0x20\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1598:1683  require(User_Map[msg.sender].claimETHNumber   < 10000000000000000000, \"claim beyond\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3651:3672   */\n      mstore\n        /* \"#utility.yul\":3708:3710   */\n      0x0c\n        /* \"#utility.yul\":3688:3706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3681:3711   */\n      mstore\n      shl(0xa2, 0x18db185a5b4818995e5bdb99)\n        /* \"#utility.yul\":3727:3745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3720:3762   */\n      mstore\n        /* \"#utility.yul\":3779:3797   */\n      0x64\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1598:1683  require(User_Map[msg.sender].claimETHNumber   < 10000000000000000000, \"claim beyond\") */\n      tag_104\n        /* \"#utility.yul\":3467:3803   */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1598:1683  require(User_Map[msg.sender].claimETHNumber   < 10000000000000000000, \"claim beyond\") */\n    tag_115:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1701:1709  ETHtoken */\n      sload(0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1694:1738  IERC20(ETHtoken).transfer(msg.sender,_claim) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1720:1730  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1694:1738  IERC20(ETHtoken).transfer(msg.sender,_claim) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3232:3283   */\n      mstore\n        /* \"#utility.yul\":3299:3317   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3292:3326   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1701:1709  ETHtoken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1694:1719  IERC20(ETHtoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3205:3223   */\n      0x44\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1694:1738  IERC20(ETHtoken).transfer(msg.sender,_claim) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_120:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1758:1768  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1749:1769  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1749:1757  User_Map */\n      0x08\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1749:1769  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1749:1784  User_Map[msg.sender].claimETHNumber */\n      0x01\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1749:1794  User_Map[msg.sender].claimETHNumber += _claim */\n      dup1\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1788:1794  _claim */\n      dup5\n      swap3\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1749:1769  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1749:1794  User_Map[msg.sender].claimETHNumber += _claim */\n      tag_121\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1788:1794  _claim */\n      dup5\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1749:1794  User_Map[msg.sender].claimETHNumber += _claim */\n      tag_72\n      jump\t// in\n    tag_121:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1831:1837  _claim */\n      dup2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1805:1827  ReceivedETHTokenNumber */\n      0x03\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1805:1837  ReceivedETHTokenNumber += _claim */\n      dup3\n      dup3\n      sload\n      tag_122\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_122:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1920:1942  ReceivedETHTokenNumber */\n      sload(0x03)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1871:1893  ReceivedBTCTokenNumber */\n      sload(0x02)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1871:1915  ReceivedBTCTokenNumber * 1000000000000000000 */\n      tag_123\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1896:1915  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1871:1915  ReceivedBTCTokenNumber * 1000000000000000000 */\n      tag_74\n      jump\t// in\n    tag_123:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1870:1942  (ReceivedBTCTokenNumber * 1000000000000000000) /  ReceivedETHTokenNumber */\n      tag_124\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_124:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1848:1866  tradeETHproportion */\n      0x06\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1848:1943  tradeETHproportion = ((ReceivedBTCTokenNumber * 1000000000000000000) /  ReceivedETHTokenNumber) */\n      sstore\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1961:1965  true */\n      0x01\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaaamm\\xe5\\x90\\x88\\xe7\\xba\\xa6.sol\":1534:1974  function claimETH(uint _claim) public returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":404:577   */\n    tag_125:\n        /* \"#utility.yul\":472:492   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":521:552   */\n      dup2\n      and\n        /* \"#utility.yul\":511:553   */\n      dup2\n      eq\n        /* \"#utility.yul\":501:571   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":567:568   */\n      0x00\n        /* \"#utility.yul\":564:565   */\n      dup1\n        /* \"#utility.yul\":557:569   */\n      revert\n        /* \"#utility.yul\":501:571   */\n    tag_131:\n        /* \"#utility.yul\":404:577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":582:910   */\n    tag_29:\n        /* \"#utility.yul\":659:665   */\n      0x00\n        /* \"#utility.yul\":667:673   */\n      dup1\n        /* \"#utility.yul\":675:681   */\n      0x00\n        /* \"#utility.yul\":728:730   */\n      0x60\n        /* \"#utility.yul\":716:725   */\n      dup5\n        /* \"#utility.yul\":707:714   */\n      dup7\n        /* \"#utility.yul\":703:726   */\n      sub\n        /* \"#utility.yul\":699:731   */\n      slt\n        /* \"#utility.yul\":696:748   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":744:745   */\n      0x00\n        /* \"#utility.yul\":741:742   */\n      dup1\n        /* \"#utility.yul\":734:746   */\n      revert\n        /* \"#utility.yul\":696:748   */\n    tag_133:\n        /* \"#utility.yul\":767:796   */\n      tag_134\n        /* \"#utility.yul\":786:795   */\n      dup5\n        /* \"#utility.yul\":767:796   */\n      tag_125\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":757:796   */\n      swap3\n      pop\n        /* \"#utility.yul\":815:853   */\n      tag_135\n        /* \"#utility.yul\":849:851   */\n      0x20\n        /* \"#utility.yul\":838:847   */\n      dup6\n        /* \"#utility.yul\":834:852   */\n      add\n        /* \"#utility.yul\":815:853   */\n      tag_125\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":805:853   */\n      swap2\n      pop\n        /* \"#utility.yul\":900:902   */\n      0x40\n        /* \"#utility.yul\":889:898   */\n      dup5\n        /* \"#utility.yul\":885:903   */\n      add\n        /* \"#utility.yul\":872:904   */\n      calldataload\n        /* \"#utility.yul\":862:904   */\n      swap1\n      pop\n        /* \"#utility.yul\":582:910   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1107:1293   */\n    tag_41:\n        /* \"#utility.yul\":1166:1172   */\n      0x00\n        /* \"#utility.yul\":1219:1221   */\n      0x20\n        /* \"#utility.yul\":1207:1216   */\n      dup3\n        /* \"#utility.yul\":1198:1205   */\n      dup5\n        /* \"#utility.yul\":1194:1217   */\n      sub\n        /* \"#utility.yul\":1190:1222   */\n      slt\n        /* \"#utility.yul\":1187:1239   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":1235:1236   */\n      0x00\n        /* \"#utility.yul\":1232:1233   */\n      dup1\n        /* \"#utility.yul\":1225:1237   */\n      revert\n        /* \"#utility.yul\":1187:1239   */\n    tag_138:\n        /* \"#utility.yul\":1258:1287   */\n      tag_139\n        /* \"#utility.yul\":1277:1286   */\n      dup3\n        /* \"#utility.yul\":1258:1287   */\n      tag_125\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1248:1287   */\n      swap4\n        /* \"#utility.yul\":1107:1293   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1731   */\n    tag_56:\n        /* \"#utility.yul\":1610:1616   */\n      0x00\n        /* \"#utility.yul\":1663:1665   */\n      0x20\n        /* \"#utility.yul\":1651:1660   */\n      dup3\n        /* \"#utility.yul\":1642:1649   */\n      dup5\n        /* \"#utility.yul\":1638:1661   */\n      sub\n        /* \"#utility.yul\":1634:1666   */\n      slt\n        /* \"#utility.yul\":1631:1683   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1679:1680   */\n      0x00\n        /* \"#utility.yul\":1676:1677   */\n      dup1\n        /* \"#utility.yul\":1669:1681   */\n      revert\n        /* \"#utility.yul\":1631:1683   */\n    tag_142:\n      pop\n        /* \"#utility.yul\":1702:1725   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1551:1731   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2116:2393   */\n    tag_70:\n        /* \"#utility.yul\":2183:2189   */\n      0x00\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"#utility.yul\":2224:2233   */\n      dup3\n        /* \"#utility.yul\":2215:2222   */\n      dup5\n        /* \"#utility.yul\":2211:2234   */\n      sub\n        /* \"#utility.yul\":2207:2239   */\n      slt\n        /* \"#utility.yul\":2204:2256   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":2252:2253   */\n      0x00\n        /* \"#utility.yul\":2249:2250   */\n      dup1\n        /* \"#utility.yul\":2242:2254   */\n      revert\n        /* \"#utility.yul\":2204:2256   */\n    tag_145:\n        /* \"#utility.yul\":2284:2293   */\n      dup2\n        /* \"#utility.yul\":2278:2294   */\n      mload\n        /* \"#utility.yul\":2337:2342   */\n      dup1\n        /* \"#utility.yul\":2330:2343   */\n      iszero\n        /* \"#utility.yul\":2323:2344   */\n      iszero\n        /* \"#utility.yul\":2316:2321   */\n      dup2\n        /* \"#utility.yul\":2313:2345   */\n      eq\n        /* \"#utility.yul\":2303:2363   */\n      tag_139\n      jumpi\n        /* \"#utility.yul\":2359:2360   */\n      0x00\n        /* \"#utility.yul\":2356:2357   */\n      dup1\n        /* \"#utility.yul\":2349:2361   */\n      revert\n        /* \"#utility.yul\":2398:2525   */\n    tag_126:\n        /* \"#utility.yul\":2459:2469   */\n      0x4e487b71\n        /* \"#utility.yul\":2454:2457   */\n      0xe0\n        /* \"#utility.yul\":2450:2470   */\n      shl\n        /* \"#utility.yul\":2447:2448   */\n      0x00\n        /* \"#utility.yul\":2440:2471   */\n      mstore\n        /* \"#utility.yul\":2490:2494   */\n      0x11\n        /* \"#utility.yul\":2487:2488   */\n      0x04\n        /* \"#utility.yul\":2480:2495   */\n      mstore\n        /* \"#utility.yul\":2514:2518   */\n      0x24\n        /* \"#utility.yul\":2511:2512   */\n      0x00\n        /* \"#utility.yul\":2504:2519   */\n      revert\n        /* \"#utility.yul\":2530:2658   */\n    tag_72:\n        /* \"#utility.yul\":2570:2573   */\n      0x00\n        /* \"#utility.yul\":2601:2602   */\n      dup3\n        /* \"#utility.yul\":2597:2603   */\n      not\n        /* \"#utility.yul\":2594:2595   */\n      dup3\n        /* \"#utility.yul\":2591:2604   */\n      gt\n        /* \"#utility.yul\":2588:2627   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":2607:2625   */\n      tag_150\n      tag_126\n      jump\t// in\n    tag_150:\n      pop\n        /* \"#utility.yul\":2643:2652   */\n      add\n      swap1\n        /* \"#utility.yul\":2530:2658   */\n      jump\t// out\n        /* \"#utility.yul\":2663:2831   */\n    tag_74:\n        /* \"#utility.yul\":2703:2710   */\n      0x00\n        /* \"#utility.yul\":2769:2770   */\n      dup2\n        /* \"#utility.yul\":2765:2766   */\n      0x00\n        /* \"#utility.yul\":2761:2767   */\n      not\n        /* \"#utility.yul\":2757:2771   */\n      div\n        /* \"#utility.yul\":2754:2755   */\n      dup4\n        /* \"#utility.yul\":2751:2772   */\n      gt\n        /* \"#utility.yul\":2746:2747   */\n      dup3\n        /* \"#utility.yul\":2739:2748   */\n      iszero\n        /* \"#utility.yul\":2732:2749   */\n      iszero\n        /* \"#utility.yul\":2728:2773   */\n      and\n        /* \"#utility.yul\":2725:2796   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":2776:2794   */\n      tag_153\n      tag_126\n      jump\t// in\n    tag_153:\n      pop\n        /* \"#utility.yul\":2816:2825   */\n      mul\n      swap1\n        /* \"#utility.yul\":2663:2831   */\n      jump\t// out\n        /* \"#utility.yul\":2836:3053   */\n    tag_76:\n        /* \"#utility.yul\":2876:2877   */\n      0x00\n        /* \"#utility.yul\":2902:2903   */\n      dup3\n        /* \"#utility.yul\":2892:3024   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":2946:2956   */\n      0x4e487b71\n        /* \"#utility.yul\":2941:2944   */\n      0xe0\n        /* \"#utility.yul\":2937:2957   */\n      shl\n        /* \"#utility.yul\":2934:2935   */\n      0x00\n        /* \"#utility.yul\":2927:2958   */\n      mstore\n        /* \"#utility.yul\":2981:2985   */\n      0x12\n        /* \"#utility.yul\":2978:2979   */\n      0x04\n        /* \"#utility.yul\":2971:2986   */\n      mstore\n        /* \"#utility.yul\":3009:3013   */\n      0x24\n        /* \"#utility.yul\":3006:3007   */\n      0x00\n        /* \"#utility.yul\":2999:3014   */\n      revert\n        /* \"#utility.yul\":2892:3024   */\n    tag_155:\n      pop\n        /* \"#utility.yul\":3038:3047   */\n      div\n      swap1\n        /* \"#utility.yul\":2836:3053   */\n      jump\t// out\n        /* \"#utility.yul\":3337:3462   */\n    tag_85:\n        /* \"#utility.yul\":3377:3381   */\n      0x00\n        /* \"#utility.yul\":3405:3406   */\n      dup3\n        /* \"#utility.yul\":3402:3403   */\n      dup3\n        /* \"#utility.yul\":3399:3407   */\n      lt\n        /* \"#utility.yul\":3396:3430   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3410:3428   */\n      tag_159\n      tag_126\n      jump\t// in\n    tag_159:\n      pop\n        /* \"#utility.yul\":3447:3456   */\n      sub\n      swap1\n        /* \"#utility.yul\":3337:3462   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d2fbdebb3227d93786d8b8adae0f0bcb592ba3b778b03cf14643033d55d9958e64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_87": {
									"entryPoint": null,
									"id": 87,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:614:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "328:284:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "375:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "384:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "387:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "370:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:33:1"
															},
															"nodeType": "YulIf",
															"src": "338:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "400:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "459:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "514:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "469:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "527:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "547:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "558:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "543:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "543:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "537:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "571:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "591:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "602:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "587:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "587:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "581:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "581:25:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "571:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "270:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "281:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "293:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "301:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "309:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "317:6:1",
														"type": ""
													}
												],
												"src": "196:416:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516109cb3803806109cb83398101604081905261002f916100b2565b826001600160a01b0316846001600160a01b03160361004d57600080fd5b600580546001600160a01b03199081163317909155600080546001600160a01b0396871690831617905560018054949095169316929092179092556002919091556003556100f5565b80516001600160a01b03811681146100ad57600080fd5b919050565b600080600080608085870312156100c857600080fd5b6100d185610096565b93506100df60208601610096565b6040860151606090960151949790965092505050565b6108c7806101046000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638c93ecff116100715780638c93ecff146101485780638da5cb5b146101845780639393357c14610197578063dd88ea08146101a0578063f733f048146101a9578063fe96973a146101bc57600080fd5b8063069a0382146100b95780632b843498146100d55780632bba682a146100de5780635253baae1461010957806366e48d241461012c57806381b7dacb14610135575b600080fd5b6100c260035481565b6040519081526020015b60405180910390f35b6100c260025481565b6000546100f1906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b61011c610117366004610772565b6101cf565b60405190151581526020016100cc565b6100c260045481565b6001546100f1906001600160a01b031681565b61016f6101563660046107ae565b6008602052600090815260409020805460019091015482565b604080519283526020830191909152016100cc565b6005546100f1906001600160a01b031681565b6100c260065481565b6100c260075481565b61011c6101b73660046107d0565b6104e1565b61011c6101ca3660046107d0565b61061b565b600080546001600160a01b0390811690851603610356576000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561023d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026191906107e9565b5081600260008282546102749190610821565b909155505060025460035461029190670de0b6b3a7640000610839565b61029b9190610858565b6007819055600090670de0b6b3a7640000906102b79085610839565b6102c19190610858565b60015460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610313573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033791906107e9565b50806003600082825461034a919061087a565b909155506104d7915050565b6001546001600160a01b03908116908516036104d7576001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e791906107e9565b5081600360008282546103fa9190610821565b909155505060035460025461041790670de0b6b3a7640000610839565b6104219190610858565b6006819055600090670de0b6b3a76400009061043d9085610839565b6104479190610858565b60005460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bd91906107e9565b5080600260008282546104d0919061087a565b9091555050505b5060019392505050565b33600090815260086020526040812054678ac7230489e800001161053b5760405162461bcd60e51b815260206004820152600c60248201526b18db185a5b4818995e5bdb9960a21b60448201526064015b60405180910390fd5b60005460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b091906107e9565b5033600090815260086020526040812080548492906105d0908490610821565b9250508190555081600260008282546105e99190610821565b909155505060025460035461060690670de0b6b3a7640000610839565b6106109190610858565b600755506001919050565b33600090815260086020526040812060010154678ac7230489e80000116106735760405162461bcd60e51b815260206004820152600c60248201526b18db185a5b4818995e5bdb9960a21b6044820152606401610532565b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e891906107e9565b50336000908152600860205260408120600101805484929061070b908490610821565b9250508190555081600360008282546107249190610821565b909155505060035460025461074190670de0b6b3a7640000610839565b61074b9190610858565b600655506001919050565b80356001600160a01b038116811461076d57600080fd5b919050565b60008060006060848603121561078757600080fd5b61079084610756565b925061079e60208501610756565b9150604084013590509250925092565b6000602082840312156107c057600080fd5b6107c982610756565b9392505050565b6000602082840312156107e257600080fd5b5035919050565b6000602082840312156107fb57600080fd5b815180151581146107c957600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156108345761083461080b565b500190565b60008160001904831182151516156108535761085361080b565b500290565b60008261087557634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561088c5761088c61080b565b50039056fea2646970667358221220d2fbdebb3227d93786d8b8adae0f0bcb592ba3b778b03cf14643033d55d9958e64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x9CB CODESIZE SUB DUP1 PUSH2 0x9CB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xB2 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SSTORE PUSH2 0xF5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD1 DUP6 PUSH2 0x96 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF PUSH1 0x20 DUP7 ADD PUSH2 0x96 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x8C7 DUP1 PUSH2 0x104 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C93ECFF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x9393357C EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xDD88EA08 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xF733F048 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69A0382 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2B843498 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2BBA682A EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x5253BAAE EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x66E48D24 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x81B7DACB EQ PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xF1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xF1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xCC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xF1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND SUB PUSH2 0x356 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x291 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2B7 SWAP1 DUP6 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x313 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4D7 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND SUB PUSH2 0x4D7 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x417 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x43D SWAP1 DUP6 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x499 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0x8AC7230489E80000 GT PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x18DB185A5B4818995E5BDB99 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5D0 SWAP1 DUP5 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x606 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x7 SSTORE POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH8 0x8AC7230489E80000 GT PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x18DB185A5B4818995E5BDB99 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x70B SWAP1 DUP5 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x741 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x6 SSTORE POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C9 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x834 JUMPI PUSH2 0x834 PUSH2 0x80B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x853 JUMPI PUSH2 0x853 PUSH2 0x80B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x875 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x88C JUMPI PUSH2 0x88C PUSH2 0x80B JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xFB 0xDE 0xBB ORIGIN 0x27 0xD9 CALLDATACOPY DUP7 0xD8 0xB8 0xAD 0xAE 0xF SIGNEXTEND 0xCB MSIZE 0x2B LOG3 0xB7 PUSH25 0xB03CF14643033D55D9958E64736F6C634300080F0033000000 ",
							"sourceMap": "266:3082:0:-:0;;;708:368;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;849:9;-1:-1:-1;;;;;836:22:0;:9;-1:-1:-1;;;;;836:22:0;;828:31;;;;;;870:5;:18;;-1:-1:-1;;;;;;870:18:0;;;878:10;870:18;;;;:5;899:20;;-1:-1:-1;;;;;899:20:0;;;;;;;;;870:18;930:20;;;;;;;;;;;;;;;961:22;:48;;;;-1:-1:-1;1020:48:0;266:3082;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;558:2;543:18;;537:25;602:2;587:18;;;581:25;196:416;;459:59;;-1:-1:-1;196:416:1;-1:-1:-1;;;196:416:1:o;:::-;266:3082:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BTCtoken_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ETHtoken_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MaxTokenLimit_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ReceivedBTCTokenNumber_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ReceivedETHTokenNumber_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@User_Map_48": {
									"entryPoint": null,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimBTC_140": {
									"entryPoint": 1249,
									"id": 140,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimETH_193": {
									"entryPoint": 1563,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_34": {
									"entryPoint": null,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradeBTCproportion_38": {
									"entryPoint": null,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradeETHproportion_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@trade_315": {
									"entryPoint": 463,
									"id": 315,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2d4215aeb4dcf8d50bd372910624a94c106276dbc27d4a090b436cdf0c71d01e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2059,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3805:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "297:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "364:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "380:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "385:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "376:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "376:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "389:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "372:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "372:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "360:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "342:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "288:4:1",
														"type": ""
													}
												],
												"src": "196:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "453:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "463:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "485:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "472:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "472:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "463:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "555:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "564:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "567:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "557:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "557:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "557:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "514:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "525:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "540:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "545:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "536:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "536:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "549:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "532:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "532:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "511:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "511:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "504:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:50:1"
															},
															"nodeType": "YulIf",
															"src": "501:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "432:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "443:5:1",
														"type": ""
													}
												],
												"src": "404:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "686:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "732:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "741:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "734:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "734:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "734:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "707:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "716:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "703:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "728:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "699:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:32:1"
															},
															"nodeType": "YulIf",
															"src": "696:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "757:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "786:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "767:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "805:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "838:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "849:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "815:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "862:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "889:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "900:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "885:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "872:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "862:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "636:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "647:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "659:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "667:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "675:6:1",
														"type": ""
													}
												],
												"src": "582:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1010:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1020:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1043:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1028:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1028:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1020:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1062:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1087:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1080:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1080:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1073:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1073:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1055:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1055:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "990:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1001:4:1",
														"type": ""
													}
												],
												"src": "915:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1177:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1223:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1232:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1235:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1225:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1225:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1225:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1198:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1190:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:32:1"
															},
															"nodeType": "YulIf",
															"src": "1187:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1248:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1277:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1258:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1248:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1143:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1154:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1166:6:1",
														"type": ""
													}
												],
												"src": "1107:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1427:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1437:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1449:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1445:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1437:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1479:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1490:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1528:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1533:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1506:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1506:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1506:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1388:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1399:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1418:4:1",
														"type": ""
													}
												],
												"src": "1298:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1621:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1667:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1676:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1679:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1669:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1669:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1669:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1642:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1651:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1638:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1634:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:32:1"
															},
															"nodeType": "YulIf",
															"src": "1631:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1692:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1715:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1702:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1692:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1587:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1598:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1610:6:1",
														"type": ""
													}
												],
												"src": "1551:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1893:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1903:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1915:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1926:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1911:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1903:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1938:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1956:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1961:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1952:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1948:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1942:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1998:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2006:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1994:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1994:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1976:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1976:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2030:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2041:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2026:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2026:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2050:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2058:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2046:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2019:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2082:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2093:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2078:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2078:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2098:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2071:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2071:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2071:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1846:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1857:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1865:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1873:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1884:4:1",
														"type": ""
													}
												],
												"src": "1736:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2194:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2240:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2249:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2242:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2242:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2215:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2224:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2211:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2207:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:32:1"
															},
															"nodeType": "YulIf",
															"src": "2204:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2265:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2284:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2278:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2269:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2347:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2356:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2359:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2349:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2349:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2349:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2316:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2337:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2330:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2330:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2323:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2323:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2313:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2313:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:40:1"
															},
															"nodeType": "YulIf",
															"src": "2303:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2372:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2382:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2160:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2171:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2183:6:1",
														"type": ""
													}
												],
												"src": "2116:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2430:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2447:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2454:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2459:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2450:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2440:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2440:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2487:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2480:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2511:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2514:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2504:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2504:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2398:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2578:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2605:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2607:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2607:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2607:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2594:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2601:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2597:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2597:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2591:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2591:13:1"
															},
															"nodeType": "YulIf",
															"src": "2588:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2636:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2647:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2650:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2643:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2561:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2564:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2570:3:1",
														"type": ""
													}
												],
												"src": "2530:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2715:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2774:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2776:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2776:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2776:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2746:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2739:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2739:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2732:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2732:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2754:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2765:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2761:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2761:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2769:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2757:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2757:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2751:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2751:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2728:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2728:45:1"
															},
															"nodeType": "YulIf",
															"src": "2725:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2805:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2820:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2823:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2816:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2805:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2694:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2697:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2703:7:1",
														"type": ""
													}
												],
												"src": "2663:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2882:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2913:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2934:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2941:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2946:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2937:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2937:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2927:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2927:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2978:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2981:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2971:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2971:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2971:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3006:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3009:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2999:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2999:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2999:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2902:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:9:1"
															},
															"nodeType": "YulIf",
															"src": "2892:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3033:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3042:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3045:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3038:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3038:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3033:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2867:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2870:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2876:1:1",
														"type": ""
													}
												],
												"src": "2836:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3187:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3197:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3209:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3220:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3205:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3205:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3197:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3239:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3254:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3270:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3275:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3266:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3266:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3279:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3262:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3262:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3250:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3319:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3148:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3159:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3167:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3178:4:1",
														"type": ""
													}
												],
												"src": "3058:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3386:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3408:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3410:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3410:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3410:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3402:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3405:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3399:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3399:8:1"
															},
															"nodeType": "YulIf",
															"src": "3396:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3439:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3451:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3454:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3447:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3439:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3368:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3371:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3377:4:1",
														"type": ""
													}
												],
												"src": "3337:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3641:162:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3658:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3669:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3651:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3692:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3703:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3688:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3708:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3681:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3731:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3742:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3727:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3727:18:1"
																	},
																	{
																		"hexValue": "636c61696d206265796f6e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3747:14:1",
																		"type": "",
																		"value": "claim beyond"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3720:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3720:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3720:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3771:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3779:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3771:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d4215aeb4dcf8d50bd372910624a94c106276dbc27d4a090b436cdf0c71d01e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3618:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3632:4:1",
														"type": ""
													}
												],
												"src": "3467:336:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_2d4215aeb4dcf8d50bd372910624a94c106276dbc27d4a090b436cdf0c71d01e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"claim beyond\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80638c93ecff116100715780638c93ecff146101485780638da5cb5b146101845780639393357c14610197578063dd88ea08146101a0578063f733f048146101a9578063fe96973a146101bc57600080fd5b8063069a0382146100b95780632b843498146100d55780632bba682a146100de5780635253baae1461010957806366e48d241461012c57806381b7dacb14610135575b600080fd5b6100c260035481565b6040519081526020015b60405180910390f35b6100c260025481565b6000546100f1906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b61011c610117366004610772565b6101cf565b60405190151581526020016100cc565b6100c260045481565b6001546100f1906001600160a01b031681565b61016f6101563660046107ae565b6008602052600090815260409020805460019091015482565b604080519283526020830191909152016100cc565b6005546100f1906001600160a01b031681565b6100c260065481565b6100c260075481565b61011c6101b73660046107d0565b6104e1565b61011c6101ca3660046107d0565b61061b565b600080546001600160a01b0390811690851603610356576000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561023d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026191906107e9565b5081600260008282546102749190610821565b909155505060025460035461029190670de0b6b3a7640000610839565b61029b9190610858565b6007819055600090670de0b6b3a7640000906102b79085610839565b6102c19190610858565b60015460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610313573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033791906107e9565b50806003600082825461034a919061087a565b909155506104d7915050565b6001546001600160a01b03908116908516036104d7576001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e791906107e9565b5081600360008282546103fa9190610821565b909155505060035460025461041790670de0b6b3a7640000610839565b6104219190610858565b6006819055600090670de0b6b3a76400009061043d9085610839565b6104479190610858565b60005460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bd91906107e9565b5080600260008282546104d0919061087a565b9091555050505b5060019392505050565b33600090815260086020526040812054678ac7230489e800001161053b5760405162461bcd60e51b815260206004820152600c60248201526b18db185a5b4818995e5bdb9960a21b60448201526064015b60405180910390fd5b60005460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b091906107e9565b5033600090815260086020526040812080548492906105d0908490610821565b9250508190555081600260008282546105e99190610821565b909155505060025460035461060690670de0b6b3a7640000610839565b6106109190610858565b600755506001919050565b33600090815260086020526040812060010154678ac7230489e80000116106735760405162461bcd60e51b815260206004820152600c60248201526b18db185a5b4818995e5bdb9960a21b6044820152606401610532565b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e891906107e9565b50336000908152600860205260408120600101805484929061070b908490610821565b9250508190555081600360008282546107249190610821565b909155505060035460025461074190670de0b6b3a7640000610839565b61074b9190610858565b600655506001919050565b80356001600160a01b038116811461076d57600080fd5b919050565b60008060006060848603121561078757600080fd5b61079084610756565b925061079e60208501610756565b9150604084013590509250925092565b6000602082840312156107c057600080fd5b6107c982610756565b9392505050565b6000602082840312156107e257600080fd5b5035919050565b6000602082840312156107fb57600080fd5b815180151581146107c957600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156108345761083461080b565b500190565b60008160001904831182151516156108535761085361080b565b500290565b60008261087557634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561088c5761088c61080b565b50039056fea2646970667358221220d2fbdebb3227d93786d8b8adae0f0bcb592ba3b778b03cf14643033d55d9958e64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C93ECFF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x9393357C EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xDD88EA08 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xF733F048 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69A0382 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2B843498 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2BBA682A EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x5253BAAE EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x66E48D24 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x81B7DACB EQ PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xF1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xF1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xCC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xF1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND SUB PUSH2 0x356 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x291 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2B7 SWAP1 DUP6 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x313 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4D7 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND SUB PUSH2 0x4D7 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x417 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x43D SWAP1 DUP6 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x499 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0x8AC7230489E80000 GT PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x18DB185A5B4818995E5BDB99 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5D0 SWAP1 DUP5 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x606 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x7 SSTORE POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH8 0x8AC7230489E80000 GT PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x18DB185A5B4818995E5BDB99 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x70B SWAP1 DUP5 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x741 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x6 SSTORE POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C9 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x834 JUMPI PUSH2 0x834 PUSH2 0x80B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x853 JUMPI PUSH2 0x853 PUSH2 0x80B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x875 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x88C JUMPI PUSH2 0x88C PUSH2 0x80B JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xFB 0xDE 0xBB ORIGIN 0x27 0xD9 CALLDATACOPY DUP7 0xD8 0xB8 0xAD 0xAE 0xF SIGNEXTEND 0xCB MSIZE 0x2B LOG3 0xB7 PUSH25 0xB03CF14643033D55D9958E64736F6C634300080F0033000000 ",
							"sourceMap": "266:3082:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;394:34;;;;;;;;;160:25:1;;;148:2;133:18;394:34:0;;;;;;;;353;;;;;;291:24;;;;;-1:-1:-1;;;;;291:24:0;;;;;;-1:-1:-1;;;;;360:32:1;;;342:51;;330:2;315:18;291:24:0;196:203:1;1982:1361:0;;;;;;:::i;:::-;;:::i;:::-;;;1080:14:1;;1073:22;1055:41;;1043:2;1028:18;1982:1361:0;915:187:1;435:25:0;;;;;;322:24;;;;;-1:-1:-1;;;;;322:24:0;;;657:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1472:25:1;;;1528:2;1513:18;;1506:34;;;;1445:18;657:40:0;1298:248:1;467:20:0;;;;;-1:-1:-1;;;;;467:20:0;;;494:30;;;;;;531;;;;;;1086:440;;;;;;:::i;:::-;;:::i;1534:::-;;;;;;:::i;:::-;;:::i;1982:1361::-;2063:4;2098:8;;-1:-1:-1;;;;;2098:8:0;;;2084:22;;;;2080:1234;;2130:8;;2123:69;;-1:-1:-1;;;2123:69:0;;2153:10;2123:69;;;1976:34:1;2173:4:0;2026:18:1;;;2019:43;2078:18;;;2071:34;;;-1:-1:-1;;;;;2130:8:0;;;;2123:29;;1911:18:1;;2123:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2233:11;2207:22;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;;2517:22:0;;2468;;:44;;2493:19;2468:44;:::i;:::-;2467:72;;;;:::i;:::-;2445:18;:95;;;2555:24;;2619:19;;2583:32;;:11;:32;:::i;:::-;2582:56;;;;:::i;:::-;2660:8;;2653:57;;-1:-1:-1;;;2653:57:0;;2679:10;2653:57;;;3232:51:1;3299:18;;;3292:34;;;2555:83:0;;-1:-1:-1;;;;;;2660:8:0;;2653:25;;3205:18:1;;2653:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2751:19;2725:22;;:45;;;;;;;:::i;:::-;;;;-1:-1:-1;2080:1234:0;;-1:-1:-1;;2080:1234:0;;2816:8;;-1:-1:-1;;;;;2816:8:0;;;2802:22;;;;2799:515;;2848:8;;2841:69;;-1:-1:-1;;;2841:69:0;;2871:10;2841:69;;;1976:34:1;2891:4:0;2026:18:1;;;2019:43;2078:18;;;2071:34;;;-1:-1:-1;;;;;2848:8:0;;;;2841:29;;1911:18:1;;2841:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2951:11;2925:22;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;;3049:22:0;;3000;;:44;;3025:19;3000:44;:::i;:::-;2999:72;;;;:::i;:::-;2977:18;:95;;;3087:24;;3151:19;;3115:32;;:11;:32;:::i;:::-;3114:56;;;;:::i;:::-;3192:8;;3185:57;;-1:-1:-1;;;3185:57:0;;3211:10;3185:57;;;3232:51:1;3299:18;;;3292:34;;;3087:83:0;;-1:-1:-1;;;;;;3192:8:0;;3185:25;;3205:18:1;;3185:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3283:19;3257:22;;:45;;;;;;;:::i;:::-;;;;-1:-1:-1;;;2799:515:0;-1:-1:-1;3331:4:0;1982:1361;;;;;:::o;1086:440::-;1167:10;1133:4;1158:20;;;:8;:20;;;;;:35;1197:20;-1:-1:-1;1150:84:0;;;;-1:-1:-1;;;1150:84:0;;3669:2:1;1150:84:0;;;3651:21:1;3708:2;3688:18;;;3681:30;-1:-1:-1;;;3727:18:1;;;3720:42;3779:18;;1150:84:0;;;;;;;;;1252:8;;1245:44;;-1:-1:-1;;;1245:44:0;;1271:10;1245:44;;;3232:51:1;3299:18;;;3292:34;;;-1:-1:-1;;;;;1252:8:0;;;;1245:25;;3205:18:1;;1245:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1309:10:0;1300:20;;;;:8;:20;;;;;:45;;1339:6;;1300:20;:45;;1339:6;;1300:45;:::i;:::-;;;;;;;;1382:6;1356:22;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;;1470:22:0;;1422;;:44;;1447:19;1422:44;:::i;:::-;1421:71;;;;:::i;:::-;1399:18;:94;-1:-1:-1;1513:4:0;;1086:440;-1:-1:-1;1086:440:0:o;1534:::-;1615:10;1581:4;1606:20;;;:8;:20;;;;;:35;;;1646:20;-1:-1:-1;1598:85:0;;;;-1:-1:-1;;;1598:85:0;;3669:2:1;1598:85:0;;;3651:21:1;3708:2;3688:18;;;3681:30;-1:-1:-1;;;3727:18:1;;;3720:42;3779:18;;1598:85:0;3467:336:1;1598:85:0;1701:8;;1694:44;;-1:-1:-1;;;1694:44:0;;1720:10;1694:44;;;3232:51:1;3299:18;;;3292:34;;;-1:-1:-1;;;;;1701:8:0;;;;1694:25;;3205:18:1;;1694:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1758:10:0;1749:20;;;;:8;:20;;;;;:35;;:45;;1788:6;;1749:20;:45;;1788:6;;1749:45;:::i;:::-;;;;;;;;1831:6;1805:22;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;;1920:22:0;;1871;;:44;;1896:19;1871:44;:::i;:::-;1870:72;;;;:::i;:::-;1848:18;:95;-1:-1:-1;1961:4:0;;1534:440;-1:-1:-1;1534:440:0:o;404:173:1:-;472:20;;-1:-1:-1;;;;;521:31:1;;511:42;;501:70;;567:1;564;557:12;501:70;404:173;;;:::o;582:328::-;659:6;667;675;728:2;716:9;707:7;703:23;699:32;696:52;;;744:1;741;734:12;696:52;767:29;786:9;767:29;:::i;:::-;757:39;;815:38;849:2;838:9;834:18;815:38;:::i;:::-;805:48;;900:2;889:9;885:18;872:32;862:42;;582:328;;;;;:::o;1107:186::-;1166:6;1219:2;1207:9;1198:7;1194:23;1190:32;1187:52;;;1235:1;1232;1225:12;1187:52;1258:29;1277:9;1258:29;:::i;:::-;1248:39;1107:186;-1:-1:-1;;;1107:186:1:o;1551:180::-;1610:6;1663:2;1651:9;1642:7;1638:23;1634:32;1631:52;;;1679:1;1676;1669:12;1631:52;-1:-1:-1;1702:23:1;;1551:180;-1:-1:-1;1551:180:1:o;2116:277::-;2183:6;2236:2;2224:9;2215:7;2211:23;2207:32;2204:52;;;2252:1;2249;2242:12;2204:52;2284:9;2278:16;2337:5;2330:13;2323:21;2316:5;2313:32;2303:60;;2359:1;2356;2349:12;2398:127;2459:10;2454:3;2450:20;2447:1;2440:31;2490:4;2487:1;2480:15;2514:4;2511:1;2504:15;2530:128;2570:3;2601:1;2597:6;2594:1;2591:13;2588:39;;;2607:18;;:::i;:::-;-1:-1:-1;2643:9:1;;2530:128::o;2663:168::-;2703:7;2769:1;2765;2761:6;2757:14;2754:1;2751:21;2746:1;2739:9;2732:17;2728:45;2725:71;;;2776:18;;:::i;:::-;-1:-1:-1;2816:9:1;;2663:168::o;2836:217::-;2876:1;2902;2892:132;;2946:10;2941:3;2937:20;2934:1;2927:31;2981:4;2978:1;2971:15;3009:4;3006:1;2999:15;2892:132;-1:-1:-1;3038:9:1;;2836:217::o;3337:125::-;3377:4;3405:1;3402;3399:8;3396:34;;;3410:18;;:::i;:::-;-1:-1:-1;3447:9:1;;3337:125::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "449400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BTCtoken()": "2382",
								"ETHtoken()": "2448",
								"MaxTokenLimit()": "2373",
								"ReceivedBTCTokenNumber()": "2307",
								"ReceivedETHTokenNumber()": "2285",
								"User_Map(address)": "4658",
								"claimBTC(uint256)": "infinite",
								"claimETH(uint256)": "infinite",
								"owner()": "2359",
								"trade(address,address,uint256)": "infinite",
								"tradeBTCproportion()": "2350",
								"tradeETHproportion()": "2328"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 266,
									"end": 3348,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 708,
									"end": 1076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 708,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 849,
									"end": 858,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 836,
									"end": 858,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 836,
									"end": 845,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 836,
									"end": 858,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 836,
									"end": 858,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 828,
									"end": 859,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 828,
									"end": 859,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 828,
									"end": 859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 859,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 828,
									"end": 859,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 828,
									"end": 859,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 828,
									"end": 859,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 870,
									"end": 875,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 870,
									"end": 888,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 870,
									"end": 888,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 870,
									"end": 888,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 870,
									"end": 888,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 870,
									"end": 888,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 878,
									"end": 888,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 870,
									"end": 888,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 870,
									"end": 888,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 870,
									"end": 888,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 870,
									"end": 888,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 870,
									"end": 875,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 899,
									"end": 919,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 899,
									"end": 919,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 899,
									"end": 919,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 899,
									"end": 919,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 899,
									"end": 919,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 899,
									"end": 919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 899,
									"end": 919,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 899,
									"end": 919,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 899,
									"end": 919,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 899,
									"end": 919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 899,
									"end": 919,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 870,
									"end": 888,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 930,
									"end": 950,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 930,
									"end": 950,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 961,
									"end": 983,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 961,
									"end": 1009,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1009,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1009,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 1020,
									"end": 1068,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 612,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 469,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 558,
									"end": 560,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 543,
									"end": 561,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 543,
									"end": 561,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 562,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 602,
									"end": 604,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 587,
									"end": 605,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 587,
									"end": 605,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 587,
									"end": 605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 581,
									"end": 606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 612,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 196,
									"end": 612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 3348,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2fbdebb3227d93786d8b8adae0f0bcb592ba3b778b03cf14643033d55d9958e64736f6c634300080f0033",
									".code": [
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "8C93ECFF"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "8C93ECFF"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "9393357C"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "DD88EA08"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "F733F048"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "FE96973A"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "69A0382"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "2B843498"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "2BBA682A"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "5253BAAE"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "66E48D24"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "81B7DACB"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 3348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 394,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 394,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 394,
											"end": 428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 394,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 394,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 428,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 353,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 353,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 353,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 353,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 353,
											"end": 387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 353,
											"end": 387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 353,
											"end": 387,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 291,
											"end": 315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 291,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 315,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1982,
											"end": 3343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1982,
											"end": 3343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1094,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1095,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 915,
											"end": 1102,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 460,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 435,
											"end": 460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 435,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 435,
											"end": 460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 435,
											"end": 460,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 322,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 322,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 322,
											"end": 346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 322,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 322,
											"end": 346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 322,
											"end": 346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 657,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 697,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1497,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1531,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1540,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 657,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1298,
											"end": 1546,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 467,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 467,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 467,
											"end": 487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 467,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 467,
											"end": 487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 467,
											"end": 487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 467,
											"end": 487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 467,
											"end": 487,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 524,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 494,
											"end": 524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 494,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 494,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 494,
											"end": 524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 524,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 531,
											"end": 561,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1086,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1086,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1534,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1534,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2080,
											"end": 3314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2163,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2177,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2130,
											"end": 2138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2152,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2123,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2123,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2207,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2207,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2517,
											"end": 2539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2490,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2468,
											"end": 2490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2468,
											"end": 2512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2512,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2468,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2468,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2468,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2467,
											"end": 2539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2467,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2539,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2467,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2445,
											"end": 2540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2540,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2619,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2583,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2583,
											"end": 2615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2583,
											"end": 2594,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2583,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2583,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2583,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2583,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2582,
											"end": 2638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2582,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2582,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2660,
											"end": 2668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2689,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2653,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2653,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2725,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2725,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2080,
											"end": 3314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 3314,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 3314,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2080,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2816,
											"end": 2824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2816,
											"end": 2824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2799,
											"end": 3314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2856,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2848,
											"end": 2856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2871,
											"end": 2881,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2895,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2848,
											"end": 2856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2870,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2841,
											"end": 2870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2841,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2951,
											"end": 2962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2925,
											"end": 2962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2962,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3049,
											"end": 3071,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3049,
											"end": 3071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3022,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3000,
											"end": 3022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3000,
											"end": 3044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3044,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3000,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3000,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3044,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3000,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2999,
											"end": 3071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2999,
											"end": 3071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3071,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2999,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2977,
											"end": 3072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3072,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3170,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3151,
											"end": 3170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3115,
											"end": 3147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3126,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3115,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3147,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3115,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3114,
											"end": 3170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3114,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3170,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3114,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3211,
											"end": 3221,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3170,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3192,
											"end": 3200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3210,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3185,
											"end": 3210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3185,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3279,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3257,
											"end": 3279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3257,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3302,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2799,
											"end": 3314,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2799,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 3343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1177,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1158,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1178,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "8AC7230489E80000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18DB185A5B4818995E5BDB99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3797,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3779,
											"end": 3797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1150,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1281,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1252,
											"end": 1260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1245,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1245,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1300,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1356,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1356,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1470,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1470,
											"end": 1492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1422,
											"end": 1444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1422,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1422,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1422,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1422,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1421,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1421,
											"end": 1492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1421,
											"end": 1492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1421,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1421,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1421,
											"end": 1492,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1421,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1399,
											"end": 1493,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1513,
											"end": 1517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1625,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1614,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1626,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1606,
											"end": 1641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "PUSH",
											"source": 0,
											"value": "8AC7230489E80000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18DB185A5B4818995E5BDB99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3797,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3779,
											"end": 3797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3467,
											"end": 3803,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1719,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1694,
											"end": 1719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1694,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1758,
											"end": 1768,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1757,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1784,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1749,
											"end": 1784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1749,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1827,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1805,
											"end": 1827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1805,
											"end": 1837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1871,
											"end": 1915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1896,
											"end": 1915,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1871,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1871,
											"end": 1915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 1915,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1871,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1870,
											"end": 1942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1870,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1942,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1870,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1848,
											"end": 1943,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1961,
											"end": 1965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1961,
											"end": 1965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 404,
											"end": 577,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 404,
											"end": 577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 472,
											"end": 492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 492,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 521,
											"end": 552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 511,
											"end": 553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 511,
											"end": 553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 501,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 501,
											"end": 571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 567,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 501,
											"end": 571,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 501,
											"end": 571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 404,
											"end": 577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 404,
											"end": 577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 582,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 659,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 707,
											"end": 714,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 703,
											"end": 726,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 699,
											"end": 731,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 696,
											"end": 748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 696,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 696,
											"end": 748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 744,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 734,
											"end": 746,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 696,
											"end": 748,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 696,
											"end": 748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 767,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 767,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 767,
											"end": 796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 767,
											"end": 796,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 767,
											"end": 796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 757,
											"end": 796,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 757,
											"end": 796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 849,
											"end": 851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 834,
											"end": 852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 815,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 815,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 805,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 805,
											"end": 853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 898,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 885,
											"end": 903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 872,
											"end": 904,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 910,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 910,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 910,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1293,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1107,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1205,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1222,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1239,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1187,
											"end": 1239,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1237,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1239,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1187,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1258,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1258,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1287,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1293,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1107,
											"end": 1293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1666,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1683,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1631,
											"end": 1683,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1683,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1631,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2393,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2116,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2224,
											"end": 2233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2222,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2239,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2204,
											"end": 2256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2204,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2345,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2303,
											"end": 2363,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2361,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2398,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2454,
											"end": 2457,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2450,
											"end": 2470,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2494,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2480,
											"end": 2495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2518,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2511,
											"end": 2512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2658,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2530,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2588,
											"end": 2627,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2607,
											"end": 2625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2643,
											"end": 2652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2831,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2663,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2767,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2771,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2772,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2773,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2796,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2725,
											"end": 2796,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2776,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2776,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2794,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2776,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3053,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2836,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2892,
											"end": 3024,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2956,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2941,
											"end": 2944,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2937,
											"end": 2957,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2971,
											"end": 2986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3013,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3006,
											"end": 3007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2999,
											"end": 3014,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 3024,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2892,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3038,
											"end": 3047,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3038,
											"end": 3047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3462,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3337,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3407,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3410,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3447,
											"end": 3456,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"写个amm合约.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BTCtoken()": "2bba682a",
							"ETHtoken()": "81b7dacb",
							"MaxTokenLimit()": "66e48d24",
							"ReceivedBTCTokenNumber()": "2b843498",
							"ReceivedETHTokenNumber()": "069a0382",
							"User_Map(address)": "8c93ecff",
							"claimBTC(uint256)": "f733f048",
							"claimETH(uint256)": "fe96973a",
							"owner()": "8da5cb5b",
							"trade(address,address,uint256)": "5253baae",
							"tradeBTCproportion()": "dd88ea08",
							"tradeETHproportion()": "9393357c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_BTCtoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ETHtoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ReceivedBTCTokenNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ReceivedETHTokenNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BTCtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ETHtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MaxTokenLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ReceivedBTCTokenNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ReceivedETHTokenNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"User_Map\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimBTCNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimETHNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claim\",\"type\":\"uint256\"}],\"name\":\"claimBTC\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claim\",\"type\":\"uint256\"}],\"name\":\"claimETH\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fromAmount\",\"type\":\"uint256\"}],\"name\":\"trade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeBTCproportion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeETHproportion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5199\\u4e2aamm\\u5408\\u7ea6.sol\":\"Stopcock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5199\\u4e2aamm\\u5408\\u7ea6.sol\":{\"keccak256\":\"0x9c15b6efe53d44a0b867d41764b2e85dde2b26a28c40c4a4616edf8b83bd6bfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f25f522f580bf7c16025496896dad5cb34f0b23198ad7b094d7783a8fb1e9f77\",\"dweb:/ipfs/QmUC5HEiXUrPxx6sBVLAQviHsmj1AB4v6qF8XZ79GETVdP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "写个amm合约.sol:Stopcock",
								"label": "BTCtoken",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 26,
								"contract": "写个amm合约.sol:Stopcock",
								"label": "ETHtoken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 28,
								"contract": "写个amm合约.sol:Stopcock",
								"label": "ReceivedBTCTokenNumber",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 30,
								"contract": "写个amm合约.sol:Stopcock",
								"label": "ReceivedETHTokenNumber",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 32,
								"contract": "写个amm合约.sol:Stopcock",
								"label": "MaxTokenLimit",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 34,
								"contract": "写个amm合约.sol:Stopcock",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 36,
								"contract": "写个amm合约.sol:Stopcock",
								"label": "tradeETHproportion",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 38,
								"contract": "写个amm合约.sol:Stopcock",
								"label": "tradeBTCproportion",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 48,
								"contract": "写个amm合约.sol:Stopcock",
								"label": "User_Map",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_struct(User)43_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)43_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stopcock.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)43_storage"
							},
							"t_struct(User)43_storage": {
								"encoding": "inplace",
								"label": "struct Stopcock.User",
								"members": [
									{
										"astId": 40,
										"contract": "写个amm合约.sol:Stopcock",
										"label": "claimBTCNumber",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 42,
										"contract": "写个amm合约.sol:Stopcock",
										"label": "claimETHNumber",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"写个amm合约.sol": {
				"ast": {
					"absolutePath": "写个amm合约.sol",
					"exportedSymbols": {
						"IERC20": [
							22
						],
						"Stopcock": [
							316
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "IERC20",
							"nameLocation": "75:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "98:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "115:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "107:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "131:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "126:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "126:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "106:31:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "156:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "156:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:6:0"
									},
									"scope": 22,
									"src": "89:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "177:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "198:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "190:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "214:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "206:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "230:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "225:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "225:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:47:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "255:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:6:0"
									},
									"scope": 22,
									"src": "168:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 317,
							"src": "65:199:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stopcock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "Stopcock",
							"nameLocation": "275:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2bba682a",
									"id": 24,
									"mutability": "mutable",
									"name": "BTCtoken",
									"nameLocation": "307:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "291:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 23,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "291:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "81b7dacb",
									"id": 26,
									"mutability": "mutable",
									"name": "ETHtoken",
									"nameLocation": "338:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "322:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "322:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2b843498",
									"id": 28,
									"mutability": "mutable",
									"name": "ReceivedBTCTokenNumber",
									"nameLocation": "365:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "353:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 27,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "353:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "069a0382",
									"id": 30,
									"mutability": "mutable",
									"name": "ReceivedETHTokenNumber",
									"nameLocation": "406:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "394:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 29,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "394:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66e48d24",
									"id": 32,
									"mutability": "mutable",
									"name": "MaxTokenLimit",
									"nameLocation": "447:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "435:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 31,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "435:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 34,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "482:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "467:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 33,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "467:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9393357c",
									"id": 36,
									"mutability": "mutable",
									"name": "tradeETHproportion",
									"nameLocation": "506:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "494:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "494:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd88ea08",
									"id": 38,
									"mutability": "mutable",
									"name": "tradeBTCproportion",
									"nameLocation": "543:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "531:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 37,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "531:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Stopcock.User",
									"id": 43,
									"members": [
										{
											"constant": false,
											"id": 40,
											"mutability": "mutable",
											"name": "claimBTCNumber",
											"nameLocation": "597:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "592:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 39,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "592:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 42,
											"mutability": "mutable",
											"name": "claimETHNumber",
											"nameLocation": "627:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "622:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 41,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "622:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "577:4:0",
									"nodeType": "StructDefinition",
									"scope": 316,
									"src": "570:79:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c93ecff",
									"id": 48,
									"mutability": "mutable",
									"name": "User_Map",
									"nameLocation": "689:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "657:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$43_storage_$",
										"typeString": "mapping(address => struct Stopcock.User)"
									},
									"typeName": {
										"id": 47,
										"keyType": {
											"id": 44,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "665:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "657:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$43_storage_$",
											"typeString": "mapping(address => struct Stopcock.User)"
										},
										"valueType": {
											"id": 46,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 45,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 43,
												"src": "676:4:0"
											},
											"referencedDeclaration": 43,
											"src": "676:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$43_storage_ptr",
												"typeString": "struct Stopcock.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "817:259:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 60,
																"name": "_BTCtoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "836:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 61,
																"name": "_ETHtoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "849:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "836:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 59,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "828:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "828:31:0"
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "870:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 66,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "878:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "878:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "870:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "870:18:0"
											},
											{
												"expression": {
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 70,
														"name": "BTCtoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "899:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 71,
														"name": "_BTCtoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "910:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "899:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "899:20:0"
											},
											{
												"expression": {
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 74,
														"name": "ETHtoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "930:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 75,
														"name": "_ETHtoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "941:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "930:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "930:20:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 78,
														"name": "ReceivedBTCTokenNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "961:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 79,
														"name": "_ReceivedBTCTokenNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "986:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "961:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "961:48:0"
											},
											{
												"expression": {
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 82,
														"name": "ReceivedETHTokenNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1020:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 83,
														"name": "_ReceivedETHTokenNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1045:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1020:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1020:48:0"
											}
										]
									},
									"id": 87,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_BTCtoken",
												"nameLocation": "728:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "720:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_ETHtoken",
												"nameLocation": "747:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "739:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "_ReceivedBTCTokenNumber",
												"nameLocation": "763:23:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "758:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "_ReceivedETHTokenNumber",
												"nameLocation": "793:23:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "788:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:98:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "817:0:0"
									},
									"scope": 316,
									"src": "708:368:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1139:387:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 95,
																		"name": "User_Map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "1158:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$43_storage_$",
																			"typeString": "mapping(address => struct Stopcock.User storage ref)"
																		}
																	},
																	"id": 98,
																	"indexExpression": {
																		"expression": {
																			"id": 96,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1167:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 97,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1167:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1158:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$43_storage",
																		"typeString": "struct Stopcock.User storage ref"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "claimBTCNumber",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 40,
																"src": "1158:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130303030303030303030303030303030303030",
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1197:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"value": "10000000000000000000"
															},
															"src": "1158:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636c61696d206265796f6e64",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1219:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d4215aeb4dcf8d50bd372910624a94c106276dbc27d4a090b436cdf0c71d01e",
																"typeString": "literal_string \"claim beyond\""
															},
															"value": "claim beyond"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d4215aeb4dcf8d50bd372910624a94c106276dbc27d4a090b436cdf0c71d01e",
																"typeString": "literal_string \"claim beyond\""
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1150:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1150:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1150:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 109,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1271:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1271:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 111,
															"name": "_claim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1282:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 106,
																	"name": "BTCtoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "1252:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 105,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1245:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$22_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1245:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$22",
																"typeString": "contract IERC20"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1245:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1245:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1245:44:0"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 114,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1300:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$43_storage_$",
																	"typeString": "mapping(address => struct Stopcock.User storage ref)"
																}
															},
															"id": 117,
															"indexExpression": {
																"expression": {
																	"id": 115,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1309:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1309:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1300:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$43_storage",
																"typeString": "struct Stopcock.User storage ref"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimBTCNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 40,
														"src": "1300:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 119,
														"name": "_claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1339:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1300:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1300:45:0"
											},
											{
												"expression": {
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 122,
														"name": "ReceivedBTCTokenNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1356:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 123,
														"name": "_claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1382:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1356:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1356:32:0"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "tradeBTCproportion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1399:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 127,
																				"name": "ReceivedETHTokenNumber",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "1422:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31303030303030303030303030303030303030",
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1447:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1000000000000000000"
																			},
																			"src": "1422:44:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 130,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1421:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 131,
																	"name": "ReceivedBTCTokenNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1470:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1421:71:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 133,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1420:73:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1399:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1399:94:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1513:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"id": 137,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 93,
												"id": 138,
												"nodeType": "Return",
												"src": "1506:12:0"
											}
										]
									},
									"functionSelector": "f733f048",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimBTC",
									"nameLocation": "1095:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_claim",
												"nameLocation": "1109:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1104:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1104:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:13:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1133:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 91,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1133:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:6:0"
									},
									"scope": 316,
									"src": "1086:440:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1587:387:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 148,
																		"name": "User_Map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "1606:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$43_storage_$",
																			"typeString": "mapping(address => struct Stopcock.User storage ref)"
																		}
																	},
																	"id": 151,
																	"indexExpression": {
																		"expression": {
																			"id": 149,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1615:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1615:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1606:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$43_storage",
																		"typeString": "struct Stopcock.User storage ref"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "claimETHNumber",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 42,
																"src": "1606:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130303030303030303030303030303030303030",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1646:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"value": "10000000000000000000"
															},
															"src": "1606:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636c61696d206265796f6e64",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1668:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d4215aeb4dcf8d50bd372910624a94c106276dbc27d4a090b436cdf0c71d01e",
																"typeString": "literal_string \"claim beyond\""
															},
															"value": "claim beyond"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d4215aeb4dcf8d50bd372910624a94c106276dbc27d4a090b436cdf0c71d01e",
																"typeString": "literal_string \"claim beyond\""
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "1598:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 162,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1720:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1720:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 164,
															"name": "_claim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "1731:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 159,
																	"name": "ETHtoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1701:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 158,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1694:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$22_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1694:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$22",
																"typeString": "contract IERC20"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1694:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1694:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "1694:44:0"
											},
											{
												"expression": {
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 167,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1749:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$43_storage_$",
																	"typeString": "mapping(address => struct Stopcock.User storage ref)"
																}
															},
															"id": 170,
															"indexExpression": {
																"expression": {
																	"id": 168,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1758:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1758:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1749:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$43_storage",
																"typeString": "struct Stopcock.User storage ref"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimETHNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "1749:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 172,
														"name": "_claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "1788:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1749:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1749:45:0"
											},
											{
												"expression": {
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 175,
														"name": "ReceivedETHTokenNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1805:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 176,
														"name": "_claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "1831:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1805:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "1805:32:0"
											},
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "tradeETHproportion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1848:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 180,
																				"name": "ReceivedBTCTokenNumber",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "1871:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31303030303030303030303030303030303030",
																				"id": 181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1896:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1000000000000000000"
																			},
																			"src": "1871:44:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 183,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1870:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 184,
																	"name": "ReceivedETHTokenNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "1920:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1870:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 186,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1869:74:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:95:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1848:95:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"id": 190,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1960:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 146,
												"id": 191,
												"nodeType": "Return",
												"src": "1954:12:0"
											}
										]
									},
									"functionSelector": "fe96973a",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimETH",
									"nameLocation": "1543:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "_claim",
												"nameLocation": "1557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1552:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1552:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1551:13:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1581:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1580:6:0"
									},
									"scope": 316,
									"src": "1534:440:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "2069:1274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 204,
														"name": "_fromToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2084:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 205,
														"name": "BTCtoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "2098:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2084:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 257,
															"name": "_fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2802:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 258,
															"name": "ETHtoken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2816:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2802:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 310,
													"nodeType": "IfStatement",
													"src": "2799:515:0",
													"trueBody": {
														"id": 309,
														"nodeType": "Block",
														"src": "2826:488:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 264,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2871:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2871:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 268,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2891:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Stopcock_$316",
																						"typeString": "contract Stopcock"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Stopcock_$316",
																						"typeString": "contract Stopcock"
																					}
																				],
																				"id": 267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2883:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 266,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2883:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2883:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 270,
																			"name": "_fromAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "2898:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 261,
																					"name": "ETHtoken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 26,
																					"src": "2848:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 260,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "2841:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$22_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2841:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$22",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 21,
																		"src": "2841:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2841:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 272,
																"nodeType": "ExpressionStatement",
																"src": "2841:69:0"
															},
															{
																"expression": {
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 273,
																		"name": "ReceivedETHTokenNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "2925:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 274,
																		"name": "_fromAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2951:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2925:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 276,
																"nodeType": "ExpressionStatement",
																"src": "2925:37:0"
															},
															{
																"expression": {
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 277,
																		"name": "tradeETHproportion",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "2977:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 283,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 280,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 278,
																								"name": "ReceivedBTCTokenNumber",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 28,
																								"src": "3000:22:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "31303030303030303030303030303030303030",
																								"id": 279,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3025:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								},
																								"value": "1000000000000000000"
																							},
																							"src": "3000:44:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 281,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2999:46:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 282,
																					"name": "ReceivedETHTokenNumber",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 30,
																					"src": "3049:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2999:72:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 284,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2998:74:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2977:95:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 286,
																"nodeType": "ExpressionStatement",
																"src": "2977:95:0"
															},
															{
																"assignments": [
																	288
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 288,
																		"mutability": "mutable",
																		"name": "send_btcTokenNumber",
																		"nameLocation": "3092:19:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 309,
																		"src": "3087:24:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 287,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "3087:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 295,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 289,
																					"name": "_fromAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 199,
																					"src": "3115:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 290,
																					"name": "tradeETHproportion",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "3129:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3115:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 292,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3114:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030303030303030303030303030303030",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3151:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1000000000000000000"
																	},
																	"src": "3114:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3087:83:0"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 300,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3211:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3211:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 302,
																			"name": "send_btcTokenNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "3222:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 297,
																					"name": "BTCtoken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 24,
																					"src": "3192:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 296,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "3185:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$22_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3185:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$22",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "3185:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3185:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 304,
																"nodeType": "ExpressionStatement",
																"src": "3185:57:0"
															},
															{
																"expression": {
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 305,
																		"name": "ReceivedBTCTokenNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "3257:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"id": 306,
																		"name": "send_btcTokenNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "3283:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 308,
																"nodeType": "ExpressionStatement",
																"src": "3257:45:0"
															}
														]
													}
												},
												"id": 311,
												"nodeType": "IfStatement",
												"src": "2080:1234:0",
												"trueBody": {
													"id": 256,
													"nodeType": "Block",
													"src": "2108:674:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 211,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2153:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2153:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 215,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2173:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Stopcock_$316",
																					"typeString": "contract Stopcock"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Stopcock_$316",
																					"typeString": "contract Stopcock"
																				}
																			],
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2165:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 213,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2165:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2165:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 217,
																		"name": "_fromAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2180:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 208,
																				"name": "BTCtoken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "2130:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 207,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "2123:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$22_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2123:16:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$22",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "2123:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2123:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 219,
															"nodeType": "ExpressionStatement",
															"src": "2123:69:0"
														},
														{
															"expression": {
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 220,
																	"name": "ReceivedBTCTokenNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "2207:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 221,
																	"name": "_fromAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "2233:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2207:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 223,
															"nodeType": "ExpressionStatement",
															"src": "2207:37:0"
														},
														{
															"expression": {
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 224,
																	"name": "tradeBTCproportion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "2445:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 227,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 225,
																							"name": "ReceivedETHTokenNumber",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 30,
																							"src": "2468:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "31303030303030303030303030303030303030",
																							"id": 226,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2493:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1000000000000000000"
																						},
																						"src": "2468:44:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 228,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2467:46:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 229,
																				"name": "ReceivedBTCTokenNumber",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "2517:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2467:72:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 231,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2466:74:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2445:95:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 233,
															"nodeType": "ExpressionStatement",
															"src": "2445:95:0"
														},
														{
															"assignments": [
																235
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 235,
																	"mutability": "mutable",
																	"name": "send_ethTokenNumber",
																	"nameLocation": "2560:19:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 256,
																	"src": "2555:24:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 234,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2555:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 242,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 236,
																				"name": "_fromAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "2583:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 237,
																				"name": "tradeBTCproportion",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 38,
																				"src": "2597:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2583:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 239,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2582:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030303030303030303030303030303030",
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2619:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1000000000000000000"
																},
																"src": "2582:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2555:83:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 247,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2679:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2679:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 249,
																		"name": "send_ethTokenNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2690:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 244,
																				"name": "ETHtoken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "2660:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 243,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "2653:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$22_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2653:16:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$22",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 10,
																	"src": "2653:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2653:57:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 251,
															"nodeType": "ExpressionStatement",
															"src": "2653:57:0"
														},
														{
															"expression": {
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 252,
																	"name": "ReceivedETHTokenNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2725:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 253,
																	"name": "send_ethTokenNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "2751:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2725:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 255,
															"nodeType": "ExpressionStatement",
															"src": "2725:45:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3331:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 203,
												"id": 313,
												"nodeType": "Return",
												"src": "3324:11:0"
											}
										]
									},
									"functionSelector": "5253baae",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trade",
									"nameLocation": "1991:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "_fromToken",
												"nameLocation": "2005:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1997:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2017:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "_fromAmount",
												"nameLocation": "2034:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2029:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2029:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:50:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2062:6:0"
									},
									"scope": 316,
									"src": "1982:1361:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 317,
							"src": "266:3082:0",
							"usedErrors": []
						}
					],
					"src": "38:3310:0"
				},
				"id": 0
			}
		}
	}
}