{
	"id": "39cc93e93edf1bd788a63b0decfb2586",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"写个百分比矿池.sol": {
				"content": " // SPDX-License-Identifier: MIT  \r\n\r\npragma solidity ^0.8.7;  \r\n \r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint);\r\n\r\n    function balanceOf(address account) external view returns (uint);\r\n\r\n    function transfer(address recipient, uint amout) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint amout) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint amout) external returns (bool);\r\n\r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n\r\n}\r\n\r\ncontract StakeContract {\r\n    // uint public stakeTime;\r\n    uint public ratio;\r\n    address public staketoken;\r\n    address public totoken;\r\n    uint public stakeSupple = 1;\r\n    address public owner;\r\n\r\n    \r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event transfer(address indexed to, uint amout);\r\n\r\n    struct User {\r\n        uint stakeNumber;\r\n        uint last_Stake_Time;\r\n        uint last_totoken_ratio;\r\n        uint whole_ratio;\r\n        uint last_totoken_Time;\r\n        uint user_proportion;\r\n    }\r\n\r\n    mapping(address => User) public User_Map;\r\n\r\n    constructor (address _staketoken, address _totoken) {\r\n        owner = msg.sender;\r\n        require(_staketoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_totoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_staketoken == _totoken,\"NEED agreement\");\r\n        staketoken = _staketoken;\r\n        totoken = _totoken;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner , \"not owner\");\r\n        _;\r\n    }\r\n\r\n    // function getStakeTime() public view returns (uint) {\r\n    //     return stakeTime;\r\n    // }\r\n\r\n    function setRatio(uint _ratio) external onlyOwner {    \r\n        ratio = _ratio;     \r\n    }\r\n\r\n    function Stake(uint _amount) public returns (bool){\r\n\r\n        IERC20(staketoken).transferFrom(msg.sender, address(this), _amount);\r\n\r\n        emit Trasfer(msg.sender, address(this), _amount);\r\n        User_Map[msg.sender].user_proportion = User_Map[msg.sender].stakeNumber * 1000 / stakeSupple;\r\n        User_Map[msg.sender].last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * (User_Map[msg.sender].user_proportion * ratio) / 1000;\r\n        User_Map[msg.sender].stakeNumber += _amount;        \r\n        User_Map[msg.sender].last_Stake_Time = block.timestamp;\r\n        stakeSupple += _amount;\r\n        User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time;\r\n        return true;    \r\n    }\r\n\r\n        function withDraw () public returns (bool) {\r\n        IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].stakeNumber);\r\n            \r\n        stakeSupple -= User_Map[msg.sender].stakeNumber;\r\n        User_Map[msg.sender].stakeNumber = 0;\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n        function harvest() public returns (bool) {\r\n        // uint userharproportion = User_Map[msg.sender].stakeNumber * 1000 / stakeSupple;\r\n        User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].user_proportion * ratio ) / 1000);\r\n        IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].whole_ratio);\r\n\r\n        User_Map[msg.sender].whole_ratio = 0;\r\n        User_Map[msg.sender].last_totoken_ratio = 0;\r\n        User_Map[msg.sender].last_totoken_Time = block.timestamp; \r\n        return true;\r\n    }\r\n\r\n    function newTotokenRatio() public view returns (uint) {\r\n        uint newtime = block.timestamp - User_Map[msg.sender].last_totoken_Time;  \r\n        uint newTotokenRatione = newtime * ((User_Map[msg.sender].user_proportion * ratio) / 1000);\r\n        return newTotokenRatione;\r\n    }\r\n   \r\n    function lastTotokenRatio()public view returns(uint) {\r\n        uint _lastTotokenRatio = User_Map[msg.sender].last_totoken_ratio;\r\n        return _lastTotokenRatio;\r\n    }\r\n}\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"写个百分比矿池.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5199\\u4e2a\\u767e\\u5206\\u6bd4\\u77ff\\u6c60.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5199\\u4e2a\\u767e\\u5206\\u6bd4\\u77ff\\u6c60.sol\":{\"keccak256\":\"0x62600900d0a7229259ee787809831cde443ff7989f9b0c2db00c3432e0566576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc9952dda58872bc61dfbb674d8e07fdca3d1ead326370817ffc604b2ebd255\",\"dweb:/ipfs/QmeUjTgQ44rVunSkJCETVZJHbnY4Pv3R3rpTNonp2yqA3A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakeContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staketoken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_totoken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "User_Map",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakeNumber",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_Stake_Time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "whole_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_Time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "user_proportion",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTotokenRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newTotokenRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								}
							],
							"name": "setRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeSupple",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "staketoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withDraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:4271  contract StakeContract {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":904:905  1 */\n  0x01\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":878:905  uint public stakeSupple = 1 */\n  0x03\n  sstore\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1336:1674  constructor (address _staketoken, address _totoken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1399:1404  owner */\n  0x04\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1399:1417  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1407:1417  msg.sender */\n  caller\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1399:1417  owner = msg.sender */\n  or\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1436:1461  _staketoken != address(0) */\n  dup3\n  and\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1428:1481  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1428:1481  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x10\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:793   */\n  mstore\n    /* \"#utility.yul\":810:828   */\n  0x64\n  add\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1428:1481  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1500:1522  _totoken != address(0) */\n  dup2\n  and\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1492:1542  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1492:1542  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x10\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:793   */\n  mstore\n    /* \"#utility.yul\":810:828   */\n  0x64\n  add\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1492:1542  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_7\n    /* \"#utility.yul\":494:834   */\n  jump\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1492:1542  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\ntag_9:\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1576:1584  _totoken */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1561:1584  _staketoken == _totoken */\n  and\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1561:1572  _staketoken */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1561:1584  _staketoken == _totoken */\n  and\n  eq\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1553:1602  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1553:1602  require(_staketoken == _totoken,\"NEED agreement\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1023:1044   */\n  mstore\n    /* \"#utility.yul\":1080:1082   */\n  0x0e\n    /* \"#utility.yul\":1060:1078   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1053:1083   */\n  mstore\n  shl(0x92, 0x13915151081859dc99595b595b9d)\n    /* \"#utility.yul\":1099:1117   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1092:1136   */\n  mstore\n    /* \"#utility.yul\":1153:1171   */\n  0x64\n  add\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1553:1602  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_7\n    /* \"#utility.yul\":839:1177   */\n  jump\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1553:1602  require(_staketoken == _totoken,\"NEED agreement\") */\ntag_11:\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1613:1623  staketoken */\n  0x01\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1613:1637  staketoken = _staketoken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1648:1655  totoken */\n  0x02\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1648:1666  totoken = _totoken */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:4271  contract StakeContract {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_20:\n    /* \"#utility.yul\":375:415   */\n  tag_21\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_22\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":839:1177   */\ntag_16:\n    /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:4271  contract StakeContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:4271  contract StakeContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x71ca337d\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x71ca337d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8c93ecff\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb2237ba3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd942727f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdab2997b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x0fdb1c10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x227a473b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2c46502d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x529aca49\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5e9f4435\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2740:3091  function withDraw () public returns (bool) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2740:3091  function withDraw () public returns (bool) {... */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1987:2728  function Stake(uint _amount) public returns (bool){... */\n    tag_4:\n      tag_16\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":849:871  address public totoken */\n    tag_5:\n      sload(0x02)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":555:587   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":537:588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":525:527   */\n      0x20\n        /* \"#utility.yul\":510:528   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":849:871  address public totoken */\n      tag_18\n        /* \"#utility.yul\":391:594   */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3105:3796  function harvest() public returns (bool) {... */\n    tag_6:\n      tag_16\n      tag_30\n      jump\t// in\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3804:4086  function newTotokenRatio() public view returns (uint) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":745:770   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3804:4086  function newTotokenRatio() public view returns (uint) {... */\n      tag_18\n        /* \"#utility.yul\":599:776   */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4097:4268  function lastTotokenRatio()public view returns(uint) {... */\n    tag_8:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4195:4205  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4144:4148  uint */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4186:4206  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4186:4194  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4186:4206  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4186:4225  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4097:4268  function lastTotokenRatio()public view returns(uint) {... */\n      jump(tag_32)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":793:810  uint public ratio */\n    tag_9:\n      tag_32\n      sload(0x00)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1287:1327  mapping(address => User) public User_Map */\n    tag_10:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      0x05\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      swap5\n      swap1\n      swap6\n      add\n      sload\n      swap3\n      swap5\n      swap2\n      swap4\n      swap1\n      swap3\n      dup7\n      jump\n    tag_42:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1359:1384   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":1415:1417   */\n      0x20\n        /* \"#utility.yul\":1400:1418   */\n      dup8\n      add\n        /* \"#utility.yul\":1393:1427   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":1443:1461   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":1436:1470   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1501:1503   */\n      0x60\n        /* \"#utility.yul\":1486:1504   */\n      dup5\n      add\n        /* \"#utility.yul\":1479:1513   */\n      mstore\n        /* \"#utility.yul\":1544:1547   */\n      0x80\n        /* \"#utility.yul\":1529:1548   */\n      dup4\n      add\n        /* \"#utility.yul\":1522:1557   */\n      mstore\n        /* \"#utility.yul\":1588:1591   */\n      0xa0\n        /* \"#utility.yul\":1573:1592   */\n      dup3\n      add\n        /* \"#utility.yul\":1566:1601   */\n      mstore\n        /* \"#utility.yul\":1346:1349   */\n      0xc0\n        /* \"#utility.yul\":1331:1350   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1287:1327  mapping(address => User) public User_Map */\n      tag_18\n        /* \"#utility.yul\":1072:1607   */\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":912:932  address public owner */\n    tag_11:\n      sload(0x04)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1887:1979  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_12:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":878:905  uint public stakeSupple = 1 */\n    tag_13:\n      tag_32\n      sload(0x03)\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":817:842  address public staketoken */\n    tag_14:\n      sload(0x01)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2740:3091  function withDraw () public returns (bool) {... */\n    tag_17:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2801:2811  staketoken */\n      sload(0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2822:2832  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2777:2781  bool */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2834:2854  User_Map[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2834:2842  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2834:2854  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2834:2866  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2794:2867  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1786:1837   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":1853:1871   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":1846:1880   */\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2777:2781  bool */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2801:2811  staketoken */\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2794:2821  IERC20(staketoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1759:1777   */\n      0x44\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2794:2867  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2895:2905  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2927  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2915  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2927  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2939  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2886:2940  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap2\n      mload\n        /* \"#utility.yul\":745:770   */\n      swap2\n      dup3\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2886:2940  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n      swap2\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2886:2940  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2989:2999  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2980:3000  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2980:2988  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2980:3000  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2980:3012  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:2976  stakeSupple */\n      0x03\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:3012  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      dup1\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2980:3012  User_Map[msg.sender].stakeNumber */\n      swap2\n      swap3\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:2976  stakeSupple */\n      swap1\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:3012  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_68\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2980:3012  User_Map[msg.sender].stakeNumber */\n      dup5\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:3012  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_69\n      jump\t// in\n    tag_68:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3032:3042  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3058:3059  0 */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3023:3043  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3023:3031  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3023:3043  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3023:3059  User_Map[msg.sender].stakeNumber = 0 */\n      sstore\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3079:3083  true */\n      0x01\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2740:3091  function withDraw () public returns (bool) {... */\n      jump\t// out\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1987:2728  function Stake(uint _amount) public returns (bool){... */\n    tag_23:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2057:2067  staketoken */\n      sload(0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2050:2117  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2082:2092  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2050:2117  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2675:2709   */\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2102:2106  this */\n      address\n        /* \"#utility.yul\":2725:2743   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2718:2761   */\n      mstore\n        /* \"#utility.yul\":2777:2795   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2770:2804   */\n      dup4\n      swap1\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2032:2036  bool */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2057:2067  staketoken */\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2050:2081  IERC20(staketoken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2610:2628   */\n      0x64\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2050:2117  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_75:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2135:2178  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":745:770   */\n      dup3\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2163:2167  this */\n      address\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2143:2153  msg.sender */\n      caller\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2135:2178  Trasfer(msg.sender, address(this), _amount) */\n      0x1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c\n      swap1\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2135:2178  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2270:2281  stakeSupple */\n      sload(0x03)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2247  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2228:2248  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2228:2236  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2228:2248  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2228:2260  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2228:2267  User_Map[msg.sender].stakeNumber * 1000 */\n      tag_77\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2263:2267  1000 */\n      0x03e8\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2228:2267  User_Map[msg.sender].stakeNumber * 1000 */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2228:2281  User_Map[msg.sender].stakeNumber * 1000 / stakeSupple */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2198:2208  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2189:2209  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2189:2197  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2189:2209  User_Map[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2189:2225  User_Map[msg.sender].user_proportion */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2189:2281  User_Map[msg.sender].user_proportion = User_Map[msg.sender].stakeNumber * 1000 / stakeSupple */\n      dup3\n      swap1\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2433:2438  ratio */\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2442:2446  1000 */\n      0x03e8\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2394:2438  User_Map[msg.sender].user_proportion * ratio */\n      tag_81\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2433:2438  ratio */\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2394:2438  User_Map[msg.sender].user_proportion * ratio */\n      tag_78\n      jump\t// in\n    tag_81:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2362:2372  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2353:2373  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2353:2361  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2353:2373  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2353:2389  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2335:2389  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_82\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2335:2350  block.timestamp */\n      timestamp\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2335:2389  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_69\n      jump\t// in\n    tag_82:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2334:2439  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * (User_Map[msg.sender].user_proportion * ratio) */\n      tag_83\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_83:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2334:2446  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * (User_Map[msg.sender].user_proportion * ratio) / 1000 */\n      tag_84\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_84:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2301:2311  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2292:2312  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2292:2300  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2292:2312  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2292:2331  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2292:2446  User_Map[msg.sender].last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * (User_Map[msg.sender].user_proportion * ratio) / 1000 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2457:2500  User_Map[msg.sender].stakeNumber += _amount */\n      dup2\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2493:2500  _amount */\n      dup5\n      swap3\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2292:2312  User_Map[msg.sender] */\n      swap2\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2457:2500  User_Map[msg.sender].stakeNumber += _amount */\n      tag_85\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2493:2500  _amount */\n      dup5\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2457:2500  User_Map[msg.sender].stakeNumber += _amount */\n      tag_86\n      jump\t// in\n    tag_85:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2528:2538  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2519:2539  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2519:2527  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2519:2539  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2558:2573  block.timestamp */\n      timestamp\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2519:2555  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2519:2573  User_Map[msg.sender].last_Stake_Time = block.timestamp */\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2584:2595  stakeSupple */\n      0x03\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2584:2606  stakeSupple += _amount */\n      dup1\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2599:2606  _amount */\n      dup5\n      swap3\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2519:2539  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2584:2606  stakeSupple += _amount */\n      tag_87\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2599:2606  _amount */\n      dup5\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2584:2606  stakeSupple += _amount */\n      tag_86\n      jump\t// in\n    tag_87:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2667:2677  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2658:2678  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2658:2666  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2658:2678  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2658:2694  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      dup1\n      dup3\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2617:2655  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      swap1\n      swap3\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2617:2694  User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2658:2694  User_Map[msg.sender].last_Stake_Time */\n      swap3\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1987:2728  function Stake(uint _amount) public returns (bool){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3105:3796  function harvest() public returns (bool) {... */\n    tag_30:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3140:3144  bool */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3426:3431  ratio */\n      dup1\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3396:3406  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3387:3407  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3387:3395  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3387:3407  User_Map[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup4\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3387:3423  User_Map[msg.sender].user_proportion */\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3436:3440  1000 */\n      0x03e8\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3387:3431  User_Map[msg.sender].user_proportion * ratio */\n      tag_89\n      swap2\n      tag_78\n      jump\t// in\n    tag_89:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3386:3440  (User_Map[msg.sender].user_proportion * ratio ) / 1000 */\n      tag_90\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_90:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3354:3364  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3345:3365  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3345:3353  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3345:3365  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3345:3381  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3327:3381  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_91\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3327:3342  block.timestamp */\n      timestamp\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3327:3381  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_69\n      jump\t// in\n    tag_91:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3326:3441  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].user_proportion * ratio ) / 1000) */\n      tag_92\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_92:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3293:3303  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3284:3304  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3284:3292  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3284:3304  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3284:3323  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3284:3441  User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].user_proportion * ratio ) / 1000) */\n      tag_93\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_93:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3258:3268  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3249:3269  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3249:3257  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3249:3269  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3249:3281  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3249:3441  User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].user_proportion * ratio ) / 1000) */\n      dup4\n      swap1\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3459:3466  totoken */\n      sload(0x02)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3452:3522  IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1786:1837   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1853:1871   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1846:1880   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3459:3466  totoken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3452:3476  IERC20(totoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1759:1777   */\n      0x44\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3452:3522  IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_97:\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3550:3560  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3562:3582  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3562:3570  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3562:3582  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3562:3594  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3541:3595  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap2\n      mload\n        /* \"#utility.yul\":745:770   */\n      swap2\n      dup3\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3541:3595  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n      swap2\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3541:3595  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3617:3627  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3643:3644  0 */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3608:3628  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3608:3616  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3608:3628  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3608:3640  User_Map[msg.sender].whole_ratio */\n      0x03\n      dup2\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3608:3644  User_Map[msg.sender].whole_ratio = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3655:3694  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3655:3698  User_Map[msg.sender].last_totoken_ratio = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3750:3765  block.timestamp */\n      timestamp\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3709:3747  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      swap1\n      swap2\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3709:3765  User_Map[msg.sender].last_totoken_Time = block.timestamp */\n      sstore\n      0x01\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3105:3796  function harvest() public returns (bool) {... */\n      jump\t// out\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3804:4086  function newTotokenRatio() public view returns (uint) {... */\n    tag_33:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3911:3921  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3852:3856  uint */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3902:3922  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3902:3910  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3902:3922  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3902:3940  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3852:3856  uint */\n      dup2\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3884:3940  block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      tag_100\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3884:3899  block.timestamp */\n      timestamp\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3884:3940  block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      tag_69\n      jump\t// in\n    tag_100:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3953:3975  uint newTotokenRatione */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4029:4034  ratio */\n      dup1\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3999:4009  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3990:4010  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3990:3998  User_Map */\n      0x05\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3990:4010  User_Map[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup4\n      keccak256\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3990:4026  User_Map[msg.sender].user_proportion */\n      add\n      sload\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3869:3940  uint newtime = block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      swap3\n      swap4\n      pop\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3953:3975  uint newTotokenRatione */\n      swap1\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4038:4042  1000 */\n      0x03e8\n      swap2\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3990:4034  User_Map[msg.sender].user_proportion * ratio */\n      tag_101\n      swap2\n      tag_78\n      jump\t// in\n    tag_101:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3989:4042  (User_Map[msg.sender].user_proportion * ratio) / 1000 */\n      tag_102\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_102:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3978:4043  newtime * ((User_Map[msg.sender].user_proportion * ratio) / 1000) */\n      tag_103\n      swap1\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3978:3985  newtime */\n      dup4\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3978:4043  newtime * ((User_Map[msg.sender].user_proportion * ratio) / 1000) */\n      tag_78\n      jump\t// in\n    tag_103:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3953:4043  uint newTotokenRatione = newtime * ((User_Map[msg.sender].user_proportion * ratio) / 1000) */\n      swap4\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3804:4086  function newTotokenRatio() public view returns (uint) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1887:1979  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_53:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1736:1741  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1722:1732  msg.sender */\n      caller\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1722:1741  msg.sender == owner */\n      eq\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1714:1756  require(msg.sender == owner , \"not owner\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3545:3547   */\n      0x20\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1714:1756  require(msg.sender == owner , \"not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3527:3548   */\n      mstore\n        /* \"#utility.yul\":3584:3585   */\n      0x09\n        /* \"#utility.yul\":3564:3582   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3557:3586   */\n      mstore\n      shl(0xb9, 0x3737ba1037bbb732b9)\n        /* \"#utility.yul\":3602:3620   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3595:3634   */\n      mstore\n        /* \"#utility.yul\":3651:3669   */\n      0x64\n      add\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1714:1756  require(msg.sender == owner , \"not owner\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1952:1957  ratio */\n      0x00\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1952:1966  ratio = _ratio */\n      sstore\n        /* \"\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x99\\xbe\\xe5\\x88\\x86\\xe6\\xaf\\x94\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1887:1979  function setRatio(uint _ratio) external onlyOwner {    ... */\n      jump\t// out\n        /* \"#utility.yul\":206:386   */\n    tag_22:\n        /* \"#utility.yul\":265:271   */\n      0x00\n        /* \"#utility.yul\":318:320   */\n      0x20\n        /* \"#utility.yul\":306:315   */\n      dup3\n        /* \"#utility.yul\":297:304   */\n      dup5\n        /* \"#utility.yul\":293:316   */\n      sub\n        /* \"#utility.yul\":289:321   */\n      slt\n        /* \"#utility.yul\":286:338   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":334:335   */\n      0x00\n        /* \"#utility.yul\":331:332   */\n      dup1\n        /* \"#utility.yul\":324:336   */\n      revert\n        /* \"#utility.yul\":286:338   */\n    tag_114:\n      pop\n        /* \"#utility.yul\":357:380   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":206:386   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1067   */\n    tag_44:\n        /* \"#utility.yul\":840:846   */\n      0x00\n        /* \"#utility.yul\":893:895   */\n      0x20\n        /* \"#utility.yul\":881:890   */\n      dup3\n        /* \"#utility.yul\":872:879   */\n      dup5\n        /* \"#utility.yul\":868:891   */\n      sub\n        /* \"#utility.yul\":864:896   */\n      slt\n        /* \"#utility.yul\":861:913   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      dup1\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":861:913   */\n    tag_118:\n        /* \"#utility.yul\":935:958   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":987:1018   */\n      dup2\n      and\n        /* \"#utility.yul\":977:1019   */\n      dup2\n      eq\n        /* \"#utility.yul\":967:1037   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1030:1031   */\n      dup1\n        /* \"#utility.yul\":1023:1035   */\n      revert\n        /* \"#utility.yul\":1891:2168   */\n    tag_66:\n        /* \"#utility.yul\":1958:1964   */\n      0x00\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":1999:2008   */\n      dup3\n        /* \"#utility.yul\":1990:1997   */\n      dup5\n        /* \"#utility.yul\":1986:2009   */\n      sub\n        /* \"#utility.yul\":1982:2014   */\n      slt\n        /* \"#utility.yul\":1979:2031   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":2027:2028   */\n      0x00\n        /* \"#utility.yul\":2024:2025   */\n      dup1\n        /* \"#utility.yul\":2017:2029   */\n      revert\n        /* \"#utility.yul\":1979:2031   */\n    tag_123:\n        /* \"#utility.yul\":2059:2068   */\n      dup2\n        /* \"#utility.yul\":2053:2069   */\n      mload\n        /* \"#utility.yul\":2112:2117   */\n      dup1\n        /* \"#utility.yul\":2105:2118   */\n      iszero\n        /* \"#utility.yul\":2098:2119   */\n      iszero\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2088:2120   */\n      eq\n        /* \"#utility.yul\":2078:2138   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":2134:2135   */\n      0x00\n        /* \"#utility.yul\":2131:2132   */\n      dup1\n        /* \"#utility.yul\":2124:2136   */\n      revert\n        /* \"#utility.yul\":2173:2300   */\n    tag_110:\n        /* \"#utility.yul\":2234:2244   */\n      0x4e487b71\n        /* \"#utility.yul\":2229:2232   */\n      0xe0\n        /* \"#utility.yul\":2225:2245   */\n      shl\n        /* \"#utility.yul\":2222:2223   */\n      0x00\n        /* \"#utility.yul\":2215:2246   */\n      mstore\n        /* \"#utility.yul\":2265:2269   */\n      0x11\n        /* \"#utility.yul\":2262:2263   */\n      0x04\n        /* \"#utility.yul\":2255:2270   */\n      mstore\n        /* \"#utility.yul\":2289:2293   */\n      0x24\n        /* \"#utility.yul\":2286:2287   */\n      0x00\n        /* \"#utility.yul\":2279:2294   */\n      revert\n        /* \"#utility.yul\":2305:2430   */\n    tag_69:\n        /* \"#utility.yul\":2345:2349   */\n      0x00\n        /* \"#utility.yul\":2373:2374   */\n      dup3\n        /* \"#utility.yul\":2370:2371   */\n      dup3\n        /* \"#utility.yul\":2367:2375   */\n      lt\n        /* \"#utility.yul\":2364:2398   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":2378:2396   */\n      tag_128\n      tag_110\n      jump\t// in\n    tag_128:\n      pop\n        /* \"#utility.yul\":2415:2424   */\n      sub\n      swap1\n        /* \"#utility.yul\":2305:2430   */\n      jump\t// out\n        /* \"#utility.yul\":2815:2983   */\n    tag_78:\n        /* \"#utility.yul\":2855:2862   */\n      0x00\n        /* \"#utility.yul\":2921:2922   */\n      dup2\n        /* \"#utility.yul\":2917:2918   */\n      0x00\n        /* \"#utility.yul\":2913:2919   */\n      not\n        /* \"#utility.yul\":2909:2923   */\n      div\n        /* \"#utility.yul\":2906:2907   */\n      dup4\n        /* \"#utility.yul\":2903:2924   */\n      gt\n        /* \"#utility.yul\":2898:2899   */\n      dup3\n        /* \"#utility.yul\":2891:2900   */\n      iszero\n        /* \"#utility.yul\":2884:2901   */\n      iszero\n        /* \"#utility.yul\":2880:2925   */\n      and\n        /* \"#utility.yul\":2877:2948   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":2928:2946   */\n      tag_132\n      tag_110\n      jump\t// in\n    tag_132:\n      pop\n        /* \"#utility.yul\":2968:2977   */\n      mul\n      swap1\n        /* \"#utility.yul\":2815:2983   */\n      jump\t// out\n        /* \"#utility.yul\":2988:3205   */\n    tag_80:\n        /* \"#utility.yul\":3028:3029   */\n      0x00\n        /* \"#utility.yul\":3054:3055   */\n      dup3\n        /* \"#utility.yul\":3044:3176   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":3098:3108   */\n      0x4e487b71\n        /* \"#utility.yul\":3093:3096   */\n      0xe0\n        /* \"#utility.yul\":3089:3109   */\n      shl\n        /* \"#utility.yul\":3086:3087   */\n      0x00\n        /* \"#utility.yul\":3079:3110   */\n      mstore\n        /* \"#utility.yul\":3133:3137   */\n      0x12\n        /* \"#utility.yul\":3130:3131   */\n      0x04\n        /* \"#utility.yul\":3123:3138   */\n      mstore\n        /* \"#utility.yul\":3161:3165   */\n      0x24\n        /* \"#utility.yul\":3158:3159   */\n      0x00\n        /* \"#utility.yul\":3151:3166   */\n      revert\n        /* \"#utility.yul\":3044:3176   */\n    tag_134:\n      pop\n        /* \"#utility.yul\":3190:3199   */\n      div\n      swap1\n        /* \"#utility.yul\":2988:3205   */\n      jump\t// out\n        /* \"#utility.yul\":3210:3338   */\n    tag_86:\n        /* \"#utility.yul\":3250:3253   */\n      0x00\n        /* \"#utility.yul\":3281:3282   */\n      dup3\n        /* \"#utility.yul\":3277:3283   */\n      not\n        /* \"#utility.yul\":3274:3275   */\n      dup3\n        /* \"#utility.yul\":3271:3284   */\n      gt\n        /* \"#utility.yul\":3268:3307   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3287:3305   */\n      tag_137\n      tag_110\n      jump\t// in\n    tag_137:\n      pop\n        /* \"#utility.yul\":3323:3332   */\n      add\n      swap1\n        /* \"#utility.yul\":3210:3338   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f869f7f501811cc14e5a2031bf1c8e8b2943a478d9143bdd4167045ff67c0d564736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1179:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:1"
															},
															"nodeType": "YulIf",
															"src": "304:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													}
												],
												"src": "196:293:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "668:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "696:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "678:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "730:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "708:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "769:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:1"
																	},
																	{
																		"hexValue": "4e4f542c532030582041444452455353",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "774:18:1",
																		"type": "",
																		"value": "NOT,S 0X ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "802:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "814:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "802:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "645:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "659:4:1",
														"type": ""
													}
												],
												"src": "494:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1013:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1030:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1023:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1075:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1053:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1114:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1099:18:1"
																	},
																	{
																		"hexValue": "4e4545442061677265656d656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1119:16:1",
																		"type": "",
																		"value": "NEED agreement"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1145:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1157:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1168:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1153:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1145:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "990:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1004:4:1",
														"type": ""
													}
												],
												"src": "839:338:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"NOT,S 0X ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"NEED agreement\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160035534801561001557600080fd5b506040516109bb3803806109bb8339810160408190526100349161017c565b600480546001600160a01b031916331790556001600160a01b0382166100945760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b60448201526064015b60405180910390fd5b6001600160a01b0381166100dd5760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b604482015260640161008b565b806001600160a01b0316826001600160a01b03161461012f5760405162461bcd60e51b815260206004820152600e60248201526d13915151081859dc99595b595b9d60921b604482015260640161008b565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556101af565b80516001600160a01b038116811461017757600080fd5b919050565b6000806040838503121561018f57600080fd5b61019883610160565b91506101a660208401610160565b90509250929050565b6107fd806101be6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806371ca337d1161007157806371ca337d1461014a5780638c93ecff146101535780638da5cb5b146101c3578063b2237ba3146101d6578063d942727f146101eb578063dab2997b146101f457600080fd5b80630fdb1c10146100b9578063227a473b146100d65780632c46502d146100e95780634641257d14610114578063529aca491461011c5780635e9f443514610132575b600080fd5b6100c1610207565b60405190151581526020015b60405180910390f35b6100c16100e43660046106dd565b61030e565b6002546100fc906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b6100c16104be565b61012461062e565b6040519081526020016100cd565b33600090815260056020526040902060020154610124565b61012460005481565b6101966101613660046106f6565b600560208190526000918252604090912080546001820154600283015460038401546004850154949095015492949193909286565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016100cd565b6004546100fc906001600160a01b031681565b6101e96101e43660046106dd565b61068e565b005b61012460035481565b6001546100fc906001600160a01b031681565b6001543360008181526005602052604080822054905163a9059cbb60e01b815260048101939093526024830152916001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028b919061071f565b50336000818152600560209081526040918290205491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a23360009081526005602052604081205460038054919290916102f3908490610757565b90915550503360009081526005602052604081205550600190565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a919061071f565b50604051828152309033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a3600354336000908152600560205260409020546103e1906103e861076e565b6103eb919061078d565b336000908152600560208190526040822001829055546103e89161040f919061076e565b3360009081526005602052604090206001015461042c9042610757565b610436919061076e565b610440919061078d565b33600090815260056020526040812060028101929092558154849291906104689084906107af565b909155505033600090815260056020526040812042600190910155600380548492906104959084906107af565b909155505033600090815260056020526040902060018082015460049092019190915592915050565b60008054338252600560208190526040832001546103e8916104df9161076e565b6104e9919061078d565b336000908152600560205260409020600101546105069042610757565b610510919061076e565b3360009081526005602052604090206002015461052d91906107af565b3360008181526005602052604090819020600301839055600254905163a9059cbb60e01b8152600481019290925260248201929092526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb919061071f565b50336000818152600560209081526040918290206003015491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a25033600090815260056020526040812060038101829055600281019190915542600490910155600190565b33600090815260056020526040812060040154819061064d9042610757565b600080543382526005602081905260408320015492935090916103e8916106739161076e565b61067d919061078d565b610687908361076e565b9392505050565b6004546001600160a01b031633146106d85760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640160405180910390fd5b600055565b6000602082840312156106ef57600080fd5b5035919050565b60006020828403121561070857600080fd5b81356001600160a01b038116811461068757600080fd5b60006020828403121561073157600080fd5b8151801515811461068757600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561076957610769610741565b500390565b600081600019048311821515161561078857610788610741565b500290565b6000826107aa57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156107c2576107c2610741565b50019056fea26469706673582212209f869f7f501811cc14e5a2031bf1c8e8b2943a478d9143bdd4167045ff67c0d564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x9BB CODESIZE SUB DUP1 PUSH2 0x9BB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x34 SWAP2 PUSH2 0x17C JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8B JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x13915151081859DC99595B595B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x1AF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198 DUP4 PUSH2 0x160 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6 PUSH1 0x20 DUP5 ADD PUSH2 0x160 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FD DUP1 PUSH2 0x1BE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71CA337D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x2C46502D EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x529ACA49 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x5E9F4435 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x4BE JUMP JUMPDEST PUSH2 0x124 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x124 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP5 SWAP1 SWAP6 ADD SLOAD SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x267 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x71F JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x2F3 SWAP1 DUP5 SWAP1 PUSH2 0x757 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x71F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3E1 SWAP1 PUSH2 0x3E8 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP3 SWAP1 SSTORE SLOAD PUSH2 0x3E8 SWAP2 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x76E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x42C SWAP1 TIMESTAMP PUSH2 0x757 JUMP JUMPDEST PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP5 SWAP3 SWAP2 SWAP1 PUSH2 0x468 SWAP1 DUP5 SWAP1 PUSH2 0x7AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x495 SWAP1 DUP5 SWAP1 PUSH2 0x7AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP4 KECCAK256 ADD SLOAD PUSH2 0x3E8 SWAP2 PUSH2 0x4DF SWAP2 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x506 SWAP1 TIMESTAMP PUSH2 0x757 JUMP JUMPDEST PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x76E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x7AF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x71F JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH2 0x64D SWAP1 TIMESTAMP PUSH2 0x757 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP4 KECCAK256 ADD SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0x673 SWAP2 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH2 0x687 SWAP1 DUP4 PUSH2 0x76E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x769 JUMPI PUSH2 0x769 PUSH2 0x741 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x788 JUMPI PUSH2 0x788 PUSH2 0x741 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7C2 JUMPI PUSH2 0x7C2 PUSH2 0x741 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 DUP7 SWAP16 PUSH32 0x501811CC14E5A2031BF1C8E8B2943A478D9143BDD4167045FF67C0D564736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "732:3539:0:-:0;;;904:1;878:27;;1336:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1399:5;:18;;-1:-1:-1;;;;;;1399:18:0;1407:10;1399:18;;;-1:-1:-1;;;;;1436:25:0;;1428:53;;;;-1:-1:-1;;;1428:53:0;;696:2:1;1428:53:0;;;678:21:1;735:2;715:18;;;708:30;-1:-1:-1;;;754:18:1;;;747:46;810:18;;1428:53:0;;;;;;;;;-1:-1:-1;;;;;1500:22:0;;1492:50;;;;-1:-1:-1;;;1492:50:0;;696:2:1;1492:50:0;;;678:21:1;735:2;715:18;;;708:30;-1:-1:-1;;;754:18:1;;;747:46;810:18;;1492:50:0;494:340:1;1492:50:0;1576:8;-1:-1:-1;;;;;1561:23:0;:11;-1:-1:-1;;;;;1561:23:0;;1553:49;;;;-1:-1:-1;;;1553:49:0;;1041:2:1;1553:49:0;;;1023:21:1;1080:2;1060:18;;;1053:30;-1:-1:-1;;;1099:18:1;;;1092:44;1153:18;;1553:49:0;839:338:1;1553:49:0;1613:10;:24;;-1:-1:-1;;;;;1613:24:0;;;-1:-1:-1;;;;;;1613:24:0;;;;;;;1648:7;:18;;;;;;;;;;;732:3539;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;839:338::-;732:3539:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Stake_292": {
									"entryPoint": 782,
									"id": 292,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@User_Map_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvest_429": {
									"entryPoint": 1214,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastTotokenRatio_480": {
									"entryPoint": null,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@newTotokenRatio_464": {
									"entryPoint": 1582,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_79": {
									"entryPoint": null,
									"id": 79,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ratio_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRatio_183": {
									"entryPoint": 1678,
									"id": 183,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeSupple_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staketoken_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totoken_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withDraw_339": {
									"entryPoint": 519,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3677:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "154:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "78:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "89:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "100:4:1",
														"type": ""
													}
												],
												"src": "14:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "276:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "322:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "331:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "324:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "324:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "324:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "297:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "306:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "293:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "293:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "318:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "289:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "289:32:1"
															},
															"nodeType": "YulIf",
															"src": "286:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "347:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "370:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "357:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "347:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "242:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "253:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "265:6:1",
														"type": ""
													}
												],
												"src": "206:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "492:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "502:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "514:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "502:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "559:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "575:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "580:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "571:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "571:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "584:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "567:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "567:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "537:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "461:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "472:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "483:4:1",
														"type": ""
													}
												],
												"src": "391:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "710:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "722:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "718:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "710:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "763:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "669:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "680:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "691:4:1",
														"type": ""
													}
												],
												"src": "599:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "872:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "881:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "864:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:32:1"
															},
															"nodeType": "YulIf",
															"src": "861:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "935:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "926:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1021:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1030:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1023:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "980:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "991:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1006:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1011:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1002:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1002:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1015:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "998:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "998:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "977:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:50:1"
															},
															"nodeType": "YulIf",
															"src": "967:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1046:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1056:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1046:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "817:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "828:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "840:6:1",
														"type": ""
													}
												],
												"src": "781:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1313:294:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1323:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1335:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1331:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1323:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1366:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1377:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1359:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1404:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1415:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1420:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1393:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1447:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1458:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1443:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1443:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1463:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1436:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1436:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1436:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1490:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1501:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1486:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1506:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1479:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1479:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1479:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1544:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1529:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1550:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1522:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1522:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1577:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1588:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1573:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "1594:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1566:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1566:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1253:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1261:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1269:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1285:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1304:4:1",
														"type": ""
													}
												],
												"src": "1072:535:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1741:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1751:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1763:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1774:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1759:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1751:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1793:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1808:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1824:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1829:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1820:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1820:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1833:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1816:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1816:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1804:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1786:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1786:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1857:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1868:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1853:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1873:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1846:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1846:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1702:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1713:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1721:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1732:4:1",
														"type": ""
													}
												],
												"src": "1612:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1969:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2015:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2027:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2017:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2017:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2017:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1990:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1999:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1986:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1986:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1982:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1982:32:1"
															},
															"nodeType": "YulIf",
															"src": "1979:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2040:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2059:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2053:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2044:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2122:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2134:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2124:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2124:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2124:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2091:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2112:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2105:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2105:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2098:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2098:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2088:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2088:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:40:1"
															},
															"nodeType": "YulIf",
															"src": "2078:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2147:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2157:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1935:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1946:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1958:6:1",
														"type": ""
													}
												],
												"src": "1891:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2205:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2222:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2229:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2234:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2215:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2265:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2255:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2255:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2286:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2289:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2279:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2279:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2173:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2354:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2376:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2378:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2378:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2378:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2370:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2373:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2367:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2367:8:1"
															},
															"nodeType": "YulIf",
															"src": "2364:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2407:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2419:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2422:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2415:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2407:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2336:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2339:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2345:4:1",
														"type": ""
													}
												],
												"src": "2305:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2592:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2602:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2614:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2625:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2610:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2610:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2602:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2637:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2660:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2651:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2651:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2647:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2641:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2682:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2697:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2705:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2693:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2675:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2729:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2740:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2749:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2757:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2745:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2718:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2718:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2781:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2792:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2777:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2777:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2797:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2770:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2770:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2770:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2545:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2556:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2564:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2572:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2583:4:1",
														"type": ""
													}
												],
												"src": "2435:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2867:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2926:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2928:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2928:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2928:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2898:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2891:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2891:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2884:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2884:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2906:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2917:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2913:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2913:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2921:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2909:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2909:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2903:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2903:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2880:45:1"
															},
															"nodeType": "YulIf",
															"src": "2877:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2957:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2972:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2975:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2968:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2957:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2846:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2849:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2855:7:1",
														"type": ""
													}
												],
												"src": "2815:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3065:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3086:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3093:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3098:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3089:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3089:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3079:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3079:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3079:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3130:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3133:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3123:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3123:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3123:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3158:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3161:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3151:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3151:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3151:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3054:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:9:1"
															},
															"nodeType": "YulIf",
															"src": "3044:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3185:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3194:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3197:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3190:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3185:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3019:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3022:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3028:1:1",
														"type": ""
													}
												],
												"src": "2988:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3258:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3285:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3287:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3287:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3287:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3274:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3281:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3277:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3271:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:13:1"
															},
															"nodeType": "YulIf",
															"src": "3268:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3316:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3327:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3330:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3323:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3316:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3241:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3244:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3250:3:1",
														"type": ""
													}
												],
												"src": "3210:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3517:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3534:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3545:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3527:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3564:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3564:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3557:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3606:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3617:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3602:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3602:18:1"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3622:11:1",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3643:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3655:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3666:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3651:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3643:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3494:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3508:4:1",
														"type": ""
													}
												],
												"src": "3343:332:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"not owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806371ca337d1161007157806371ca337d1461014a5780638c93ecff146101535780638da5cb5b146101c3578063b2237ba3146101d6578063d942727f146101eb578063dab2997b146101f457600080fd5b80630fdb1c10146100b9578063227a473b146100d65780632c46502d146100e95780634641257d14610114578063529aca491461011c5780635e9f443514610132575b600080fd5b6100c1610207565b60405190151581526020015b60405180910390f35b6100c16100e43660046106dd565b61030e565b6002546100fc906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b6100c16104be565b61012461062e565b6040519081526020016100cd565b33600090815260056020526040902060020154610124565b61012460005481565b6101966101613660046106f6565b600560208190526000918252604090912080546001820154600283015460038401546004850154949095015492949193909286565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016100cd565b6004546100fc906001600160a01b031681565b6101e96101e43660046106dd565b61068e565b005b61012460035481565b6001546100fc906001600160a01b031681565b6001543360008181526005602052604080822054905163a9059cbb60e01b815260048101939093526024830152916001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028b919061071f565b50336000818152600560209081526040918290205491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a23360009081526005602052604081205460038054919290916102f3908490610757565b90915550503360009081526005602052604081205550600190565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a919061071f565b50604051828152309033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a3600354336000908152600560205260409020546103e1906103e861076e565b6103eb919061078d565b336000908152600560208190526040822001829055546103e89161040f919061076e565b3360009081526005602052604090206001015461042c9042610757565b610436919061076e565b610440919061078d565b33600090815260056020526040812060028101929092558154849291906104689084906107af565b909155505033600090815260056020526040812042600190910155600380548492906104959084906107af565b909155505033600090815260056020526040902060018082015460049092019190915592915050565b60008054338252600560208190526040832001546103e8916104df9161076e565b6104e9919061078d565b336000908152600560205260409020600101546105069042610757565b610510919061076e565b3360009081526005602052604090206002015461052d91906107af565b3360008181526005602052604090819020600301839055600254905163a9059cbb60e01b8152600481019290925260248201929092526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb919061071f565b50336000818152600560209081526040918290206003015491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a25033600090815260056020526040812060038101829055600281019190915542600490910155600190565b33600090815260056020526040812060040154819061064d9042610757565b600080543382526005602081905260408320015492935090916103e8916106739161076e565b61067d919061078d565b610687908361076e565b9392505050565b6004546001600160a01b031633146106d85760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640160405180910390fd5b600055565b6000602082840312156106ef57600080fd5b5035919050565b60006020828403121561070857600080fd5b81356001600160a01b038116811461068757600080fd5b60006020828403121561073157600080fd5b8151801515811461068757600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561076957610769610741565b500390565b600081600019048311821515161561078857610788610741565b500290565b6000826107aa57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156107c2576107c2610741565b50019056fea26469706673582212209f869f7f501811cc14e5a2031bf1c8e8b2943a478d9143bdd4167045ff67c0d564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71CA337D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x2C46502D EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x529ACA49 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x5E9F4435 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x4BE JUMP JUMPDEST PUSH2 0x124 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x124 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP5 SWAP1 SWAP6 ADD SLOAD SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x267 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x71F JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x2F3 SWAP1 DUP5 SWAP1 PUSH2 0x757 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x71F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3E1 SWAP1 PUSH2 0x3E8 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP3 SWAP1 SSTORE SLOAD PUSH2 0x3E8 SWAP2 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x76E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x42C SWAP1 TIMESTAMP PUSH2 0x757 JUMP JUMPDEST PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP5 SWAP3 SWAP2 SWAP1 PUSH2 0x468 SWAP1 DUP5 SWAP1 PUSH2 0x7AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x495 SWAP1 DUP5 SWAP1 PUSH2 0x7AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP4 KECCAK256 ADD SLOAD PUSH2 0x3E8 SWAP2 PUSH2 0x4DF SWAP2 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x506 SWAP1 TIMESTAMP PUSH2 0x757 JUMP JUMPDEST PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x76E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x7AF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x71F JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH2 0x64D SWAP1 TIMESTAMP PUSH2 0x757 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP4 KECCAK256 ADD SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0x673 SWAP2 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH2 0x687 SWAP1 DUP4 PUSH2 0x76E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x769 JUMPI PUSH2 0x769 PUSH2 0x741 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x788 JUMPI PUSH2 0x788 PUSH2 0x741 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7C2 JUMPI PUSH2 0x7C2 PUSH2 0x741 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 DUP7 SWAP16 PUSH32 0x501811CC14E5A2031BF1C8E8B2943A478D9143BDD4167045FF67C0D564736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "732:3539:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2740:351;;;:::i;:::-;;;179:14:1;;172:22;154:41;;142:2;127:18;2740:351:0;;;;;;;;1987:741;;;;;;:::i;:::-;;:::i;849:22::-;;;;;-1:-1:-1;;;;;849:22:0;;;;;;-1:-1:-1;;;;;555:32:1;;;537:51;;525:2;510:18;849:22:0;391:203:1;3105:691:0;;;:::i;3804:282::-;;;:::i;:::-;;;745:25:1;;;733:2;718:18;3804:282:0;599:177:1;4097:171:0;4195:10;4144:4;4186:20;;;:8;:20;;;;;:39;;;4097:171;;793:17;;;;;;1287:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:25:1;;;1415:2;1400:18;;1393:34;;;;1443:18;;;1436:34;;;;1501:2;1486:18;;1479:34;1544:3;1529:19;;1522:35;1588:3;1573:19;;1566:35;1346:3;1331:19;1287:40:0;1072:535:1;912:20:0;;;;;-1:-1:-1;;;;;912:20:0;;;1887:92;;;;;;:::i;:::-;;:::i;:::-;;878:27;;;;;;817:25;;;;;-1:-1:-1;;;;;817:25:0;;;2740:351;2801:10;;2822;2777:4;2834:20;;;:8;:20;;;;;;:32;2794:73;;-1:-1:-1;;;2794:73:0;;;;;1786:51:1;;;;1853:18;;;1846:34;2777:4:0;-1:-1:-1;;;;;2801:10:0;;2794:27;;1759:18:1;;2794:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2895:10:0;2907:20;;;;:8;:20;;;;;;;;;:32;2886:54;;745:25:1;;;2886:54:0;;718:18:1;2886:54:0;;;;;;;2989:10;2980:20;;;;:8;:20;;;;;:32;2965:11;:47;;2980:32;;2965:11;;:47;;2980:32;;2965:47;:::i;:::-;;;;-1:-1:-1;;3032:10:0;3058:1;3023:20;;;:8;:20;;;;;:36;-1:-1:-1;3079:4:0;;2740:351::o;1987:741::-;2057:10;;2050:67;;-1:-1:-1;;;2050:67:0;;2082:10;2050:67;;;2675:34:1;2102:4:0;2725:18:1;;;2718:43;2777:18;;;2770:34;;;2032:4:0;;-1:-1:-1;;;;;2057:10:0;;2050:31;;2610:18:1;;2050:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2135:43:0;;745:25:1;;;2163:4:0;;2143:10;;2135:43;;733:2:1;718:18;2135:43:0;;;;;;;2270:11;;2237:10;2228:20;;;;:8;:20;;;;;:32;:39;;2263:4;2228:39;:::i;:::-;:53;;;;:::i;:::-;2198:10;2189:20;;;;:8;:20;;;;;;;:36;:92;;;2433:5;2442:4;;2394:44;;2433:5;2394:44;:::i;:::-;2362:10;2353:20;;;;:8;:20;;;;;:36;;;2335:54;;:15;:54;:::i;:::-;2334:105;;;;:::i;:::-;:112;;;;:::i;:::-;2301:10;2292:20;;;;:8;:20;;;;;:39;;;:154;;;;2457:43;;2493:7;;2292:20;;2457:43;;2493:7;;2457:43;:::i;:::-;;;;-1:-1:-1;;2528:10:0;2519:20;;;;:8;:20;;;;;2558:15;2519:36;;;;:54;2584:11;:22;;2599:7;;2519:20;2584:22;;2599:7;;2584:22;:::i;:::-;;;;-1:-1:-1;;2667:10:0;2658:20;;;;:8;:20;;;;;:36;;;;;2617:38;;;;:77;;;;2658:36;1987:741;-1:-1:-1;;1987:741:0:o;3105:691::-;3140:4;3426:5;;3396:10;3387:20;;:8;:20;;;;;;;:36;;3436:4;;3387:44;;;:::i;:::-;3386:54;;;;:::i;:::-;3354:10;3345:20;;;;:8;:20;;;;;:36;;;3327:54;;:15;:54;:::i;:::-;3326:115;;;;:::i;:::-;3293:10;3284:20;;;;:8;:20;;;;;:39;;;:157;;;;:::i;:::-;3258:10;3249:20;;;;:8;:20;;;;;;;:32;;:192;;;3459:7;;3452:70;;-1:-1:-1;;;3452:70:0;;;;;1786:51:1;;;;1853:18;;;1846:34;;;;-1:-1:-1;;;;;3459:7:0;;;;3452:24;;1759:18:1;;3452:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3550:10:0;3562:20;;;;:8;:20;;;;;;;;;:32;;;3541:54;;745:25:1;;;3541:54:0;;718:18:1;3541:54:0;;;;;;;-1:-1:-1;3617:10:0;3643:1;3608:20;;;:8;:20;;;;;:32;;;:36;;;3655:39;;;:43;;;;3750:15;3709:38;;;;:56;-1:-1:-1;;3105:691:0:o;3804:282::-;3911:10;3852:4;3902:20;;;:8;:20;;;;;:38;;;3852:4;;3884:56;;:15;:56;:::i;:::-;3953:22;4029:5;;3999:10;3990:20;;:8;:20;;;;;;;:36;;3869:71;;-1:-1:-1;3953:22:0;;4038:4;;3990:44;;;:::i;:::-;3989:53;;;;:::i;:::-;3978:65;;:7;:65;:::i;:::-;3953:90;3804:282;-1:-1:-1;;;3804:282:0:o;1887:92::-;1736:5;;-1:-1:-1;;;;;1736:5:0;1722:10;:19;1714:42;;;;-1:-1:-1;;;1714:42:0;;3545:2:1;1714:42:0;;;3527:21:1;3584:1;3564:18;;;3557:29;-1:-1:-1;;;3602:18:1;;;3595:39;3651:18;;1714:42:0;;;;;;;;1952:5:::1;:14:::0;1887:92::o;206:180:1:-;265:6;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;-1:-1:-1;357:23:1;;206:180;-1:-1:-1;206:180:1:o;781:286::-;840:6;893:2;881:9;872:7;868:23;864:32;861:52;;;909:1;906;899:12;861:52;935:23;;-1:-1:-1;;;;;987:31:1;;977:42;;967:70;;1033:1;1030;1023:12;1891:277;1958:6;2011:2;1999:9;1990:7;1986:23;1982:32;1979:52;;;2027:1;2024;2017:12;1979:52;2059:9;2053:16;2112:5;2105:13;2098:21;2091:5;2088:32;2078:60;;2134:1;2131;2124:12;2173:127;2234:10;2229:3;2225:20;2222:1;2215:31;2265:4;2262:1;2255:15;2289:4;2286:1;2279:15;2305:125;2345:4;2373:1;2370;2367:8;2364:34;;;2378:18;;:::i;:::-;-1:-1:-1;2415:9:1;;2305:125::o;2815:168::-;2855:7;2921:1;2917;2913:6;2909:14;2906:1;2903:21;2898:1;2891:9;2884:17;2880:45;2877:71;;;2928:18;;:::i;:::-;-1:-1:-1;2968:9:1;;2815:168::o;2988:217::-;3028:1;3054;3044:132;;3098:10;3093:3;3089:20;3086:1;3079:31;3133:4;3130:1;3123:15;3161:4;3158:1;3151:15;3044:132;-1:-1:-1;3190:9:1;;2988:217::o;3210:128::-;3250:3;3281:1;3277:6;3274:1;3271:13;3268:39;;;3287:18;;:::i;:::-;-1:-1:-1;3323:9:1;;3210:128::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "409000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Stake(uint256)": "infinite",
								"User_Map(address)": "13180",
								"harvest()": "infinite",
								"lastTotokenRatio()": "2477",
								"newTotokenRatio()": "infinite",
								"owner()": "2381",
								"ratio()": "2295",
								"setRatio(uint256)": "24530",
								"stakeSupple()": "2383",
								"staketoken()": "2447",
								"totoken()": "2382",
								"withDraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 732,
									"end": 4271,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 904,
									"end": 905,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 878,
									"end": 905,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 878,
									"end": 905,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1336,
									"end": 1674,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1336,
									"end": 1674,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1399,
									"end": 1404,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1399,
									"end": 1417,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1399,
									"end": 1417,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1399,
									"end": 1417,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1407,
									"end": 1417,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1399,
									"end": 1417,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1399,
									"end": 1417,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1399,
									"end": 1417,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1436,
									"end": 1461,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1436,
									"end": 1461,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 747,
									"end": 793,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 810,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1428,
									"end": 1481,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1500,
									"end": 1522,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1500,
									"end": 1522,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 747,
									"end": 793,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 810,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 494,
									"end": 834,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1492,
									"end": 1542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1561,
									"end": 1584,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1561,
									"end": 1572,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1561,
									"end": 1584,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1561,
									"end": 1584,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1044,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 1083,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "13915151081859DC99595B595B9D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "92"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1136,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1171,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1153,
									"end": 1171,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1553,
									"end": 1602,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1613,
									"end": 1623,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1655,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 4271,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f869f7f501811cc14e5a2031bf1c8e8b2943a478d9143bdd4167045ff67c0d564736f6c634300080f0033",
									".code": [
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "8C93ECFF"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "B2237BA3"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "D942727F"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "DAB2997B"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "FDB1C10"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "227A473B"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "2C46502D"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "4641257D"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "529ACA49"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "5E9F4435"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 4271,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2740,
											"end": 3091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1987,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1987,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 849,
											"end": 871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 537,
											"end": 588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 537,
											"end": 588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 391,
											"end": 594,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3796,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3105,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3105,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3105,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3105,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3804,
											"end": 4086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 599,
											"end": 776,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4268,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4097,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4205,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4186,
											"end": 4206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4186,
											"end": 4206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4186,
											"end": 4194,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4186,
											"end": 4206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4186,
											"end": 4206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4186,
											"end": 4206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4186,
											"end": 4206,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4186,
											"end": 4225,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4186,
											"end": 4225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4186,
											"end": 4225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4097,
											"end": 4268,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1287,
											"end": 1327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1384,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1384,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1427,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1427,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1529,
											"end": 1548,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1591,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1349,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 1331,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1072,
											"end": 1607,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 932,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 912,
											"end": 932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 912,
											"end": 932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 912,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 912,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 912,
											"end": 932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 912,
											"end": 932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 932,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1887,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1887,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 905,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 878,
											"end": 905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 878,
											"end": 905,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 878,
											"end": 905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 905,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 817,
											"end": 842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2740,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2801,
											"end": 2811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 2811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2794,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2794,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2905,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2886,
											"end": 2940,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 2999,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2976,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2965,
											"end": 3012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3012,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2965,
											"end": 3012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2965,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3012,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2965,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3012,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3059,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3079,
											"end": 3083,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3079,
											"end": 3083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 3091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2057,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2057,
											"end": 2067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2106,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2057,
											"end": 2067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2057,
											"end": 2067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2050,
											"end": 2081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2050,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2167,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C"
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2178,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2281,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2270,
											"end": 2281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2228,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 2228,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2228,
											"end": 2267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2267,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2228,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2228,
											"end": 2281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2228,
											"end": 2281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2281,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2228,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2208,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2209,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2281,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2394,
											"end": 2438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2394,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2438,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2394,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2372,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2361,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2353,
											"end": 2389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2335,
											"end": 2389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2350,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2335,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2389,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2335,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2334,
											"end": 2439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2334,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2439,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2334,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2334,
											"end": 2446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2334,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2446,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2334,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2311,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2300,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2331,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2292,
											"end": 2331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2446,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2446,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2446,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2457,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2528,
											"end": 2538,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2527,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2573,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2573,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2595,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2584,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2667,
											"end": 2677,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2694,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2658,
											"end": 2694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2694,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2655,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2617,
											"end": 2655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2655,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2694,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1987,
											"end": 2728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3105,
											"end": 3796,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3105,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3406,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3395,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3440,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 3436,
											"end": 3440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3387,
											"end": 3431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3387,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3431,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3387,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3386,
											"end": 3440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3386,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3440,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3386,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3364,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3353,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3345,
											"end": 3381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3327,
											"end": 3381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3327,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3381,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3327,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3326,
											"end": 3441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3326,
											"end": 3441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3441,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3326,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3303,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3284,
											"end": 3304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3284,
											"end": 3304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3304,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3323,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3284,
											"end": 3323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3323,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3284,
											"end": 3441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3284,
											"end": 3441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3441,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3284,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3269,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3281,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3249,
											"end": 3281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3441,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3441,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3459,
											"end": 3466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3452,
											"end": 3476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3452,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3452,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3550,
											"end": 3560,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3570,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3594,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3562,
											"end": 3594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3595,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3617,
											"end": 3627,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3640,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3608,
											"end": 3640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3644,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3694,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3655,
											"end": 3694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3709,
											"end": 3747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3765,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3105,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3921,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 3910,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3884,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3884,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3884,
											"end": 3899,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3884,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3884,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3884,
											"end": 3940,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3884,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4029,
											"end": 4034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 3998,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3990,
											"end": 4010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4010,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3940,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3940,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3953,
											"end": 3975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4042,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 4038,
											"end": 4042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3990,
											"end": 4034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3990,
											"end": 4034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4034,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3990,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3989,
											"end": 4042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3989,
											"end": 4042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4042,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3989,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3978,
											"end": 4043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 3985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3978,
											"end": 4043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4043,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3978,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 4043,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4086,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3804,
											"end": 4086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1887,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1732,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3547,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3651,
											"end": 3669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1714,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1966,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 206,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 265,
											"end": 271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 293,
											"end": 316,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 289,
											"end": 321,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 286,
											"end": 338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 286,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 286,
											"end": 338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 334,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 324,
											"end": 336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 286,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 286,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 357,
											"end": 380,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 206,
											"end": 386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 206,
											"end": 386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 868,
											"end": 891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 935,
											"end": 958,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1035,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1891,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2014,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2029,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2069,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2078,
											"end": 2138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2300,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2173,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2229,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2225,
											"end": 2245,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2262,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2255,
											"end": 2270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2286,
											"end": 2287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2305,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2375,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2364,
											"end": 2398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2378,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2983,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2815,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2924,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2901,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2925,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2877,
											"end": 2948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2928,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3205,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2988,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3044,
											"end": 3176,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3098,
											"end": 3108,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3093,
											"end": 3096,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3123,
											"end": 3138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3158,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3176,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3044,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3338,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3210,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3268,
											"end": 3307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3287,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"写个百分比矿池.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Stake(uint256)": "227a473b",
							"User_Map(address)": "8c93ecff",
							"harvest()": "4641257d",
							"lastTotokenRatio()": "5e9f4435",
							"newTotokenRatio()": "529aca49",
							"owner()": "8da5cb5b",
							"ratio()": "71ca337d",
							"setRatio(uint256)": "b2237ba3",
							"stakeSupple()": "d942727f",
							"staketoken()": "dab2997b",
							"totoken()": "2c46502d",
							"withDraw()": "0fdb1c10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staketoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_totoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"User_Map\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_Stake_Time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"whole_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_Time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_proportion\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTotokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newTotokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeSupple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staketoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5199\\u4e2a\\u767e\\u5206\\u6bd4\\u77ff\\u6c60.sol\":\"StakeContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5199\\u4e2a\\u767e\\u5206\\u6bd4\\u77ff\\u6c60.sol\":{\"keccak256\":\"0x62600900d0a7229259ee787809831cde443ff7989f9b0c2db00c3432e0566576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc9952dda58872bc61dfbb674d8e07fdca3d1ead326370817ffc604b2ebd255\",\"dweb:/ipfs/QmeUjTgQ44rVunSkJCETVZJHbnY4Pv3R3rpTNonp2yqA3A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "写个百分比矿池.sol:StakeContract",
								"label": "ratio",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 72,
								"contract": "写个百分比矿池.sol:StakeContract",
								"label": "staketoken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 74,
								"contract": "写个百分比矿池.sol:StakeContract",
								"label": "totoken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 77,
								"contract": "写个百分比矿池.sol:StakeContract",
								"label": "stakeSupple",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 79,
								"contract": "写个百分比矿池.sol:StakeContract",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 111,
								"contract": "写个百分比矿池.sol:StakeContract",
								"label": "User_Map",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(User)106_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)106_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakeContract.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)106_storage"
							},
							"t_struct(User)106_storage": {
								"encoding": "inplace",
								"label": "struct StakeContract.User",
								"members": [
									{
										"astId": 95,
										"contract": "写个百分比矿池.sol:StakeContract",
										"label": "stakeNumber",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 97,
										"contract": "写个百分比矿池.sol:StakeContract",
										"label": "last_Stake_Time",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 99,
										"contract": "写个百分比矿池.sol:StakeContract",
										"label": "last_totoken_ratio",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 101,
										"contract": "写个百分比矿池.sol:StakeContract",
										"label": "whole_ratio",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 103,
										"contract": "写个百分比矿池.sol:StakeContract",
										"label": "last_totoken_Time",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 105,
										"contract": "写个百分比矿池.sol:StakeContract",
										"label": "user_proportion",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"写个百分比矿池.sol": {
				"ast": {
					"absolutePath": "写个百分比矿池.sol",
					"exportedSymbols": {
						"IERC20": [
							68
						],
						"StakeContract": [
							481
						]
					},
					"id": 482,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nameLocation": "78:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "101:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:6:0"
									},
									"scope": 68,
									"src": "92:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "161:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "211:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:6:0"
									},
									"scope": 68,
									"src": "152:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "234:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "251:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "243:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "262:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:31:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "292:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:0"
									},
									"scope": 68,
									"src": "225:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "315:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "333:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "325:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:32:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "380:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:6:0"
									},
									"scope": 68,
									"src": "306:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "403:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "433:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "428:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:29:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "458:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "458:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:6:0"
									},
									"scope": 68,
									"src": "394:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "481:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "502:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "494:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "518:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "510:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "529:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:47:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:6:0"
									},
									"scope": 68,
									"src": "472:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 59,
									"name": "Trasfer",
									"nameLocation": "579:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "603:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "587:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "625:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "609:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "629:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:54:0"
									},
									"src": "573:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 67,
									"name": "Approveal",
									"nameLocation": "653:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "663:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "686:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "716:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "711:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:60:0"
									},
									"src": "647:76:0"
								}
							],
							"scope": 482,
							"src": "68:660:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakeContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 481,
							"linearizedBaseContracts": [
								481
							],
							"name": "StakeContract",
							"nameLocation": "741:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "71ca337d",
									"id": 70,
									"mutability": "mutable",
									"name": "ratio",
									"nameLocation": "805:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 481,
									"src": "793:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 69,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "793:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dab2997b",
									"id": 72,
									"mutability": "mutable",
									"name": "staketoken",
									"nameLocation": "832:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 481,
									"src": "817:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "817:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c46502d",
									"id": 74,
									"mutability": "mutable",
									"name": "totoken",
									"nameLocation": "864:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 481,
									"src": "849:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "849:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d942727f",
									"id": 77,
									"mutability": "mutable",
									"name": "stakeSupple",
									"nameLocation": "890:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 481,
									"src": "878:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 75,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "878:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 76,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "904:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 79,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "927:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 481,
									"src": "912:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 78,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "912:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 87,
									"name": "Trasfer",
									"nameLocation": "953:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "961:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "983:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1008:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1003:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1003:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:54:0"
									},
									"src": "947:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
									"id": 93,
									"name": "transfer",
									"nameLocation": "1027:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1052:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1036:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1061:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1056:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1035:32:0"
									},
									"src": "1021:47:0"
								},
								{
									"canonicalName": "StakeContract.User",
									"id": 106,
									"members": [
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "stakeNumber",
											"nameLocation": "1104:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "1099:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 94,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1099:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 97,
											"mutability": "mutable",
											"name": "last_Stake_Time",
											"nameLocation": "1131:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "1126:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 96,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1126:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 99,
											"mutability": "mutable",
											"name": "last_totoken_ratio",
											"nameLocation": "1162:18:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "1157:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 98,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1157:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 101,
											"mutability": "mutable",
											"name": "whole_ratio",
											"nameLocation": "1196:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "1191:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 100,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1191:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 103,
											"mutability": "mutable",
											"name": "last_totoken_Time",
											"nameLocation": "1223:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "1218:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 102,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1218:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 105,
											"mutability": "mutable",
											"name": "user_proportion",
											"nameLocation": "1256:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "1251:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 104,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1251:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "1083:4:0",
									"nodeType": "StructDefinition",
									"scope": 481,
									"src": "1076:203:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c93ecff",
									"id": 111,
									"mutability": "mutable",
									"name": "User_Map",
									"nameLocation": "1319:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 481,
									"src": "1287:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
										"typeString": "mapping(address => struct StakeContract.User)"
									},
									"typeName": {
										"id": 110,
										"keyType": {
											"id": 107,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1295:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1287:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
											"typeString": "mapping(address => struct StakeContract.User)"
										},
										"valueType": {
											"id": 109,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 108,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 106,
												"src": "1306:4:0"
											},
											"referencedDeclaration": 106,
											"src": "1306:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$106_storage_ptr",
												"typeString": "struct StakeContract.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "1388:286:0",
										"statements": [
											{
												"expression": {
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1399:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 119,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1407:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1407:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1399:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1399:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1436:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1451:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 125,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1451:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1451:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1436:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1462:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1428:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1428:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 134,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1500:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1520:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1512:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 135,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1512:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1512:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1500:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1492:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1492:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1561:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 145,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1576:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1561:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4545442061677265656d656e74",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1585:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															},
															"value": "NEED agreement"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1553:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1553:49:0"
											},
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1613:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 151,
														"name": "_staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "1626:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1613:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1613:24:0"
											},
											{
												"expression": {
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 154,
														"name": "totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1648:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 155,
														"name": "_totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1658:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1648:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "1648:18:0"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "_staketoken",
												"nameLocation": "1357:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1349:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "_totoken",
												"nameLocation": "1378:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1370:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1348:39:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1388:0:0"
									},
									"scope": 481,
									"src": "1336:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1703:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 162,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1722:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1722:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 164,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1736:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1722:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1744:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1714:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1714:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "1714:42:0"
											},
											{
												"id": 169,
												"nodeType": "PlaceholderStatement",
												"src": "1767:1:0"
											}
										]
									},
									"id": 171,
									"name": "onlyOwner",
									"nameLocation": "1691:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1700:2:0"
									},
									"src": "1682:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1937:42:0",
										"statements": [
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1952:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 179,
														"name": "_ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1960:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1952:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1952:14:0"
											}
										]
									},
									"functionSelector": "b2237ba3",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 176,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 175,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 171,
												"src": "1927:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1927:9:0"
										}
									],
									"name": "setRatio",
									"nameLocation": "1896:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "1910:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1905:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:13:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1937:0:0"
									},
									"scope": 481,
									"src": "1887:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "2037:691:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 194,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2082:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2082:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 198,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2102:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$481",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$481",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2094:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 196,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2094:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2094:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 200,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2109:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 191,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2057:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2050:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2050:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "2050:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "2050:67:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2143:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2143:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 208,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2163:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$481",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$481",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2155:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 206,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2155:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2155:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 210,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2170:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 203,
														"name": "Trasfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "2135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "EmitStatement",
												"src": "2130:48:0"
											},
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 213,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2189:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 216,
															"indexExpression": {
																"expression": {
																	"id": 214,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2198:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2198:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2189:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "user_proportion",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 105,
														"src": "2189:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 218,
																		"name": "User_Map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "2228:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																			"typeString": "mapping(address => struct StakeContract.User storage ref)"
																		}
																	},
																	"id": 221,
																	"indexExpression": {
																		"expression": {
																			"id": 219,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2237:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2237:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2228:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$106_storage",
																		"typeString": "struct StakeContract.User storage ref"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakeNumber",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 95,
																"src": "2228:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2263:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "2228:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 225,
															"name": "stakeSupple",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "2270:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2228:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2189:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "2189:92:0"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 229,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2292:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 232,
															"indexExpression": {
																"expression": {
																	"id": 230,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2301:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2301:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2292:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 99,
														"src": "2292:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 234,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2335:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2335:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 236,
																					"name": "User_Map",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 111,
																					"src": "2353:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																						"typeString": "mapping(address => struct StakeContract.User storage ref)"
																					}
																				},
																				"id": 239,
																				"indexExpression": {
																					"expression": {
																						"id": 237,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2362:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 238,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2362:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2353:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$106_storage",
																					"typeString": "struct StakeContract.User storage ref"
																				}
																			},
																			"id": 240,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "last_Stake_Time",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 97,
																			"src": "2353:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2335:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 242,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2334:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 243,
																					"name": "User_Map",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 111,
																					"src": "2394:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																						"typeString": "mapping(address => struct StakeContract.User storage ref)"
																					}
																				},
																				"id": 246,
																				"indexExpression": {
																					"expression": {
																						"id": 244,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2403:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 245,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2403:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2394:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$106_storage",
																					"typeString": "struct StakeContract.User storage ref"
																				}
																			},
																			"id": 247,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "user_proportion",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 105,
																			"src": "2394:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 248,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "2433:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2394:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 250,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2393:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2334:105:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2442:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "2334:112:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2292:154:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "2292:154:0"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 256,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2457:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 259,
															"indexExpression": {
																"expression": {
																	"id": 257,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2466:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2466:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2457:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "2457:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 261,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "2493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2457:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2457:43:0"
											},
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 264,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2519:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 267,
															"indexExpression": {
																"expression": {
																	"id": 265,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2528:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2528:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2519:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 97,
														"src": "2519:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 269,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2558:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2558:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2519:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "2519:54:0"
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 273,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2584:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 274,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "2599:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2584:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2584:22:0"
											},
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 277,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2617:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 280,
															"indexExpression": {
																"expression": {
																	"id": 278,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2626:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2626:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2617:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "2617:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 282,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2658:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 285,
															"indexExpression": {
																"expression": {
																	"id": 283,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2667:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2667:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2658:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 97,
														"src": "2658:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2617:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2617:77:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 189,
												"id": 290,
												"nodeType": "Return",
												"src": "2705:11:0"
											}
										]
									},
									"functionSelector": "227a473b",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Stake",
									"nameLocation": "1996:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2007:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "2002:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2002:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:14:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "2032:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2032:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:6:0"
									},
									"scope": 481,
									"src": "1987:741:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "2783:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 301,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2822:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2822:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 303,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "2834:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 306,
																"indexExpression": {
																	"expression": {
																		"id": 304,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2843:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2843:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2834:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$106_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "2834:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 298,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2801:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 297,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2794:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "2794:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "2794:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 311,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2895:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2895:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 313,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "2907:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 316,
																"indexExpression": {
																	"expression": {
																		"id": 314,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2916:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2916:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2907:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$106_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "2907:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 310,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "2886:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2886:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "EmitStatement",
												"src": "2881:59:0"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 320,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2965:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 321,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2980:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 324,
															"indexExpression": {
																"expression": {
																	"id": 322,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2989:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2989:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2980:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "2980:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2965:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2965:47:0"
											},
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 328,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "3023:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 331,
															"indexExpression": {
																"expression": {
																	"id": 329,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3032:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3032:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3023:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "3023:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3023:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "3023:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 296,
												"id": 337,
												"nodeType": "Return",
												"src": "3072:11:0"
											}
										]
									},
									"functionSelector": "0fdb1c10",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withDraw",
									"nameLocation": "2749:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:2:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "2777:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2777:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2776:6:0"
									},
									"scope": 481,
									"src": "2740:351:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "3146:650:0",
										"statements": [
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 344,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "3249:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 347,
															"indexExpression": {
																"expression": {
																	"id": 345,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3258:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3249:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 101,
														"src": "3249:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 349,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "3284:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 352,
																"indexExpression": {
																	"expression": {
																		"id": 350,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3293:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3293:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3284:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$106_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "last_totoken_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 99,
															"src": "3284:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 354,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3327:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3327:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 356,
																					"name": "User_Map",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 111,
																					"src": "3345:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																						"typeString": "mapping(address => struct StakeContract.User storage ref)"
																					}
																				},
																				"id": 359,
																				"indexExpression": {
																					"expression": {
																						"id": 357,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3354:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 358,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3354:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3345:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$106_storage",
																					"typeString": "struct StakeContract.User storage ref"
																				}
																			},
																			"id": 360,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "last_Stake_Time",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 97,
																			"src": "3345:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3327:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3326:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 369,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 363,
																								"name": "User_Map",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 111,
																								"src": "3387:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																									"typeString": "mapping(address => struct StakeContract.User storage ref)"
																								}
																							},
																							"id": 366,
																							"indexExpression": {
																								"expression": {
																									"id": 364,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "3396:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 365,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "3396:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3387:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$106_storage",
																								"typeString": "struct StakeContract.User storage ref"
																							}
																						},
																						"id": 367,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "user_proportion",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 105,
																						"src": "3387:36:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 368,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 70,
																						"src": "3426:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3387:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 370,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3386:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3436:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "3386:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 373,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3385:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3326:115:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3284:157:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3249:192:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "3249:192:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 382,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3477:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3477:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 384,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "3489:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 387,
																"indexExpression": {
																	"expression": {
																		"id": 385,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3498:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3498:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3489:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$106_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 101,
															"src": "3489:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 379,
																	"name": "totoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "3459:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 378,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "3452:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3452:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3452:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3452:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "3452:70:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 392,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3550:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3550:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 394,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "3562:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 397,
																"indexExpression": {
																	"expression": {
																		"id": 395,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3571:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3571:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3562:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$106_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 101,
															"src": "3562:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 391,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "3541:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3541:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "EmitStatement",
												"src": "3536:59:0"
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 401,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "3608:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 404,
															"indexExpression": {
																"expression": {
																	"id": 402,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3617:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3617:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3608:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 101,
														"src": "3608:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3643:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3608:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "3608:36:0"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 409,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "3655:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 412,
															"indexExpression": {
																"expression": {
																	"id": 410,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3664:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3664:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3655:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 99,
														"src": "3655:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3697:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3655:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "3655:43:0"
											},
											{
												"expression": {
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 417,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "3709:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 420,
															"indexExpression": {
																"expression": {
																	"id": 418,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3718:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3718:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3709:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "3709:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 422,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3750:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3750:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3709:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "3709:56:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3784:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 343,
												"id": 427,
												"nodeType": "Return",
												"src": "3777:11:0"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "3114:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "3140:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3139:6:0"
									},
									"scope": 481,
									"src": "3105:691:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "3858:228:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "newtime",
														"nameLocation": "3874:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "3869:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 434,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3869:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 436,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3884:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3884:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 438,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "3902:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 441,
															"indexExpression": {
																"expression": {
																	"id": 439,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3911:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3911:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3902:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$106_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "3902:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3884:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3869:71:0"
											},
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "newTotokenRatione",
														"nameLocation": "3958:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "3953:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 445,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "newtime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "3978:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 448,
																						"name": "User_Map",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 111,
																						"src": "3990:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																							"typeString": "mapping(address => struct StakeContract.User storage ref)"
																						}
																					},
																					"id": 451,
																					"indexExpression": {
																						"expression": {
																							"id": 449,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "3999:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "3999:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3990:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$106_storage",
																						"typeString": "struct StakeContract.User storage ref"
																					}
																				},
																				"id": 452,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "user_proportion",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 105,
																				"src": "3990:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 453,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 70,
																				"src": "4029:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3990:44:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 455,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3989:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4038:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "3989:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 458,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3988:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3978:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3953:90:0"
											},
											{
												"expression": {
													"id": 461,
													"name": "newTotokenRatione",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 446,
													"src": "4061:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 462,
												"nodeType": "Return",
												"src": "4054:24:0"
											}
										]
									},
									"functionSelector": "529aca49",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "newTotokenRatio",
									"nameLocation": "3813:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3828:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3852:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3851:6:0"
									},
									"scope": 481,
									"src": "3804:282:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "4150:118:0",
										"statements": [
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "_lastTotokenRatio",
														"nameLocation": "4166:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "4161:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 469,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4161:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 476,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 471,
															"name": "User_Map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "4186:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$106_storage_$",
																"typeString": "mapping(address => struct StakeContract.User storage ref)"
															}
														},
														"id": 474,
														"indexExpression": {
															"expression": {
																"id": 472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4195:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4195:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4186:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$106_storage",
															"typeString": "struct StakeContract.User storage ref"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "last_totoken_ratio",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 99,
													"src": "4186:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4161:64:0"
											},
											{
												"expression": {
													"id": 477,
													"name": "_lastTotokenRatio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 470,
													"src": "4243:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 468,
												"id": 478,
												"nodeType": "Return",
												"src": "4236:24:0"
											}
										]
									},
									"functionSelector": "5e9f4435",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTotokenRatio",
									"nameLocation": "4106:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4122:2:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4144:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4144:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4143:6:0"
									},
									"scope": 481,
									"src": "4097:171:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 482,
							"src": "732:3539:0",
							"usedErrors": []
						}
					],
					"src": "38:4239:0"
				},
				"id": 0
			}
		}
	}
}