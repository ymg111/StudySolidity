{
	"id": "f08cf32d498ae52c26f540c224fda4ac",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"自己写个矿池,定息矿池.sol": {
				"content": " // SPDX-License-Identifier: MIT  \r\n\r\npragma solidity ^0.8.7;  \r\n \r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint);\r\n\r\n    function balanceOf(address account) external view returns (uint);\r\n\r\n    function transfer(address recipient, uint amout) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint amout) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint amout) external returns (bool);\r\n\r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n\r\n}\r\n\r\ncontract StakeContract {\r\n    // uint public stakeTime;\r\n    uint public ratio;\r\n    address public staketoken;\r\n    address public totoken;\r\n    uint public stakeSupple;\r\n    address public owner;\r\n    \r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n    event transfer(address indexed to, uint amout);\r\n\r\n    struct User {\r\n        uint stakeNumber;\r\n        uint last_Stake_Time;\r\n        uint last_totoken_ratio;\r\n        uint whole_ratio;\r\n        uint last_totoken_Time;\r\n    }\r\n\r\n    mapping(address => User) public User_Map;\r\n\r\n    constructor (address _staketoken, address _totoken) {\r\n        owner = msg.sender;\r\n        require(_staketoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_totoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_staketoken == _totoken,\"NEED agreement\");\r\n        staketoken = _staketoken;\r\n        totoken = _totoken;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner , \"not owner\");\r\n        _;\r\n    }\r\n\r\n    // function getStakeTime() public view returns (uint) {\r\n    //     return stakeTime;\r\n    // }\r\n\r\n    function setRatio(uint _ratio) external onlyOwner {    \r\n        ratio = _ratio;     \r\n    }\r\n\r\n    function Stake(uint _amount) public returns (bool){\r\n\r\n        IERC20(staketoken).transferFrom(msg.sender, address(this), _amount); \r\n\r\n        emit Trasfer(msg.sender, address(this), _amount);\r\n\r\n        User_Map[msg.sender].last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000)  ;\r\n        User_Map[msg.sender].stakeNumber += _amount;\r\n        User_Map[msg.sender].last_Stake_Time = block.timestamp;\r\n        stakeSupple += _amount;\r\n        User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time;\r\n        return true;  \r\n\r\n    }\r\n\r\n    function withDraw () public returns (bool) {\r\n        IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].stakeNumber);\r\n            \r\n        stakeSupple -= User_Map[msg.sender].stakeNumber;\r\n        User_Map[msg.sender].stakeNumber = 0;\r\n\r\n        return true;\r\n    }\r\n\r\n    function harvest() public returns (bool) {\r\n        User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n        IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].whole_ratio);\r\n\r\n        User_Map[msg.sender].whole_ratio = 0;\r\n        User_Map[msg.sender].last_totoken_ratio = 0;\r\n        User_Map[msg.sender].last_totoken_Time = block.timestamp;\r\n        return true;\r\n    }\r\n    \r\n    // function withDrawtwo (uint _amount) public returns (bool) {\r\n    //     require(_amount <= User_Map[msg.sender].stakeNumber, \"buzu\");\r\n    //     IERC20(staketoken).transfer(msg.sender, _amount); \r\n    //     User_Map[msg.sender].stakeNumber -= _amount;\r\n    //     stakeSupple -= _amount;\r\n    //     return true;\r\n    // }\r\n\r\n\r\n    function newTotokenRatio() public view returns (uint) {\r\n        uint newtime = block.timestamp - User_Map[msg.sender].last_totoken_Time;\r\n        uint newTotokenRatione = newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n        return newTotokenRatione;  \r\n    }\r\n\r\n    function lastTotokenRatio()public view returns(uint) {\r\n        uint _lastTotokenRatio = User_Map[msg.sender].last_totoken_ratio;\r\n        return _lastTotokenRatio;\r\n    }\r\n   \r\n\r\n    // function harvestwithDraw() public returns (bool) {\r\n    //     User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n    //     IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio); \r\n\r\n    //     emit transfer(msg.sender, User_Map[msg.sender].whole_ratio);\r\n\r\n    //     User_Map[msg.sender].whole_ratio = 0;\r\n    //     User_Map[msg.sender].last_totoken_ratio = 0;\r\n\r\n    //     IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber); \r\n\r\n    //     emit transfer(msg.sender, User_Map[msg.sender].stakeNumber);\r\n\r\n    //     User_Map[msg.sender].stakeNumber = 0;\r\n    //     stakeSupple -= User_Map[msg.sender].stakeNumber;\r\n    //     return true;\r\n    // }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"自己写个矿池,定息矿池.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":{\"keccak256\":\"0x62092331d2780b92ff3a3c99d2af87eaeb45c68ba0f83a683873808e03cf3aa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46a87d4b48695e0dccbd308481c022d789faa59518a88678cb46cf3c8cd69419\",\"dweb:/ipfs/QmYhvgtvvA15KgJ8k1Gg1rigwTj9T6uYNVz4mPoNVWEaBn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakeContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staketoken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_totoken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "User_Map",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakeNumber",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_Stake_Time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "whole_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_Time",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTotokenRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newTotokenRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								}
							],
							"name": "setRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeSupple",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "staketoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withDraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5319  contract StakeContract {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1381:1719  constructor (address _staketoken, address _totoken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1444:1449  owner */\n  0x04\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1444:1462  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1452:1462  msg.sender */\n  caller\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1444:1462  owner = msg.sender */\n  or\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1481:1506  _staketoken != address(0) */\n  dup3\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1473:1526  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1473:1526  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x10\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:793   */\n  mstore\n    /* \"#utility.yul\":810:828   */\n  0x64\n  add\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1473:1526  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1545:1567  _totoken != address(0) */\n  dup2\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1537:1587  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1537:1587  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x10\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:793   */\n  mstore\n    /* \"#utility.yul\":810:828   */\n  0x64\n  add\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1537:1587  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_7\n    /* \"#utility.yul\":494:834   */\n  jump\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1537:1587  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\ntag_9:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1621:1629  _totoken */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1606:1629  _staketoken == _totoken */\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1606:1617  _staketoken */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1606:1629  _staketoken == _totoken */\n  and\n  eq\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1598:1647  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1598:1647  require(_staketoken == _totoken,\"NEED agreement\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1023:1044   */\n  mstore\n    /* \"#utility.yul\":1080:1082   */\n  0x0e\n    /* \"#utility.yul\":1060:1078   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1053:1083   */\n  mstore\n  shl(0x92, 0x13915151081859dc99595b595b9d)\n    /* \"#utility.yul\":1099:1117   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1092:1136   */\n  mstore\n    /* \"#utility.yul\":1153:1171   */\n  0x64\n  add\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1598:1647  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_7\n    /* \"#utility.yul\":839:1177   */\n  jump\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1598:1647  require(_staketoken == _totoken,\"NEED agreement\") */\ntag_11:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1658:1668  staketoken */\n  0x01\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1658:1682  staketoken = _staketoken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1693:1700  totoken */\n  0x02\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1693:1711  totoken = _totoken */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5319  contract StakeContract {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_20:\n    /* \"#utility.yul\":375:415   */\n  tag_21\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_22\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":839:1177   */\ntag_16:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5319  contract StakeContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5319  contract StakeContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x71ca337d\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x71ca337d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8c93ecff\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb2237ba3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd942727f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdab2997b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x0fdb1c10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x227a473b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2c46502d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x529aca49\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5e9f4435\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2682:3033  function withDraw () public returns (bool) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2682:3033  function withDraw () public returns (bool) {... */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2032:2674  function Stake(uint _amount) public returns (bool){... */\n    tag_4:\n      tag_16\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":849:871  address public totoken */\n    tag_5:\n      sload(0x02)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":555:587   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":537:588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":525:527   */\n      0x20\n        /* \"#utility.yul\":510:528   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":849:871  address public totoken */\n      tag_18\n        /* \"#utility.yul\":391:594   */\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3041:3643  function harvest() public returns (bool) {... */\n    tag_6:\n      tag_16\n      tag_30\n      jump\t// in\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3992:4279  function newTotokenRatio() public view returns (uint) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":745:770   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3992:4279  function newTotokenRatio() public view returns (uint) {... */\n      tag_18\n        /* \"#utility.yul\":599:776   */\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4287:4458  function lastTotokenRatio()public view returns(uint) {... */\n    tag_8:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4385:4395  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4334:4338  uint */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4376:4396  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4376:4384  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4376:4396  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4376:4415  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4287:4458  function lastTotokenRatio()public view returns(uint) {... */\n      jump(tag_32)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":793:810  uint public ratio */\n    tag_9:\n      tag_32\n      sload(0x00)\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1332:1372  mapping(address => User) public User_Map */\n    tag_10:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      dup6\n      jump\n    tag_42:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1331:1356   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":1387:1389   */\n      0x20\n        /* \"#utility.yul\":1372:1390   */\n      dup7\n      add\n        /* \"#utility.yul\":1365:1399   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1415:1433   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":1408:1442   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1473:1475   */\n      0x60\n        /* \"#utility.yul\":1458:1476   */\n      dup4\n      add\n        /* \"#utility.yul\":1451:1485   */\n      mstore\n        /* \"#utility.yul\":1516:1519   */\n      0x80\n        /* \"#utility.yul\":1501:1520   */\n      dup3\n      add\n        /* \"#utility.yul\":1494:1529   */\n      mstore\n        /* \"#utility.yul\":1318:1321   */\n      0xa0\n        /* \"#utility.yul\":1303:1322   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1332:1372  mapping(address => User) public User_Map */\n      tag_18\n        /* \"#utility.yul\":1072:1535   */\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":908:928  address public owner */\n    tag_11:\n      sload(0x04)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1932:2024  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_12:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":878:901  uint public stakeSupple */\n    tag_13:\n      tag_32\n      sload(0x03)\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":817:842  address public staketoken */\n    tag_14:\n      sload(0x01)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2682:3033  function withDraw () public returns (bool) {... */\n    tag_17:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2743:2753  staketoken */\n      sload(0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2764:2774  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2719:2723  bool */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2776:2796  User_Map[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2776:2784  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2776:2796  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2776:2808  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2736:2809  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1714:1765   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":1781:1799   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":1774:1808   */\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2719:2723  bool */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2743:2753  staketoken */\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2736:2763  IERC20(staketoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1687:1705   */\n      0x44\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2736:2809  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2837:2847  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2849:2869  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2849:2857  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2849:2869  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2849:2881  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2828:2882  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap2\n      mload\n        /* \"#utility.yul\":745:770   */\n      swap2\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2828:2882  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n      swap2\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2828:2882  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2931:2941  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2922:2942  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2922:2930  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2922:2942  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2922:2954  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2918  stakeSupple */\n      0x03\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2954  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2922:2954  User_Map[msg.sender].stakeNumber */\n      swap2\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2918  stakeSupple */\n      swap1\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2954  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_68\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2922:2954  User_Map[msg.sender].stakeNumber */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2954  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_69\n      jump\t// in\n    tag_68:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2974:2984  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3000:3001  0 */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:2985  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:2973  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:2985  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:3001  User_Map[msg.sender].stakeNumber = 0 */\n      sstore\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3021:3025  true */\n      0x01\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2682:3033  function withDraw () public returns (bool) {... */\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2032:2674  function Stake(uint _amount) public returns (bool){... */\n    tag_23:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2102:2112  staketoken */\n      sload(0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2095:2162  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2127:2137  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2095:2162  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2603:2637   */\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2147:2151  this */\n      address\n        /* \"#utility.yul\":2653:2671   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2646:2689   */\n      mstore\n        /* \"#utility.yul\":2705:2723   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2698:2732   */\n      dup4\n      swap1\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2077:2081  bool */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2102:2112  staketoken */\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2095:2126  IERC20(staketoken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2538:2556   */\n      0x64\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2095:2162  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_75:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2181:2224  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":745:770   */\n      dup3\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2209:2213  this */\n      address\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2189:2199  msg.sender */\n      caller\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2181:2224  Trasfer(msg.sender, address(this), _amount) */\n      0x1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c\n      swap1\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2181:2224  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2375:2380  ratio */\n      0x00\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2349:2359  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2360  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2348  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2360  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2372  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2389:2397  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2382:2385  100 */\n      0x64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2380  User_Map[msg.sender].stakeNumber * ratio */\n      tag_77\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2375:2380  ratio */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2380  User_Map[msg.sender].stakeNumber * ratio */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2385  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2339:2397  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_81\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_81:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2307:2317  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2298:2318  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2298:2306  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2298:2318  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2298:2334  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2280:2334  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_82\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2280:2295  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2280:2334  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_69\n      jump\t// in\n    tag_82:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2279:2398  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_83\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_83:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2246:2256  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2257  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2245  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2257  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2276  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2398  User_Map[msg.sender].last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2454  User_Map[msg.sender].stakeNumber += _amount */\n      dup2\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2447:2454  _amount */\n      dup5\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2257  User_Map[msg.sender] */\n      swap2\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2454  User_Map[msg.sender].stakeNumber += _amount */\n      tag_84\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2447:2454  _amount */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2454  User_Map[msg.sender].stakeNumber += _amount */\n      tag_85\n      jump\t// in\n    tag_84:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2474:2484  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2485  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2473  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2485  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2504:2519  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2501  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2519  User_Map[msg.sender].last_Stake_Time = block.timestamp */\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2530:2541  stakeSupple */\n      0x03\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2530:2552  stakeSupple += _amount */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2545:2552  _amount */\n      dup5\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2485  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2530:2552  stakeSupple += _amount */\n      tag_86\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2545:2552  _amount */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2530:2552  stakeSupple += _amount */\n      tag_85\n      jump\t// in\n    tag_86:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2613:2623  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2604:2624  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2604:2612  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2604:2624  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2604:2640  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      dup1\n      dup3\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2563:2601  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      swap1\n      swap3\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2563:2640  User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2604:2640  User_Map[msg.sender].last_Stake_Time */\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2032:2674  function Stake(uint _amount) public returns (bool){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3041:3643  function harvest() public returns (bool) {... */\n    tag_30:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3076:3080  bool */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3266:3271  ratio */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3240:3250  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3251  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3239  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3251  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3263  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3280:3288  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3273:3276  100 */\n      0x64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3271  User_Map[msg.sender].stakeNumber * ratio */\n      tag_88\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3266:3271  ratio */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3271  User_Map[msg.sender].stakeNumber * ratio */\n      tag_78\n      jump\t// in\n    tag_88:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3276  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_89\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_89:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3230:3288  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_90\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_90:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3198:3208  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3189:3209  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3189:3197  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3189:3209  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3189:3225  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3171:3225  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_91\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3171:3186  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3171:3225  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_69\n      jump\t// in\n    tag_91:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3170:3289  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_92\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_92:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3137:3147  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3128:3148  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3128:3136  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3128:3148  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3128:3167  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3128:3289  User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_93\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_93:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3102:3112  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3093:3113  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3093:3101  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3093:3113  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3093:3125  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3093:3289  User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      dup4\n      swap1\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3307:3314  totoken */\n      sload(0x02)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3300:3370  IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1714:1765   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1781:1799   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1774:1808   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3307:3314  totoken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3300:3324  IERC20(totoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1687:1705   */\n      0x44\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3300:3370  IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_97:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3398:3408  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3410:3430  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3410:3418  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3410:3430  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3410:3442  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3389:3443  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap2\n      mload\n        /* \"#utility.yul\":745:770   */\n      swap2\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3389:3443  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n      swap2\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3389:3443  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3465:3475  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3491:3492  0 */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3456:3476  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3456:3464  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3456:3476  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3456:3488  User_Map[msg.sender].whole_ratio */\n      0x03\n      dup2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3456:3492  User_Map[msg.sender].whole_ratio = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3503:3542  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3503:3546  User_Map[msg.sender].last_totoken_ratio = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3598:3613  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3557:3595  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      swap1\n      swap2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3557:3613  User_Map[msg.sender].last_totoken_Time = block.timestamp */\n      sstore\n      0x01\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3041:3643  function harvest() public returns (bool) {... */\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3992:4279  function newTotokenRatio() public view returns (uint) {... */\n    tag_33:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4099:4109  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4040:4044  uint */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4110  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4098  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4110  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4128  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4040:4044  uint */\n      dup2\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4072:4128  block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      tag_100\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4072:4087  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4072:4128  block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      tag_69\n      jump\t// in\n    tag_100:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4139:4161  uint newTotokenRatione */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4211:4216  ratio */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4185:4195  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4196  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4184  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4196  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4208  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4057:4128  uint newtime = block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      swap3\n      swap4\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4139:4161  uint newTotokenRatione */\n      swap1\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4225:4233  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4218:4221  100 */\n      0x64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4216  User_Map[msg.sender].stakeNumber * ratio */\n      tag_101\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4211:4216  ratio */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4216  User_Map[msg.sender].stakeNumber * ratio */\n      tag_78\n      jump\t// in\n    tag_101:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4221  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_102\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_102:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4175:4233  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_103\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_103:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4164:4234  newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_104\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4164:4171  newtime */\n      dup4\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4164:4234  newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_78\n      jump\t// in\n    tag_104:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4139:4234  uint newTotokenRatione = newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      swap4\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3992:4279  function newTotokenRatio() public view returns (uint) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1932:2024  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_53:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1781:1786  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1767:1777  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1767:1786  msg.sender == owner */\n      eq\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1759:1801  require(msg.sender == owner , \"not owner\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3473:3475   */\n      0x20\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1759:1801  require(msg.sender == owner , \"not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3455:3476   */\n      mstore\n        /* \"#utility.yul\":3512:3513   */\n      0x09\n        /* \"#utility.yul\":3492:3510   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3485:3514   */\n      mstore\n      shl(0xb9, 0x3737ba1037bbb732b9)\n        /* \"#utility.yul\":3530:3548   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3523:3562   */\n      mstore\n        /* \"#utility.yul\":3579:3597   */\n      0x64\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1759:1801  require(msg.sender == owner , \"not owner\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1997:2002  ratio */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1997:2011  ratio = _ratio */\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1932:2024  function setRatio(uint _ratio) external onlyOwner {    ... */\n      jump\t// out\n        /* \"#utility.yul\":206:386   */\n    tag_22:\n        /* \"#utility.yul\":265:271   */\n      0x00\n        /* \"#utility.yul\":318:320   */\n      0x20\n        /* \"#utility.yul\":306:315   */\n      dup3\n        /* \"#utility.yul\":297:304   */\n      dup5\n        /* \"#utility.yul\":293:316   */\n      sub\n        /* \"#utility.yul\":289:321   */\n      slt\n        /* \"#utility.yul\":286:338   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":334:335   */\n      0x00\n        /* \"#utility.yul\":331:332   */\n      dup1\n        /* \"#utility.yul\":324:336   */\n      revert\n        /* \"#utility.yul\":286:338   */\n    tag_115:\n      pop\n        /* \"#utility.yul\":357:380   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":206:386   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1067   */\n    tag_44:\n        /* \"#utility.yul\":840:846   */\n      0x00\n        /* \"#utility.yul\":893:895   */\n      0x20\n        /* \"#utility.yul\":881:890   */\n      dup3\n        /* \"#utility.yul\":872:879   */\n      dup5\n        /* \"#utility.yul\":868:891   */\n      sub\n        /* \"#utility.yul\":864:896   */\n      slt\n        /* \"#utility.yul\":861:913   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      dup1\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":861:913   */\n    tag_119:\n        /* \"#utility.yul\":935:958   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":987:1018   */\n      dup2\n      and\n        /* \"#utility.yul\":977:1019   */\n      dup2\n      eq\n        /* \"#utility.yul\":967:1037   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1030:1031   */\n      dup1\n        /* \"#utility.yul\":1023:1035   */\n      revert\n        /* \"#utility.yul\":1819:2096   */\n    tag_66:\n        /* \"#utility.yul\":1886:1892   */\n      0x00\n        /* \"#utility.yul\":1939:1941   */\n      0x20\n        /* \"#utility.yul\":1927:1936   */\n      dup3\n        /* \"#utility.yul\":1918:1925   */\n      dup5\n        /* \"#utility.yul\":1914:1937   */\n      sub\n        /* \"#utility.yul\":1910:1942   */\n      slt\n        /* \"#utility.yul\":1907:1959   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":1955:1956   */\n      0x00\n        /* \"#utility.yul\":1952:1953   */\n      dup1\n        /* \"#utility.yul\":1945:1957   */\n      revert\n        /* \"#utility.yul\":1907:1959   */\n    tag_124:\n        /* \"#utility.yul\":1987:1996   */\n      dup2\n        /* \"#utility.yul\":1981:1997   */\n      mload\n        /* \"#utility.yul\":2040:2045   */\n      dup1\n        /* \"#utility.yul\":2033:2046   */\n      iszero\n        /* \"#utility.yul\":2026:2047   */\n      iszero\n        /* \"#utility.yul\":2019:2024   */\n      dup2\n        /* \"#utility.yul\":2016:2048   */\n      eq\n        /* \"#utility.yul\":2006:2066   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2062:2063   */\n      0x00\n        /* \"#utility.yul\":2059:2060   */\n      dup1\n        /* \"#utility.yul\":2052:2064   */\n      revert\n        /* \"#utility.yul\":2101:2228   */\n    tag_111:\n        /* \"#utility.yul\":2162:2172   */\n      0x4e487b71\n        /* \"#utility.yul\":2157:2160   */\n      0xe0\n        /* \"#utility.yul\":2153:2173   */\n      shl\n        /* \"#utility.yul\":2150:2151   */\n      0x00\n        /* \"#utility.yul\":2143:2174   */\n      mstore\n        /* \"#utility.yul\":2193:2197   */\n      0x11\n        /* \"#utility.yul\":2190:2191   */\n      0x04\n        /* \"#utility.yul\":2183:2198   */\n      mstore\n        /* \"#utility.yul\":2217:2221   */\n      0x24\n        /* \"#utility.yul\":2214:2215   */\n      0x00\n        /* \"#utility.yul\":2207:2222   */\n      revert\n        /* \"#utility.yul\":2233:2358   */\n    tag_69:\n        /* \"#utility.yul\":2273:2277   */\n      0x00\n        /* \"#utility.yul\":2301:2302   */\n      dup3\n        /* \"#utility.yul\":2298:2299   */\n      dup3\n        /* \"#utility.yul\":2295:2303   */\n      lt\n        /* \"#utility.yul\":2292:2326   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2306:2324   */\n      tag_129\n      tag_111\n      jump\t// in\n    tag_129:\n      pop\n        /* \"#utility.yul\":2343:2352   */\n      sub\n      swap1\n        /* \"#utility.yul\":2233:2358   */\n      jump\t// out\n        /* \"#utility.yul\":2743:2911   */\n    tag_78:\n        /* \"#utility.yul\":2783:2790   */\n      0x00\n        /* \"#utility.yul\":2849:2850   */\n      dup2\n        /* \"#utility.yul\":2845:2846   */\n      0x00\n        /* \"#utility.yul\":2841:2847   */\n      not\n        /* \"#utility.yul\":2837:2851   */\n      div\n        /* \"#utility.yul\":2834:2835   */\n      dup4\n        /* \"#utility.yul\":2831:2852   */\n      gt\n        /* \"#utility.yul\":2826:2827   */\n      dup3\n        /* \"#utility.yul\":2819:2828   */\n      iszero\n        /* \"#utility.yul\":2812:2829   */\n      iszero\n        /* \"#utility.yul\":2808:2853   */\n      and\n        /* \"#utility.yul\":2805:2876   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":2856:2874   */\n      tag_133\n      tag_111\n      jump\t// in\n    tag_133:\n      pop\n        /* \"#utility.yul\":2896:2905   */\n      mul\n      swap1\n        /* \"#utility.yul\":2743:2911   */\n      jump\t// out\n        /* \"#utility.yul\":2916:3133   */\n    tag_80:\n        /* \"#utility.yul\":2956:2957   */\n      0x00\n        /* \"#utility.yul\":2982:2983   */\n      dup3\n        /* \"#utility.yul\":2972:3104   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":3026:3036   */\n      0x4e487b71\n        /* \"#utility.yul\":3021:3024   */\n      0xe0\n        /* \"#utility.yul\":3017:3037   */\n      shl\n        /* \"#utility.yul\":3014:3015   */\n      0x00\n        /* \"#utility.yul\":3007:3038   */\n      mstore\n        /* \"#utility.yul\":3061:3065   */\n      0x12\n        /* \"#utility.yul\":3058:3059   */\n      0x04\n        /* \"#utility.yul\":3051:3066   */\n      mstore\n        /* \"#utility.yul\":3089:3093   */\n      0x24\n        /* \"#utility.yul\":3086:3087   */\n      0x00\n        /* \"#utility.yul\":3079:3094   */\n      revert\n        /* \"#utility.yul\":2972:3104   */\n    tag_135:\n      pop\n        /* \"#utility.yul\":3118:3127   */\n      div\n      swap1\n        /* \"#utility.yul\":2916:3133   */\n      jump\t// out\n        /* \"#utility.yul\":3138:3266   */\n    tag_85:\n        /* \"#utility.yul\":3178:3181   */\n      0x00\n        /* \"#utility.yul\":3209:3210   */\n      dup3\n        /* \"#utility.yul\":3205:3211   */\n      not\n        /* \"#utility.yul\":3202:3203   */\n      dup3\n        /* \"#utility.yul\":3199:3212   */\n      gt\n        /* \"#utility.yul\":3196:3235   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":3215:3233   */\n      tag_138\n      tag_111\n      jump\t// in\n    tag_138:\n      pop\n        /* \"#utility.yul\":3251:3260   */\n      add\n      swap1\n        /* \"#utility.yul\":3138:3266   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220464cb19f5a02ae9fc5303658333d0ee5936edf180e747e4fab1b89379c911b1764736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1179:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:1"
															},
															"nodeType": "YulIf",
															"src": "304:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													}
												],
												"src": "196:293:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "668:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "696:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "678:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "730:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "708:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "769:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:1"
																	},
																	{
																		"hexValue": "4e4f542c532030582041444452455353",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "774:18:1",
																		"type": "",
																		"value": "NOT,S 0X ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "802:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "814:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "802:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "645:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "659:4:1",
														"type": ""
													}
												],
												"src": "494:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1013:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1030:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1023:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1075:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1053:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1114:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1099:18:1"
																	},
																	{
																		"hexValue": "4e4545442061677265656d656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1119:16:1",
																		"type": "",
																		"value": "NEED agreement"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1145:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1157:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1168:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1153:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1145:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "990:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1004:4:1",
														"type": ""
													}
												],
												"src": "839:338:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"NOT,S 0X ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"NEED agreement\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516109a73803806109a783398101604081905261002f91610177565b600480546001600160a01b031916331790556001600160a01b03821661008f5760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b60448201526064015b60405180910390fd5b6001600160a01b0381166100d85760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b6044820152606401610086565b806001600160a01b0316826001600160a01b03161461012a5760405162461bcd60e51b815260206004820152600e60248201526d13915151081859dc99595b595b9d60921b6044820152606401610086565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556101aa565b80516001600160a01b038116811461017257600080fd5b919050565b6000806040838503121561018a57600080fd5b6101938361015b565b91506101a16020840161015b565b90509250929050565b6107ee806101b96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806371ca337d1161007157806371ca337d1461014a5780638c93ecff146101535780638da5cb5b146101b8578063b2237ba3146101cb578063d942727f146101e0578063dab2997b146101e957600080fd5b80630fdb1c10146100b9578063227a473b146100d65780632c46502d146100e95780634641257d14610114578063529aca491461011c5780635e9f443514610132575b600080fd5b6100c16101fc565b60405190151581526020015b60405180910390f35b6100c16100e43660046106ce565b610303565b6002546100fc906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b6100c1610495565b610124610612565b6040519081526020016100cd565b33600090815260056020526040902060020154610124565b61012460005481565b6101906101613660046106e7565b600560205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016100cd565b6004546100fc906001600160a01b031681565b6101de6101d93660046106ce565b61067f565b005b61012460035481565b6001546100fc906001600160a01b031681565b6001543360008181526005602052604080822054905163a9059cbb60e01b815260048101939093526024830152916001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561025c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102809190610710565b50336000818152600560209081526040918290205491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a23360009081526005602052604081205460038054919290916102e8908490610748565b90915550503360009081526005602052604081205550600190565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af115801561035b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037f9190610710565b50604051828152309033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a36000805433825260056020526040909120546301e13380916064916103dc919061075f565b6103e6919061077e565b6103f0919061077e565b3360009081526005602052604090206001015461040d9042610748565b610417919061075f565b336000908152600560205260408120600281019290925581548492919061043f9084906107a0565b9091555050336000908152600560205260408120426001909101556003805484929061046c9084906107a0565b909155505033600090815260056020526040902060018082015460049092019190915592915050565b60008054338252600560205260408220546301e13380916064916104b9919061075f565b6104c3919061077e565b6104cd919061077e565b336000908152600560205260409020600101546104ea9042610748565b6104f4919061075f565b3360009081526005602052604090206002015461051191906107a0565b3360008181526005602052604090819020600301839055600254905163a9059cbb60e01b8152600481019290925260248201929092526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f9190610710565b50336000818152600560209081526040918290206003015491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a25033600090815260056020526040812060038101829055600281019190915542600490910155600190565b3360009081526005602052604081206004015481906106319042610748565b600080543382526005602052604082205492935090916301e133809160649161065a919061075f565b610664919061077e565b61066e919061077e565b610678908361075f565b9392505050565b6004546001600160a01b031633146106c95760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640160405180910390fd5b600055565b6000602082840312156106e057600080fd5b5035919050565b6000602082840312156106f957600080fd5b81356001600160a01b038116811461067857600080fd5b60006020828403121561072257600080fd5b8151801515811461067857600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561075a5761075a610732565b500390565b600081600019048311821515161561077957610779610732565b500290565b60008261079b57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156107b3576107b3610732565b50019056fea2646970667358221220464cb19f5a02ae9fc5303658333d0ee5936edf180e747e4fab1b89379c911b1764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x9A7 CODESIZE SUB DUP1 PUSH2 0x9A7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x13915151081859DC99595B595B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x1AA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 DUP4 PUSH2 0x15B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A1 PUSH1 0x20 DUP5 ADD PUSH2 0x15B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EE DUP1 PUSH2 0x1B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71CA337D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x2C46502D EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x529ACA49 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x5E9F4435 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x124 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x710 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x2E8 SWAP1 DUP5 SWAP1 PUSH2 0x748 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x710 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x40D SWAP1 TIMESTAMP PUSH2 0x748 JUMP JUMPDEST PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP5 SWAP3 SWAP2 SWAP1 PUSH2 0x43F SWAP1 DUP5 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x46C SWAP1 DUP5 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4EA SWAP1 TIMESTAMP PUSH2 0x748 JUMP JUMPDEST PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x57B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x710 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH2 0x631 SWAP1 TIMESTAMP PUSH2 0x748 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x678 SWAP1 DUP4 PUSH2 0x75F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x75A JUMPI PUSH2 0x75A PUSH2 0x732 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x779 JUMPI PUSH2 0x779 PUSH2 0x732 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x79B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7B3 JUMPI PUSH2 0x7B3 PUSH2 0x732 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0x4C 0xB1 SWAP16 GAS MUL 0xAE SWAP16 0xC5 ADDRESS CALLDATASIZE PC CALLER RETURNDATASIZE 0xE 0xE5 SWAP4 PUSH15 0xDF180E747E4FAB1B89379C911B1764 PUSH20 0x6F6C634300080F00330000000000000000000000 ",
							"sourceMap": "732:4587:0:-:0;;;1381:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1444:5;:18;;-1:-1:-1;;;;;;1444:18:0;1452:10;1444:18;;;-1:-1:-1;;;;;1481:25:0;;1473:53;;;;-1:-1:-1;;;1473:53:0;;696:2:1;1473:53:0;;;678:21:1;735:2;715:18;;;708:30;-1:-1:-1;;;754:18:1;;;747:46;810:18;;1473:53:0;;;;;;;;;-1:-1:-1;;;;;1545:22:0;;1537:50;;;;-1:-1:-1;;;1537:50:0;;696:2:1;1537:50:0;;;678:21:1;735:2;715:18;;;708:30;-1:-1:-1;;;754:18:1;;;747:46;810:18;;1537:50:0;494:340:1;1537:50:0;1621:8;-1:-1:-1;;;;;1606:23:0;:11;-1:-1:-1;;;;;1606:23:0;;1598:49;;;;-1:-1:-1;;;1598:49:0;;1041:2:1;1598:49:0;;;1023:21:1;1080:2;1060:18;;;1053:30;-1:-1:-1;;;1099:18:1;;;1092:44;1153:18;;1598:49:0;839:338:1;1598:49:0;1658:10;:24;;-1:-1:-1;;;;;1658:24:0;;;-1:-1:-1;;;;;;1658:24:0;;;;;;;1693:7;:18;;;;;;;;;;;732:4587;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;839:338::-;732:4587:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Stake_284": {
									"entryPoint": 771,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@User_Map_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvest_423": {
									"entryPoint": 1173,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastTotokenRatio_476": {
									"entryPoint": null,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@newTotokenRatio_460": {
									"entryPoint": 1554,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ratio_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRatio_188": {
									"entryPoint": 1663,
									"id": 188,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeSupple_76": {
									"entryPoint": null,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staketoken_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totoken_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withDraw_331": {
									"entryPoint": 508,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3605:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "154:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "78:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "89:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "100:4:1",
														"type": ""
													}
												],
												"src": "14:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "276:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "322:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "331:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "324:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "324:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "324:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "297:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "306:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "293:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "293:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "318:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "289:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "289:32:1"
															},
															"nodeType": "YulIf",
															"src": "286:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "347:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "370:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "357:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "347:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "242:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "253:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "265:6:1",
														"type": ""
													}
												],
												"src": "206:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "492:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "502:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "514:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "502:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "559:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "575:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "580:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "571:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "571:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "584:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "567:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "567:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "537:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "461:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "472:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "483:4:1",
														"type": ""
													}
												],
												"src": "391:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "710:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "722:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "718:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "710:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "763:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "669:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "680:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "691:4:1",
														"type": ""
													}
												],
												"src": "599:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "872:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "881:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "864:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:32:1"
															},
															"nodeType": "YulIf",
															"src": "861:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "935:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "926:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1021:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1030:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1023:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "980:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "991:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1006:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1011:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1002:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1002:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1015:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "998:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "998:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "977:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:50:1"
															},
															"nodeType": "YulIf",
															"src": "967:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1046:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1056:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1046:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "817:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "828:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "840:6:1",
														"type": ""
													}
												],
												"src": "781:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1285:250:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1295:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1307:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1318:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1303:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1303:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1295:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1338:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1349:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1376:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1387:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1392:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1365:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1365:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1365:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1430:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1415:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1435:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1408:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1408:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1462:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1473:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1458:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1451:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1505:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1516:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1522:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1222:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1233:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1241:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1249:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1257:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1276:4:1",
														"type": ""
													}
												],
												"src": "1072:463:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1669:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1679:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1691:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1679:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1721:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1736:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1752:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1757:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1748:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1748:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1761:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1744:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1744:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1732:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1732:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1714:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1714:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1785:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1796:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1801:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1774:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1774:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1630:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1641:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1649:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1660:4:1",
														"type": ""
													}
												],
												"src": "1540:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1897:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1943:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1952:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1955:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1945:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1945:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1945:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1918:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1927:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1914:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1914:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1939:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1910:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1910:32:1"
															},
															"nodeType": "YulIf",
															"src": "1907:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1968:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1987:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1981:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1981:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1972:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2050:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2052:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2052:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2052:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2040:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2033:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2033:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2026:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2026:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2016:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2016:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:40:1"
															},
															"nodeType": "YulIf",
															"src": "2006:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2075:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2085:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1863:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1874:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1886:6:1",
														"type": ""
													}
												],
												"src": "1819:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2133:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2150:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2157:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2162:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2153:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2143:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2193:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2207:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2101:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2282:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2304:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2306:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2306:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2306:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2298:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2301:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2295:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:8:1"
															},
															"nodeType": "YulIf",
															"src": "2292:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2335:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2347:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2350:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2343:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2335:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2264:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2267:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2273:4:1",
														"type": ""
													}
												],
												"src": "2233:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2520:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2530:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2542:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2553:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2530:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2565:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2583:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2588:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2579:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2579:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2575:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2569:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2610:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2625:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2633:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2621:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2621:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2603:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2603:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2657:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2668:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2653:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2685:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2673:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2646:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2725:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2698:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2698:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2473:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2484:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2492:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2511:4:1",
														"type": ""
													}
												],
												"src": "2363:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2795:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2854:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2856:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2856:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2856:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2826:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2819:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2819:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2812:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2834:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2845:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2841:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2841:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2849:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2837:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2837:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2831:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2831:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2808:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:45:1"
															},
															"nodeType": "YulIf",
															"src": "2805:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2885:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2900:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2903:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2896:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2885:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2774:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2777:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2783:7:1",
														"type": ""
													}
												],
												"src": "2743:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2962:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2993:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3014:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3021:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3026:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3017:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3017:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3007:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3007:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3007:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3058:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3061:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3051:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3051:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3051:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3086:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3079:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3079:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3079:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2982:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:9:1"
															},
															"nodeType": "YulIf",
															"src": "2972:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3113:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3122:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3125:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3118:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3118:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3113:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2947:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2950:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2956:1:1",
														"type": ""
													}
												],
												"src": "2916:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3186:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3213:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3215:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3215:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3215:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3202:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3209:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3205:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:13:1"
															},
															"nodeType": "YulIf",
															"src": "3196:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3244:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3255:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3258:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3251:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3244:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3169:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3172:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3178:3:1",
														"type": ""
													}
												],
												"src": "3138:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3445:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3462:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3473:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3455:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3496:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3507:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3492:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3512:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3485:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3485:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:1"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3550:11:1",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3571:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3422:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3436:4:1",
														"type": ""
													}
												],
												"src": "3271:332:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"not owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806371ca337d1161007157806371ca337d1461014a5780638c93ecff146101535780638da5cb5b146101b8578063b2237ba3146101cb578063d942727f146101e0578063dab2997b146101e957600080fd5b80630fdb1c10146100b9578063227a473b146100d65780632c46502d146100e95780634641257d14610114578063529aca491461011c5780635e9f443514610132575b600080fd5b6100c16101fc565b60405190151581526020015b60405180910390f35b6100c16100e43660046106ce565b610303565b6002546100fc906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b6100c1610495565b610124610612565b6040519081526020016100cd565b33600090815260056020526040902060020154610124565b61012460005481565b6101906101613660046106e7565b600560205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016100cd565b6004546100fc906001600160a01b031681565b6101de6101d93660046106ce565b61067f565b005b61012460035481565b6001546100fc906001600160a01b031681565b6001543360008181526005602052604080822054905163a9059cbb60e01b815260048101939093526024830152916001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561025c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102809190610710565b50336000818152600560209081526040918290205491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a23360009081526005602052604081205460038054919290916102e8908490610748565b90915550503360009081526005602052604081205550600190565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af115801561035b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037f9190610710565b50604051828152309033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a36000805433825260056020526040909120546301e13380916064916103dc919061075f565b6103e6919061077e565b6103f0919061077e565b3360009081526005602052604090206001015461040d9042610748565b610417919061075f565b336000908152600560205260408120600281019290925581548492919061043f9084906107a0565b9091555050336000908152600560205260408120426001909101556003805484929061046c9084906107a0565b909155505033600090815260056020526040902060018082015460049092019190915592915050565b60008054338252600560205260408220546301e13380916064916104b9919061075f565b6104c3919061077e565b6104cd919061077e565b336000908152600560205260409020600101546104ea9042610748565b6104f4919061075f565b3360009081526005602052604090206002015461051191906107a0565b3360008181526005602052604090819020600301839055600254905163a9059cbb60e01b8152600481019290925260248201929092526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f9190610710565b50336000818152600560209081526040918290206003015491519182527fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b910160405180910390a25033600090815260056020526040812060038101829055600281019190915542600490910155600190565b3360009081526005602052604081206004015481906106319042610748565b600080543382526005602052604082205492935090916301e133809160649161065a919061075f565b610664919061077e565b61066e919061077e565b610678908361075f565b9392505050565b6004546001600160a01b031633146106c95760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640160405180910390fd5b600055565b6000602082840312156106e057600080fd5b5035919050565b6000602082840312156106f957600080fd5b81356001600160a01b038116811461067857600080fd5b60006020828403121561072257600080fd5b8151801515811461067857600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561075a5761075a610732565b500390565b600081600019048311821515161561077957610779610732565b500290565b60008261079b57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156107b3576107b3610732565b50019056fea2646970667358221220464cb19f5a02ae9fc5303658333d0ee5936edf180e747e4fab1b89379c911b1764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71CA337D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x2C46502D EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x529ACA49 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x5E9F4435 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x124 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x710 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x2E8 SWAP1 DUP5 SWAP1 PUSH2 0x748 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x710 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x40D SWAP1 TIMESTAMP PUSH2 0x748 JUMP JUMPDEST PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP5 SWAP3 SWAP2 SWAP1 PUSH2 0x43F SWAP1 DUP5 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x46C SWAP1 DUP5 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4EA SWAP1 TIMESTAMP PUSH2 0x748 JUMP JUMPDEST PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x57B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x710 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH2 0x631 SWAP1 TIMESTAMP PUSH2 0x748 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x678 SWAP1 DUP4 PUSH2 0x75F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x75A JUMPI PUSH2 0x75A PUSH2 0x732 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x779 JUMPI PUSH2 0x779 PUSH2 0x732 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x79B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7B3 JUMPI PUSH2 0x7B3 PUSH2 0x732 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0x4C 0xB1 SWAP16 GAS MUL 0xAE SWAP16 0xC5 ADDRESS CALLDATASIZE PC CALLER RETURNDATASIZE 0xE 0xE5 SWAP4 PUSH15 0xDF180E747E4FAB1B89379C911B1764 PUSH20 0x6F6C634300080F00330000000000000000000000 ",
							"sourceMap": "732:4587:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2682:351;;;:::i;:::-;;;179:14:1;;172:22;154:41;;142:2;127:18;2682:351:0;;;;;;;;2032:642;;;;;;:::i;:::-;;:::i;849:22::-;;;;;-1:-1:-1;;;;;849:22:0;;;;;;-1:-1:-1;;;;;555:32:1;;;537:51;;525:2;510:18;849:22:0;391:203:1;3041:602:0;;;:::i;3992:287::-;;;:::i;:::-;;;745:25:1;;;733:2;718:18;3992:287:0;599:177:1;4287:171:0;4385:10;4334:4;4376:20;;;:8;:20;;;;;:39;;;4287:171;;793:17;;;;;;1332:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1331:25:1;;;1387:2;1372:18;;1365:34;;;;1415:18;;;1408:34;;;;1473:2;1458:18;;1451:34;1516:3;1501:19;;1494:35;1318:3;1303:19;1332:40:0;1072:463:1;908:20:0;;;;;-1:-1:-1;;;;;908:20:0;;;1932:92;;;;;;:::i;:::-;;:::i;:::-;;878:23;;;;;;817:25;;;;;-1:-1:-1;;;;;817:25:0;;;2682:351;2743:10;;2764;2719:4;2776:20;;;:8;:20;;;;;;:32;2736:73;;-1:-1:-1;;;2736:73:0;;;;;1714:51:1;;;;1781:18;;;1774:34;2719:4:0;-1:-1:-1;;;;;2743:10:0;;2736:27;;1687:18:1;;2736:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2837:10:0;2849:20;;;;:8;:20;;;;;;;;;:32;2828:54;;745:25:1;;;2828:54:0;;718:18:1;2828:54:0;;;;;;;2931:10;2922:20;;;;:8;:20;;;;;:32;2907:11;:47;;2922:32;;2907:11;;:47;;2922:32;;2907:47;:::i;:::-;;;;-1:-1:-1;;2974:10:0;3000:1;2965:20;;;:8;:20;;;;;:36;-1:-1:-1;3021:4:0;;2682:351::o;2032:642::-;2102:10;;2095:67;;-1:-1:-1;;;2095:67:0;;2127:10;2095:67;;;2603:34:1;2147:4:0;2653:18:1;;;2646:43;2705:18;;;2698:34;;;2077:4:0;;-1:-1:-1;;;;;2102:10:0;;2095:31;;2538:18:1;;2095:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2181:43:0;;745:25:1;;;2209:4:0;;2189:10;;2181:43;;733:2:1;718:18;2181:43:0;;;;;;;2375:5;;;2349:10;2340:20;;:8;:20;;;;;;:32;2389:8;;2382:3;;2340:40;;2375:5;2340:40;:::i;:::-;:45;;;;:::i;:::-;2339:58;;;;:::i;:::-;2307:10;2298:20;;;;:8;:20;;;;;:36;;;2280:54;;:15;:54;:::i;:::-;2279:119;;;;:::i;:::-;2246:10;2237:20;;;;:8;:20;;;;;:39;;;:161;;;;2411:43;;2447:7;;2237:20;;2411:43;;2447:7;;2411:43;:::i;:::-;;;;-1:-1:-1;;2474:10:0;2465:20;;;;:8;:20;;;;;2504:15;2465:36;;;;:54;2530:11;:22;;2545:7;;2465:20;2530:22;;2545:7;;2530:22;:::i;:::-;;;;-1:-1:-1;;2613:10:0;2604:20;;;;:8;:20;;;;;:36;;;;;2563:38;;;;:77;;;;2604:36;2032:642;-1:-1:-1;;2032:642:0:o;3041:602::-;3076:4;3266:5;;3240:10;3231:20;;:8;:20;;;;;:32;3280:8;;3273:3;;3231:40;;3266:5;3231:40;:::i;:::-;:45;;;;:::i;:::-;3230:58;;;;:::i;:::-;3198:10;3189:20;;;;:8;:20;;;;;:36;;;3171:54;;:15;:54;:::i;:::-;3170:119;;;;:::i;:::-;3137:10;3128:20;;;;:8;:20;;;;;:39;;;:161;;;;:::i;:::-;3102:10;3093:20;;;;:8;:20;;;;;;;:32;;:196;;;3307:7;;3300:70;;-1:-1:-1;;;3300:70:0;;;;;1714:51:1;;;;1781:18;;;1774:34;;;;-1:-1:-1;;;;;3307:7:0;;;;3300:24;;1687:18:1;;3300:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3398:10:0;3410:20;;;;:8;:20;;;;;;;;;:32;;;3389:54;;745:25:1;;;3389:54:0;;718:18:1;3389:54:0;;;;;;;-1:-1:-1;3465:10:0;3491:1;3456:20;;;:8;:20;;;;;:32;;;:36;;;3503:39;;;:43;;;;3598:15;3557:38;;;;:56;-1:-1:-1;;3041:602:0:o;3992:287::-;4099:10;4040:4;4090:20;;;:8;:20;;;;;:38;;;4040:4;;4072:56;;:15;:56;:::i;:::-;4139:22;4211:5;;4185:10;4176:20;;:8;:20;;;;;:32;4057:71;;-1:-1:-1;4139:22:0;;4225:8;;4218:3;;4176:40;;4211:5;4176:40;:::i;:::-;:45;;;;:::i;:::-;4175:58;;;;:::i;:::-;4164:70;;:7;:70;:::i;:::-;4139:95;3992:287;-1:-1:-1;;;3992:287:0:o;1932:92::-;1781:5;;-1:-1:-1;;;;;1781:5:0;1767:10;:19;1759:42;;;;-1:-1:-1;;;1759:42:0;;3473:2:1;1759:42:0;;;3455:21:1;3512:1;3492:18;;;3485:29;-1:-1:-1;;;3530:18:1;;;3523:39;3579:18;;1759:42:0;;;;;;;;1997:5:::1;:14:::0;1932:92::o;206:180:1:-;265:6;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;-1:-1:-1;357:23:1;;206:180;-1:-1:-1;206:180:1:o;781:286::-;840:6;893:2;881:9;872:7;868:23;864:32;861:52;;;909:1;906;899:12;861:52;935:23;;-1:-1:-1;;;;;987:31:1;;977:42;;967:70;;1033:1;1030;1023:12;1819:277;1886:6;1939:2;1927:9;1918:7;1914:23;1910:32;1907:52;;;1955:1;1952;1945:12;1907:52;1987:9;1981:16;2040:5;2033:13;2026:21;2019:5;2016:32;2006:60;;2062:1;2059;2052:12;2101:127;2162:10;2157:3;2153:20;2150:1;2143:31;2193:4;2190:1;2183:15;2217:4;2214:1;2207:15;2233:125;2273:4;2301:1;2298;2295:8;2292:34;;;2306:18;;:::i;:::-;-1:-1:-1;2343:9:1;;2233:125::o;2743:168::-;2783:7;2849:1;2845;2841:6;2837:14;2834:1;2831:21;2826:1;2819:9;2812:17;2808:45;2805:71;;;2856:18;;:::i;:::-;-1:-1:-1;2896:9:1;;2743:168::o;2916:217::-;2956:1;2982;2972:132;;3026:10;3021:3;3017:20;3014:1;3007:31;3061:4;3058:1;3051:15;3089:4;3086:1;3079:15;2972:132;-1:-1:-1;3118:9:1;;2916:217::o;3138:128::-;3178:3;3209:1;3205:6;3202:1;3199:13;3196:39;;;3215:18;;:::i;:::-;-1:-1:-1;3251:9:1;;3138:128::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "406000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Stake(uint256)": "infinite",
								"User_Map(address)": "11050",
								"harvest()": "infinite",
								"lastTotokenRatio()": "2477",
								"newTotokenRatio()": "infinite",
								"owner()": "2381",
								"ratio()": "2295",
								"setRatio(uint256)": "24530",
								"stakeSupple()": "2383",
								"staketoken()": "2447",
								"totoken()": "2382",
								"withDraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 732,
									"end": 5319,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1452,
									"end": 1462,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1481,
									"end": 1506,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1481,
									"end": 1506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 747,
									"end": 793,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 810,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1545,
									"end": 1567,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1545,
									"end": 1567,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 747,
									"end": 793,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 810,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 494,
									"end": 834,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1629,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1606,
									"end": 1629,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1606,
									"end": 1617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1606,
									"end": 1629,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1606,
									"end": 1629,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1044,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 1083,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "13915151081859DC99595B595B9D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "92"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1136,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1171,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1153,
									"end": 1171,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1668,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1700,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 5319,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220464cb19f5a02ae9fc5303658333d0ee5936edf180e747e4fab1b89379c911b1764736f6c634300080f0033",
									".code": [
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "8C93ECFF"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "B2237BA3"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "D942727F"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "DAB2997B"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "FDB1C10"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "227A473B"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "2C46502D"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "4641257D"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "529ACA49"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "5E9F4435"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2682,
											"end": 3033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2032,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2032,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 849,
											"end": 871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 537,
											"end": 588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 537,
											"end": 588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 391,
											"end": 594,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3041,
											"end": 3643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3992,
											"end": 4279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 599,
											"end": 776,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4395,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4334,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4384,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4415,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4376,
											"end": 4415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1332,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1356,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1356,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1389,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1390,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1399,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1399,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1458,
											"end": 1476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1501,
											"end": 1520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1303,
											"end": 1322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1072,
											"end": 1535,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 908,
											"end": 928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1932,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1932,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 817,
											"end": 842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2784,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1765,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1765,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2736,
											"end": 2809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2837,
											"end": 2847,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2941,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2930,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2907,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2974,
											"end": 2984,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2973,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3001,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3021,
											"end": 3025,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3021,
											"end": 3025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2137,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2147,
											"end": 2151,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2671,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2653,
											"end": 2671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2095,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2538,
											"end": 2556,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2538,
											"end": 2556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2095,
											"end": 2162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2213,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2209,
											"end": 2213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2199,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C"
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2359,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 2389,
											"end": 2397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2382,
											"end": 2385,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2382,
											"end": 2385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2340,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2340,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2339,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2298,
											"end": 2334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2280,
											"end": 2334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2279,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2256,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2398,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2411,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2474,
											"end": 2484,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2473,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2465,
											"end": 2501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2519,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2545,
											"end": 2552,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2545,
											"end": 2552,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2545,
											"end": 2552,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2545,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2530,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2613,
											"end": 2623,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2563,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2601,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2640,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3288,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 3280,
											"end": 3288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3231,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3231,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3230,
											"end": 3288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3208,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3197,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3189,
											"end": 3225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3186,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3171,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3170,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3147,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3128,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3128,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3112,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3101,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3093,
											"end": 3125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1765,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1765,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1808,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1808,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3324,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3300,
											"end": 3324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3300,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3418,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3442,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3410,
											"end": 3442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 3475,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3464,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3492,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3542,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3503,
											"end": 3542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3546,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3613,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3557,
											"end": 3595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3041,
											"end": 3643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4109,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4040,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4128,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4090,
											"end": 4128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4040,
											"end": 4044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4040,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4087,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4072,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4195,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4128,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4139,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4225,
											"end": 4233,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 4225,
											"end": 4233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4218,
											"end": 4221,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4218,
											"end": 4221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4176,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4176,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4175,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4164,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4234,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3992,
											"end": 4279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1777,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1786,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3513,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2011,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 206,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 265,
											"end": 271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 293,
											"end": 316,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 289,
											"end": 321,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 286,
											"end": 338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 286,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 286,
											"end": 338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 334,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 324,
											"end": 336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 286,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 286,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 357,
											"end": 380,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 206,
											"end": 386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 206,
											"end": 386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 868,
											"end": 891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 935,
											"end": 958,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1035,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1819,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1886,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1927,
											"end": 1936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1942,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1959,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1907,
											"end": 1959,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1953,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1957,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1959,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1907,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 1997,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2047,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2048,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2006,
											"end": 2066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2064,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2157,
											"end": 2160,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2153,
											"end": 2173,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2197,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2190,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2217,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2222,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2358,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2303,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2326,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2292,
											"end": 2326,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2306,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2306,
											"end": 2324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2324,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2306,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2343,
											"end": 2352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2911,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2743,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2851,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2852,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2853,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2805,
											"end": 2876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2856,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2856,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2874,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2856,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2896,
											"end": 2905,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3133,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2916,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2972,
											"end": 3104,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3036,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3021,
											"end": 3024,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3017,
											"end": 3037,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3065,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3093,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3104,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2972,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3266,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3138,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3211,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3212,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3196,
											"end": 3235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3215,
											"end": 3233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"自己写个矿池,定息矿池.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Stake(uint256)": "227a473b",
							"User_Map(address)": "8c93ecff",
							"harvest()": "4641257d",
							"lastTotokenRatio()": "5e9f4435",
							"newTotokenRatio()": "529aca49",
							"owner()": "8da5cb5b",
							"ratio()": "71ca337d",
							"setRatio(uint256)": "b2237ba3",
							"stakeSupple()": "d942727f",
							"staketoken()": "dab2997b",
							"totoken()": "2c46502d",
							"withDraw()": "0fdb1c10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staketoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_totoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"User_Map\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_Stake_Time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"whole_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_Time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTotokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newTotokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeSupple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staketoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":\"StakeContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":{\"keccak256\":\"0x62092331d2780b92ff3a3c99d2af87eaeb45c68ba0f83a683873808e03cf3aa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46a87d4b48695e0dccbd308481c022d789faa59518a88678cb46cf3c8cd69419\",\"dweb:/ipfs/QmYhvgtvvA15KgJ8k1Gg1rigwTj9T6uYNVz4mPoNVWEaBn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "ratio",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 72,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "staketoken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 74,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "totoken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 76,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "stakeSupple",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 78,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 116,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "User_Map",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(User)111_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)111_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakeContract.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)111_storage"
							},
							"t_struct(User)111_storage": {
								"encoding": "inplace",
								"label": "struct StakeContract.User",
								"members": [
									{
										"astId": 102,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "stakeNumber",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 104,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_Stake_Time",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 106,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_totoken_ratio",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 108,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "whole_ratio",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 110,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_totoken_Time",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"自己写个矿池,定息矿池.sol": {
				"ast": {
					"absolutePath": "自己写个矿池,定息矿池.sol",
					"exportedSymbols": {
						"IERC20": [
							68
						],
						"StakeContract": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nameLocation": "78:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "101:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:6:0"
									},
									"scope": 68,
									"src": "92:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "161:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "211:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:6:0"
									},
									"scope": 68,
									"src": "152:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "234:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "251:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "243:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "262:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:31:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "292:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:0"
									},
									"scope": 68,
									"src": "225:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "315:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "333:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "325:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:32:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "380:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:6:0"
									},
									"scope": 68,
									"src": "306:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "403:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "433:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "428:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:29:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "458:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "458:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:6:0"
									},
									"scope": 68,
									"src": "394:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "481:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "502:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "494:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "518:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "510:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "529:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:47:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:6:0"
									},
									"scope": 68,
									"src": "472:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 59,
									"name": "Trasfer",
									"nameLocation": "579:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "603:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "587:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "625:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "609:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "629:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:54:0"
									},
									"src": "573:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 67,
									"name": "Approveal",
									"nameLocation": "653:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "663:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "686:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "716:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "711:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:60:0"
									},
									"src": "647:76:0"
								}
							],
							"scope": 478,
							"src": "68:660:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakeContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "StakeContract",
							"nameLocation": "741:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "71ca337d",
									"id": 70,
									"mutability": "mutable",
									"name": "ratio",
									"nameLocation": "805:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "793:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 69,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "793:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dab2997b",
									"id": 72,
									"mutability": "mutable",
									"name": "staketoken",
									"nameLocation": "832:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "817:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "817:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c46502d",
									"id": 74,
									"mutability": "mutable",
									"name": "totoken",
									"nameLocation": "864:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "849:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "849:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d942727f",
									"id": 76,
									"mutability": "mutable",
									"name": "stakeSupple",
									"nameLocation": "890:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "878:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 75,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "878:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 78,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "923:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "908:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 77,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "908:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 86,
									"name": "Trasfer",
									"nameLocation": "947:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "971:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "955:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "993:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "977:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "997:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:54:0"
									},
									"src": "941:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 94,
									"name": "Approveal",
									"nameLocation": "1021:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1031:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1070:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1054:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1084:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:60:0"
									},
									"src": "1015:76:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
									"id": 100,
									"name": "transfer",
									"nameLocation": "1103:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1128:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1112:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1137:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1132:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:32:0"
									},
									"src": "1097:47:0"
								},
								{
									"canonicalName": "StakeContract.User",
									"id": 111,
									"members": [
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "stakeNumber",
											"nameLocation": "1180:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1175:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1175:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "last_Stake_Time",
											"nameLocation": "1207:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1202:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1202:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "last_totoken_ratio",
											"nameLocation": "1238:18:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1233:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 105,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1233:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "whole_ratio",
											"nameLocation": "1272:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1267:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1267:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "last_totoken_Time",
											"nameLocation": "1299:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1294:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1294:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "1159:4:0",
									"nodeType": "StructDefinition",
									"scope": 477,
									"src": "1152:172:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c93ecff",
									"id": 116,
									"mutability": "mutable",
									"name": "User_Map",
									"nameLocation": "1364:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "1332:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
										"typeString": "mapping(address => struct StakeContract.User)"
									},
									"typeName": {
										"id": 115,
										"keyType": {
											"id": 112,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1340:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1332:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
											"typeString": "mapping(address => struct StakeContract.User)"
										},
										"valueType": {
											"id": 114,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 113,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 111,
												"src": "1351:4:0"
											},
											"referencedDeclaration": 111,
											"src": "1351:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$111_storage_ptr",
												"typeString": "struct StakeContract.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1433:286:0",
										"statements": [
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1444:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 124,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1452:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1452:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1444:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1444:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 129,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1481:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1496:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1496:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1481:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1507:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1473:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 139,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1545:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1565:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1557:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 140,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1557:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1557:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1545:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1568:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1537:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1537:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 149,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1606:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 150,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1621:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1606:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4545442061677265656d656e74",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1630:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															},
															"value": "NEED agreement"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1598:49:0"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1658:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "_staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1671:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1658:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1658:24:0"
											},
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 159,
														"name": "totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 160,
														"name": "_totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1703:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1693:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1693:18:0"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "_staketoken",
												"nameLocation": "1402:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1394:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "_totoken",
												"nameLocation": "1423:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1415:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:39:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1433:0:0"
									},
									"scope": 477,
									"src": "1381:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1748:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 167,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1767:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1767:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 169,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1781:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1767:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1789:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1759:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1759:42:0"
											},
											{
												"id": 174,
												"nodeType": "PlaceholderStatement",
												"src": "1812:1:0"
											}
										]
									},
									"id": 176,
									"name": "onlyOwner",
									"nameLocation": "1736:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1745:2:0"
									},
									"src": "1727:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1982:42:0",
										"statements": [
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1997:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "_ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "2005:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1997:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1997:14:0"
											}
										]
									},
									"functionSelector": "b2237ba3",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 180,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "1972:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1972:9:0"
										}
									],
									"name": "setRatio",
									"nameLocation": "1941:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "1955:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1950:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1950:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:13:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:0:0"
									},
									"scope": 477,
									"src": "1932:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "2082:592:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2127:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2127:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 203,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2147:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$477",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$477",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2139:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2139:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2139:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2102:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 195,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2095:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2095:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "2095:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2095:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2095:67:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2189:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2189:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 213,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2209:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$477",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$477",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2201:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 211,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2201:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2201:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2216:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 208,
														"name": "Trasfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2181:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2176:48:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 218,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2237:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 221,
															"indexExpression": {
																"expression": {
																	"id": 219,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2246:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2246:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2237:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "2237:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 223,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2280:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2280:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 225,
																				"name": "User_Map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 116,
																				"src": "2298:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																					"typeString": "mapping(address => struct StakeContract.User storage ref)"
																				}
																			},
																			"id": 228,
																			"indexExpression": {
																				"expression": {
																					"id": 226,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2307:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2307:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2298:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$111_storage",
																				"typeString": "struct StakeContract.User storage ref"
																			}
																		},
																		"id": 229,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "last_Stake_Time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "2298:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2280:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 231,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2279:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 238,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 232,
																								"name": "User_Map",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 116,
																								"src": "2340:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																									"typeString": "mapping(address => struct StakeContract.User storage ref)"
																								}
																							},
																							"id": 235,
																							"indexExpression": {
																								"expression": {
																									"id": 233,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "2349:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 234,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "2349:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2340:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$111_storage",
																								"typeString": "struct StakeContract.User storage ref"
																							}
																						},
																						"id": 236,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "stakeNumber",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 102,
																						"src": "2340:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 237,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 70,
																						"src": "2375:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2340:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2382:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "2340:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 241,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2339:47:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3331353336303030",
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2389:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31536000_by_1",
																			"typeString": "int_const 31536000"
																		},
																		"value": "31536000"
																	},
																	"src": "2339:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 244,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2338:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2279:119:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2237:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2237:161:0"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 248,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2411:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 251,
															"indexExpression": {
																"expression": {
																	"id": 249,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2420:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2420:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2411:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2411:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 253,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2411:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "2411:43:0"
											},
											{
												"expression": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 256,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2465:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 259,
															"indexExpression": {
																"expression": {
																	"id": 257,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2474:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2474:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2465:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "2465:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 261,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2504:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2504:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2465:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "2465:54:0"
											},
											{
												"expression": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 265,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2530:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 266,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2530:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "2530:22:0"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 269,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2563:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 272,
															"indexExpression": {
																"expression": {
																	"id": 270,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2572:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2572:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2563:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "2563:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 274,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2604:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 277,
															"indexExpression": {
																"expression": {
																	"id": 275,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2613:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2613:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2604:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "2604:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2563:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2563:77:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2658:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 194,
												"id": 282,
												"nodeType": "Return",
												"src": "2651:11:0"
											}
										]
									},
									"functionSelector": "227a473b",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Stake",
									"nameLocation": "2041:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2052:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2047:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2046:14:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2077:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:6:0"
									},
									"scope": 477,
									"src": "2032:642:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2725:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2764:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2764:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 295,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "2776:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 298,
																"indexExpression": {
																	"expression": {
																		"id": 296,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2785:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2785:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2776:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "2776:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 290,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2743:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 289,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2736:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2736:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "2736:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2736:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2736:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 303,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2837:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2837:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 305,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "2849:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 308,
																"indexExpression": {
																	"expression": {
																		"id": 306,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2858:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2858:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2849:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 309,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "2849:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 302,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2828:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2828:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "EmitStatement",
												"src": "2823:59:0"
											},
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 312,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2907:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 313,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2922:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 316,
															"indexExpression": {
																"expression": {
																	"id": 314,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2931:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2931:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2922:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2922:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2907:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "2907:47:0"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 320,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2965:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 323,
															"indexExpression": {
																"expression": {
																	"id": 321,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2974:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2974:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2965:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2965:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3000:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2965:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2965:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3021:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 288,
												"id": 329,
												"nodeType": "Return",
												"src": "3014:11:0"
											}
										]
									},
									"functionSelector": "0fdb1c10",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withDraw",
									"nameLocation": "2691:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2700:2:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2719:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2719:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:6:0"
									},
									"scope": 477,
									"src": "2682:351:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "3082:561:0",
										"statements": [
											{
												"expression": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 336,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3093:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 339,
															"indexExpression": {
																"expression": {
																	"id": 337,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3102:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3102:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3093:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "3093:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 341,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "3128:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 344,
																"indexExpression": {
																	"expression": {
																		"id": 342,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3137:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3137:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3128:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "last_totoken_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 106,
															"src": "3128:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 346,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3171:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3171:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 348,
																					"name": "User_Map",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 116,
																					"src": "3189:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																						"typeString": "mapping(address => struct StakeContract.User storage ref)"
																					}
																				},
																				"id": 351,
																				"indexExpression": {
																					"expression": {
																						"id": 349,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3198:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 350,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3198:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3189:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$111_storage",
																					"typeString": "struct StakeContract.User storage ref"
																				}
																			},
																			"id": 352,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "last_Stake_Time",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 104,
																			"src": "3189:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3171:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 354,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3170:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 355,
																									"name": "User_Map",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 116,
																									"src": "3231:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																										"typeString": "mapping(address => struct StakeContract.User storage ref)"
																									}
																								},
																								"id": 358,
																								"indexExpression": {
																									"expression": {
																										"id": 356,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "3240:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 357,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "3240:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3231:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$111_storage",
																									"typeString": "struct StakeContract.User storage ref"
																								}
																							},
																							"id": 359,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakeNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 102,
																							"src": "3231:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 360,
																							"name": "ratio",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "3266:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3231:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 362,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3273:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "3231:45:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 364,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3230:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3331353336303030",
																			"id": 365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3280:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31536000_by_1",
																				"typeString": "int_const 31536000"
																			},
																			"value": "31536000"
																		},
																		"src": "3230:58:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 367,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3229:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3170:119:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3128:161:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3093:196:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "3093:196:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 376,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3325:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3325:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 378,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "3337:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 381,
																"indexExpression": {
																	"expression": {
																		"id": 379,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3346:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3346:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3337:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "3337:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 373,
																	"name": "totoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "3307:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 372,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "3300:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3300:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3300:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3300:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "3300:70:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 386,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3398:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3398:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 388,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "3410:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 391,
																"indexExpression": {
																	"expression": {
																		"id": 389,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3419:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3419:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3410:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "3410:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3389:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3389:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "EmitStatement",
												"src": "3384:59:0"
											},
											{
												"expression": {
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 395,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3456:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 398,
															"indexExpression": {
																"expression": {
																	"id": 396,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3465:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3465:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3456:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "3456:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3491:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3456:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "3456:36:0"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 403,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3503:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 406,
															"indexExpression": {
																"expression": {
																	"id": 404,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3512:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3512:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3503:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3503:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3503:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "3503:43:0"
											},
											{
												"expression": {
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 411,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3557:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 414,
															"indexExpression": {
																"expression": {
																	"id": 412,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3566:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3566:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3557:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "3557:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 416,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3598:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3598:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3557:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "3557:56:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3631:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 335,
												"id": 421,
												"nodeType": "Return",
												"src": "3624:11:0"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "3050:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3057:2:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3076:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:0"
									},
									"scope": 477,
									"src": "3041:602:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "4046:233:0",
										"statements": [
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "newtime",
														"nameLocation": "4062:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "4057:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 428,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4057:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 430,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4072:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4072:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 432,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "4090:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 435,
															"indexExpression": {
																"expression": {
																	"id": 433,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4099:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4090:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "4090:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4072:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4057:71:0"
											},
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "newTotokenRatione",
														"nameLocation": "4144:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "4139:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4139:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "newtime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "4164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 442,
																							"name": "User_Map",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 116,
																							"src": "4176:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																								"typeString": "mapping(address => struct StakeContract.User storage ref)"
																							}
																						},
																						"id": 445,
																						"indexExpression": {
																							"expression": {
																								"id": 443,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "4185:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 444,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "4185:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4176:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$111_storage",
																							"typeString": "struct StakeContract.User storage ref"
																						}
																					},
																					"id": 446,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeNumber",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 102,
																					"src": "4176:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 447,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "4211:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4176:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4218:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "4176:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 451,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4175:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3331353336303030",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4225:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "31536000"
																},
																"src": "4175:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 454,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4174:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4164:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4139:95:0"
											},
											{
												"expression": {
													"id": 457,
													"name": "newTotokenRatione",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "4252:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 458,
												"nodeType": "Return",
												"src": "4245:24:0"
											}
										]
									},
									"functionSelector": "529aca49",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "newTotokenRatio",
									"nameLocation": "4001:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4016:2:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4040:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4040:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4039:6:0"
									},
									"scope": 477,
									"src": "3992:287:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "4340:118:0",
										"statements": [
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "_lastTotokenRatio",
														"nameLocation": "4356:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "4351:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4351:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 467,
															"name": "User_Map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4376:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																"typeString": "mapping(address => struct StakeContract.User storage ref)"
															}
														},
														"id": 470,
														"indexExpression": {
															"expression": {
																"id": 468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4385:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4385:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4376:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$111_storage",
															"typeString": "struct StakeContract.User storage ref"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "last_totoken_ratio",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 106,
													"src": "4376:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4351:64:0"
											},
											{
												"expression": {
													"id": 473,
													"name": "_lastTotokenRatio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 466,
													"src": "4433:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 464,
												"id": 474,
												"nodeType": "Return",
												"src": "4426:24:0"
											}
										]
									},
									"functionSelector": "5e9f4435",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTotokenRatio",
									"nameLocation": "4296:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4312:2:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4334:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4333:6:0"
									},
									"scope": 477,
									"src": "4287:171:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 478,
							"src": "732:4587:0",
							"usedErrors": []
						}
					],
					"src": "38:5283:0"
				},
				"id": 0
			}
		}
	}
}