{
	"id": "efb0e7bc7ffeee434b696e616d3a3d02",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity结构控制.sol": {
				"content": "//在写合约时，写上软件许可后，编译就不会报警告\r\n// SPDX-License-Identifier: MIT  \r\n//使用solidity版本\r\npragma solidity ^0.8.7;\r\ncontract IfElse {\r\n    function example(uint x) external pure returns (uint) {\r\n        if (x < 10) {\r\n            return 1;\r\n        } else if (x < 20) {\r\n            return 2;\r\n        }else {\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    // 使用三元运算符执行if，else\r\n    function ternary(uint x) external pure returns (uint) {\r\n        // 如果x小于10则返回1，否则返回2\r\n        return x < 10 ? 1 : 2;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity结构控制.sol": {
				"IfElse": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "example",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "ternary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":154:593  contract IfElse {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":154:593  contract IfElse {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x477e4a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x55278c5b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":177:389  function example(uint x) external pure returns (uint) {... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":177:389  function example(uint x) external pure returns (uint) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":442:590  function ternary(uint x) external pure returns (uint) {... */\n    tag_4:\n      tag_5\n      tag_12\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":177:389  function example(uint x) external pure returns (uint) {... */\n    tag_8:\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":225:229  uint */\n      0x00\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":250:252  10 */\n      0x0a\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":246:247  x */\n      dup3\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":246:252  x < 10 */\n      lt\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":242:382  if (x < 10) {... */\n      iszero\n      tag_16\n      jumpi\n      pop\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":276:277  1 */\n      0x01\n      swap2\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":177:389  function example(uint x) external pure returns (uint) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":242:382  if (x < 10) {... */\n    tag_16:\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":303:305  20 */\n      0x14\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":299:300  x */\n      dup3\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":299:305  x < 20 */\n      lt\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":295:382  if (x < 20) {... */\n      iszero\n      tag_18\n      jumpi\n      pop\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":329:330  2 */\n      0x02\n      swap2\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":177:389  function example(uint x) external pure returns (uint) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":295:382  if (x < 20) {... */\n    tag_18:\n      pop\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":369:370  3 */\n      0x03\n      swap2\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":177:389  function example(uint x) external pure returns (uint) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":442:590  function ternary(uint x) external pure returns (uint) {... */\n    tag_13:\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":490:494  uint */\n      0x00\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":572:574  10 */\n      0x0a\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":568:569  x */\n      dup3\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":568:574  x < 10 */\n      lt\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":568:582  x < 10 ? 1 : 2 */\n      tag_21\n      jumpi\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":581:582  2 */\n      0x02\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":568:582  x < 10 ? 1 : 2 */\n      jump(tag_22)\n    tag_21:\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":577:578  1 */\n      0x01\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":568:582  x < 10 ? 1 : 2 */\n    tag_22:\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":561:582  return x < 10 ? 1 : 2 */\n      0xff\n      and\n      swap3\n        /* \"solidity\\xe7\\xbb\\x93\\xe6\\x9e\\x84\\xe6\\x8e\\xa7\\xe5\\x88\\xb6.sol\":442:590  function ternary(uint x) external pure returns (uint) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_25:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ef155273f70d5b953390784284046f85136c88421dfecb806fadc4ceb0b5cb7864736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060fa8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063477e4a0214603757806355278c5b146058575b600080fd5b6046604236600460ac565b6067565b60405190815260200160405180910390f35b6046606336600460ac565b6091565b6000600a821015607957506001919050565b6014821015608957506002919050565b506003919050565b6000600a821060a057600260a3565b60015b60ff1692915050565b60006020828403121560bd57600080fd5b503591905056fea2646970667358221220ef155273f70d5b953390784284046f85136c88421dfecb806fadc4ceb0b5cb7864736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFA DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x477E4A02 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x55278C5B EQ PUSH1 0x58 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x46 PUSH1 0x42 CALLDATASIZE PUSH1 0x4 PUSH1 0xAC JUMP JUMPDEST PUSH1 0x67 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x46 PUSH1 0x63 CALLDATASIZE PUSH1 0x4 PUSH1 0xAC JUMP JUMPDEST PUSH1 0x91 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT ISZERO PUSH1 0x79 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH1 0x89 JUMPI POP PUSH1 0x2 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT PUSH1 0xA0 JUMPI PUSH1 0x2 PUSH1 0xA3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF ISZERO MSTORE PUSH20 0xF70D5B953390784284046F85136C88421DFECB80 PUSH16 0xADC4CEB0B5CB7864736F6C634300080F STOP CALLER ",
							"sourceMap": "154:439:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@example_26": {
									"entryPoint": 103,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ternary_41": {
									"entryPoint": 145,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:378:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:1",
														"type": ""
													}
												],
												"src": "199:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c8063477e4a0214603757806355278c5b146058575b600080fd5b6046604236600460ac565b6067565b60405190815260200160405180910390f35b6046606336600460ac565b6091565b6000600a821015607957506001919050565b6014821015608957506002919050565b506003919050565b6000600a821060a057600260a3565b60015b60ff1692915050565b60006020828403121560bd57600080fd5b503591905056fea2646970667358221220ef155273f70d5b953390784284046f85136c88421dfecb806fadc4ceb0b5cb7864736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x477E4A02 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x55278C5B EQ PUSH1 0x58 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x46 PUSH1 0x42 CALLDATASIZE PUSH1 0x4 PUSH1 0xAC JUMP JUMPDEST PUSH1 0x67 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x46 PUSH1 0x63 CALLDATASIZE PUSH1 0x4 PUSH1 0xAC JUMP JUMPDEST PUSH1 0x91 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT ISZERO PUSH1 0x79 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH1 0x89 JUMPI POP PUSH1 0x2 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT PUSH1 0xA0 JUMPI PUSH1 0x2 PUSH1 0xA3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF ISZERO MSTORE PUSH20 0xF70D5B953390784284046F85136C88421DFECB80 PUSH16 0xADC4CEB0B5CB7864736F6C634300080F STOP CALLER ",
							"sourceMap": "154:439:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:212;;;;;;:::i;:::-;;:::i;:::-;;;345:25:1;;;333:2;318:18;177:212:0;;;;;;;442:148;;;;;;:::i;:::-;;:::i;177:212::-;225:4;250:2;246:1;:6;242:140;;;-1:-1:-1;276:1:0;;177:212;-1:-1:-1;177:212:0:o;242:140::-;303:2;299:1;:6;295:87;;;-1:-1:-1;329:1:0;;177:212;-1:-1:-1;177:212:0:o;295:87::-;-1:-1:-1;369:1:0;;177:212;-1:-1:-1;177:212:0:o;442:148::-;490:4;572:2;568:1;:6;:14;;581:1;568:14;;;577:1;568:14;561:21;;;442:148;-1:-1:-1;;442:148:0:o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "50000",
								"executionCost": "99",
								"totalCost": "50099"
							},
							"external": {
								"example(uint256)": "312",
								"ternary(uint256)": "322"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 154,
									"end": 593,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 154,
									"end": 593,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 154,
									"end": 593,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 154,
									"end": 593,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 593,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 154,
									"end": 593,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 154,
									"end": 593,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 154,
									"end": 593,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 593,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 154,
									"end": 593,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 593,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ef155273f70d5b953390784284046f85136c88421dfecb806fadc4ceb0b5cb7864736f6c634300080f0033",
									".code": [
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "477E4A02"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "55278C5B"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 154,
											"end": 593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 177,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 442,
											"end": 590,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 442,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 442,
											"end": 590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 442,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 590,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 442,
											"end": 590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 442,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 246,
											"end": 247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 246,
											"end": 252,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 242,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 242,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 242,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 177,
											"end": 389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 242,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 242,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 305,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 299,
											"end": 300,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 299,
											"end": 305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 295,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 295,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 295,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 329,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 329,
											"end": 330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 177,
											"end": 389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 295,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 369,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 177,
											"end": 389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 590,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 442,
											"end": 590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 490,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 568,
											"end": 569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 568,
											"end": 574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 568,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 568,
											"end": 582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 581,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 568,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 568,
											"end": 582,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 568,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 568,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 561,
											"end": 582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 442,
											"end": 590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 442,
											"end": 590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"solidity结构控制.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"example(uint256)": "477e4a02",
							"ternary(uint256)": "55278c5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"example\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"ternary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity\\u7ed3\\u6784\\u63a7\\u5236.sol\":\"IfElse\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity\\u7ed3\\u6784\\u63a7\\u5236.sol\":{\"keccak256\":\"0x2bc772680d856f5e1489b8774dd638c0c2cc0b0b9c968dee2824d378b6885187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4397b35253f329e689f39227c2bf4f845114bb6232e99ee12cb814f5228cd010\",\"dweb:/ipfs/QmYaVW6rHHD9jvDLL8EH4BHRdavS2CnFwZCRaS8uDQGwxf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"solidity结构控制.sol": {
				"ast": {
					"absolutePath": "solidity结构控制.sol",
					"exportedSymbols": {
						"IfElse": [
							42
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IfElse",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "IfElse",
							"nameLocation": "163:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "231:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "246:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "250:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "246:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 14,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "299:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3230",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "299:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 22,
														"nodeType": "Block",
														"src": "347:35:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "33",
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "369:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"functionReturnParameters": 7,
																"id": 21,
																"nodeType": "Return",
																"src": "362:8:0"
															}
														]
													},
													"id": 23,
													"nodeType": "IfStatement",
													"src": "295:87:0",
													"trueBody": {
														"id": 19,
														"nodeType": "Block",
														"src": "307:35:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "32",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "329:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"functionReturnParameters": 7,
																"id": 18,
																"nodeType": "Return",
																"src": "322:8:0"
															}
														]
													}
												},
												"id": 24,
												"nodeType": "IfStatement",
												"src": "242:140:0",
												"trueBody": {
													"id": 13,
													"nodeType": "Block",
													"src": "254:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "276:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 7,
															"id": 12,
															"nodeType": "Return",
															"src": "269:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "477e4a02",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "example",
									"nameLocation": "186:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "199:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "194:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:8:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "225:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "225:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:6:0"
									},
									"scope": 42,
									"src": "177:212:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "496:94:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 33,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "568:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3130",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "572:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "568:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "32",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "581:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "568:14:0",
													"trueExpression": {
														"hexValue": "31",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "577:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 32,
												"id": 39,
												"nodeType": "Return",
												"src": "561:21:0"
											}
										]
									},
									"functionSelector": "55278c5b",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "451:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "464:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "459:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "459:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:8:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "490:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:6:0"
									},
									"scope": 42,
									"src": "442:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 43,
							"src": "154:439:0",
							"usedErrors": []
						}
					],
					"src": "129:464:0"
				},
				"id": 0
			}
		}
	}
}