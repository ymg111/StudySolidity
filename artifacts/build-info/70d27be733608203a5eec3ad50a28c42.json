{
	"id": "70d27be733608203a5eec3ad50a28c42",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"自己写个矿池,定息矿池.sol": {
				"content": " // SPDX-License-Identifier: MIT  \r\n\r\npragma solidity ^0.8.7;  \r\n \r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint);\r\n\r\n    function balanceOf(address account) external view returns (uint);\r\n\r\n    function transfer(address recipient, uint amout) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint amout) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint amout) external returns (bool);\r\n\r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n\r\n}\r\n\r\ncontract StakeContract {\r\n    // uint public stakeTime;\r\n    uint public ratio;\r\n    address public staketoken;\r\n    address public totoken;\r\n    uint public stakeSupple;\r\n    address public owner;\r\n    \r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n    event transfer(address indexed to, uint amout);\r\n\r\n    struct User {\r\n        uint stakeNumber;\r\n        uint last_Stake_Time;\r\n        uint last_totoken_ratio;  \r\n        uint whole_ratio;\r\n        uint last_totoken_Time;\r\n        uint Clima_Number;\r\n    }\r\n\r\n    mapping(address => User) public User_Map;\r\n\r\n    constructor (address _staketoken, address _totoken) {\r\n        owner = msg.sender;\r\n        require(_staketoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_totoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_staketoken == _totoken,\"NEED agreement\");\r\n        staketoken = _staketoken;\r\n        totoken = _totoken;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner , \"not owner\");\r\n        _;\r\n    }\r\n\r\n    // function getStakeTime() public view returns (uint) {\r\n    //     return stakeTime;\r\n    // }\r\n\r\n    function setRatio(uint _ratio) external onlyOwner {    \r\n        ratio = _ratio;     \r\n    }\r\n\r\n    function Stake(uint _amount) public returns (bool){\r\n\r\n        IERC20(staketoken).transferFrom(msg.sender, address(this), _amount); \r\n\r\n        emit Trasfer(msg.sender, address(this), _amount);\r\n\r\n        User_Map[msg.sender].last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000)  ;\r\n        User_Map[msg.sender].stakeNumber += _amount;\r\n        User_Map[msg.sender].last_Stake_Time = block.timestamp;\r\n        stakeSupple += _amount;\r\n        User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time;\r\n        return true;  \r\n\r\n    }\r\n\r\n    function withDraw () public returns (bool) {\r\n        IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].stakeNumber);\r\n            \r\n        stakeSupple -= User_Map[msg.sender].stakeNumber;\r\n        User_Map[msg.sender].stakeNumber = 0;\r\n\r\n        return true;\r\n    }\r\n\r\n    function harvest() public returns (bool) {\r\n        User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n\r\n        IERC20(totoken).transfer(msg.sender,  User_Map[msg.sender].whole_ratio); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].whole_ratio);\r\n\r\n        User_Map[msg.sender].Clima_Number +=  User_Map[msg.sender].whole_ratio;\r\n        User_Map[msg.sender].whole_ratio = 0; \r\n        User_Map[msg.sender].last_totoken_ratio = 0;\r\n        User_Map[msg.sender].last_totoken_Time = block.timestamp;\r\n\r\n        return true;  \r\n    }\r\n         \r\n    // function withDrawtwo (uint _amount) public returns (bool) {\r\n    //     require(_amount <= User_Map[msg.sender].stakeNumber, \"buzu\");\r\n    //     IERC20(staketoken).transfer(msg.sender, _amount); \r\n    //     User_Map[msg.sender].stakeNumber -= _amount;\r\n    //     stakeSupple -= _amount;\r\n    //     return true;\r\n    // }\r\n\r\n\r\n    function newTotokenRatio() public view returns (uint) {\r\n        uint newtime = block.timestamp - User_Map[msg.sender].last_totoken_Time;\r\n        uint newTotokenRatione = newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n        return newTotokenRatione;  \r\n    }\r\n\r\n    function lastTotokenRatio()public view returns(uint) {\r\n        uint _lastTotokenRatio = User_Map[msg.sender].last_totoken_ratio;\r\n        return _lastTotokenRatio;\r\n    }\r\n     \r\n\r\n    function harvestwithDraw() public returns (bool) {\r\n        User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n        IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].whole_ratio);\r\n\r\n        User_Map[msg.sender].whole_ratio = 0;\r\n        User_Map[msg.sender].last_totoken_ratio = 0;\r\n\r\n        IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].stakeNumber);\r\n\r\n        User_Map[msg.sender].stakeNumber = 0;\r\n        stakeSupple -= User_Map[msg.sender].stakeNumber;\r\n        return true;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"自己写个矿池,定息矿池.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":{\"keccak256\":\"0x4f8af024af7bcf966268b9705c609bfe0e6d7aacd0eb07c7c97e6049bce371a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da498590f604a8798c684843698e8bd9c5b4df8577621d57bb4cf4227f4b9f3\",\"dweb:/ipfs/Qmb5KfXxu3kCX5yJjKrJDkmZj6KyybqamqoBunHo4popkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakeContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staketoken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_totoken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "User_Map",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakeNumber",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_Stake_Time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "whole_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_Time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "Clima_Number",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvestwithDraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTotokenRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newTotokenRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								}
							],
							"name": "setRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeSupple",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "staketoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withDraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5409  contract StakeContract {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1411:1749  constructor (address _staketoken, address _totoken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1474:1479  owner */\n  0x04\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1474:1492  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1482:1492  msg.sender */\n  caller\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1474:1492  owner = msg.sender */\n  or\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1511:1536  _staketoken != address(0) */\n  dup3\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1503:1556  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1503:1556  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x10\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:793   */\n  mstore\n    /* \"#utility.yul\":810:828   */\n  0x64\n  add\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1503:1556  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1575:1597  _totoken != address(0) */\n  dup2\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1567:1617  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1567:1617  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x10\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n  shl(0x80, 0x4e4f542c532030582041444452455353)\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:793   */\n  mstore\n    /* \"#utility.yul\":810:828   */\n  0x64\n  add\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1567:1617  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_7\n    /* \"#utility.yul\":494:834   */\n  jump\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1567:1617  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\ntag_9:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1651:1659  _totoken */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1636:1659  _staketoken == _totoken */\n  and\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1636:1647  _staketoken */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1636:1659  _staketoken == _totoken */\n  and\n  eq\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1628:1677  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1628:1677  require(_staketoken == _totoken,\"NEED agreement\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1023:1044   */\n  mstore\n    /* \"#utility.yul\":1080:1082   */\n  0x0e\n    /* \"#utility.yul\":1060:1078   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1053:1083   */\n  mstore\n  shl(0x92, 0x13915151081859dc99595b595b9d)\n    /* \"#utility.yul\":1099:1117   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1092:1136   */\n  mstore\n    /* \"#utility.yul\":1153:1171   */\n  0x64\n  add\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1628:1677  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_7\n    /* \"#utility.yul\":839:1177   */\n  jump\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1628:1677  require(_staketoken == _totoken,\"NEED agreement\") */\ntag_11:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1688:1698  staketoken */\n  0x01\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1688:1712  staketoken = _staketoken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1723:1730  totoken */\n  0x02\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1723:1741  totoken = _totoken */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5409  contract StakeContract {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_20:\n    /* \"#utility.yul\":375:415   */\n  tag_21\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_22\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":839:1177   */\ntag_16:\n    /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5409  contract StakeContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5409  contract StakeContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x71ca337d\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xb2237ba3\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb2237ba3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd942727f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdab2997b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfb5bca7a\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x71ca337d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8c93ecff\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x0fdb1c10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x227a473b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2c46502d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x529aca49\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5e9f4435\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2712:3063  function withDraw () public returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2712:3063  function withDraw () public returns (bool) {... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2062:2704  function Stake(uint _amount) public returns (bool){... */\n    tag_4:\n      tag_18\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":849:871  address public totoken */\n    tag_5:\n      sload(0x02)\n      tag_27\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_27:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":555:587   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":537:588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":525:527   */\n      0x20\n        /* \"#utility.yul\":510:528   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":849:871  address public totoken */\n      tag_20\n        /* \"#utility.yul\":391:594   */\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3071:3762  function harvest() public returns (bool) {... */\n    tag_6:\n      tag_18\n      tag_32\n      jump\t// in\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4116:4403  function newTotokenRatio() public view returns (uint) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":745:770   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4116:4403  function newTotokenRatio() public view returns (uint) {... */\n      tag_20\n        /* \"#utility.yul\":599:776   */\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4411:4582  function lastTotokenRatio()public view returns(uint) {... */\n    tag_8:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4509:4519  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4458:4462  uint */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4500:4520  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4500:4508  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4500:4520  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4500:4539  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4411:4582  function lastTotokenRatio()public view returns(uint) {... */\n      jump(tag_34)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":793:810  uint public ratio */\n    tag_9:\n      tag_34\n      sload(0x00)\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1362:1402  mapping(address => User) public User_Map */\n    tag_10:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      0x05\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      swap5\n      swap1\n      swap6\n      add\n      sload\n      swap3\n      swap5\n      swap2\n      swap4\n      swap1\n      swap3\n      dup7\n      jump\n    tag_44:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1359:1384   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":1415:1417   */\n      0x20\n        /* \"#utility.yul\":1400:1418   */\n      dup8\n      add\n        /* \"#utility.yul\":1393:1427   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":1443:1461   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":1436:1470   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1501:1503   */\n      0x60\n        /* \"#utility.yul\":1486:1504   */\n      dup5\n      add\n        /* \"#utility.yul\":1479:1513   */\n      mstore\n        /* \"#utility.yul\":1544:1547   */\n      0x80\n        /* \"#utility.yul\":1529:1548   */\n      dup4\n      add\n        /* \"#utility.yul\":1522:1557   */\n      mstore\n        /* \"#utility.yul\":1588:1591   */\n      0xa0\n        /* \"#utility.yul\":1573:1592   */\n      dup3\n      add\n        /* \"#utility.yul\":1566:1601   */\n      mstore\n        /* \"#utility.yul\":1346:1349   */\n      0xc0\n        /* \"#utility.yul\":1331:1350   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1362:1402  mapping(address => User) public User_Map */\n      tag_20\n        /* \"#utility.yul\":1072:1607   */\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":908:928  address public owner */\n    tag_11:\n      sload(0x04)\n      tag_27\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1962:2054  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_12:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":878:901  uint public stakeSupple */\n    tag_13:\n      tag_34\n      sload(0x03)\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":817:842  address public staketoken */\n    tag_14:\n      sload(0x01)\n      tag_27\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4597:5406  function harvestwithDraw() public returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_63\n      jump\t// in\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2712:3063  function withDraw () public returns (bool) {... */\n    tag_19:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2773:2783  staketoken */\n      sload(0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2794:2804  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2749:2753  bool */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2806:2826  User_Map[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2806:2814  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2806:2826  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2806:2838  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2766:2839  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1786:1837   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":1853:1871   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":1846:1880   */\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2749:2753  bool */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2773:2783  staketoken */\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2766:2793  IERC20(staketoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1759:1777   */\n      0x44\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2766:2839  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2867:2877  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2879:2899  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2879:2887  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2879:2899  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2879:2911  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2858:2912  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap2\n      mload\n        /* \"#utility.yul\":745:770   */\n      swap2\n      dup3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_6ee032249450bc73eb21baa464f9befee4ae388930c9f61a58862db0c63f30c1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2858:2912  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap2\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2858:2912  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2961:2971  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2952:2972  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2952:2960  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2952:2972  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2952:2984  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2948  stakeSupple */\n      0x03\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2984  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2952:2984  User_Map[msg.sender].stakeNumber */\n      swap2\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2948  stakeSupple */\n      swap1\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2984  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_73\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2952:2984  User_Map[msg.sender].stakeNumber */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2937:2984  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_74\n      jump\t// in\n    tag_73:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3004:3014  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3030:3031  0 */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2995:3015  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2995:3003  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2995:3015  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2995:3031  User_Map[msg.sender].stakeNumber = 0 */\n      sstore\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3051:3055  true */\n      0x01\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2712:3063  function withDraw () public returns (bool) {... */\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2062:2704  function Stake(uint _amount) public returns (bool){... */\n    tag_25:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2132:2142  staketoken */\n      sload(0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2125:2192  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2157:2167  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2125:2192  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2675:2709   */\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2177:2181  this */\n      address\n        /* \"#utility.yul\":2725:2743   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2718:2761   */\n      mstore\n        /* \"#utility.yul\":2777:2795   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2770:2804   */\n      dup4\n      swap1\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2107:2111  bool */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2132:2142  staketoken */\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2125:2156  IERC20(staketoken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2610:2628   */\n      0x64\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2125:2192  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_80:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2211:2254  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":745:770   */\n      dup3\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2239:2243  this */\n      address\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2219:2229  msg.sender */\n      caller\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2211:2254  Trasfer(msg.sender, address(this), _amount) */\n      0x1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c\n      swap1\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2211:2254  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2405:2410  ratio */\n      0x00\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2379:2389  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2370:2390  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2370:2378  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2370:2390  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2370:2402  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2419:2427  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2412:2415  100 */\n      0x64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2370:2410  User_Map[msg.sender].stakeNumber * ratio */\n      tag_82\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2405:2410  ratio */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2370:2410  User_Map[msg.sender].stakeNumber * ratio */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2370:2415  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2369:2427  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_86\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2337:2347  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2328:2348  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2328:2336  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2328:2348  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2328:2364  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2310:2364  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_87\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2310:2325  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2310:2364  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_74\n      jump\t// in\n    tag_87:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2309:2428  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_88\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_88:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2276:2286  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2267:2287  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2267:2275  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2267:2287  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2267:2306  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2267:2428  User_Map[msg.sender].last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2441:2484  User_Map[msg.sender].stakeNumber += _amount */\n      dup2\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2477:2484  _amount */\n      dup5\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2267:2287  User_Map[msg.sender] */\n      swap2\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2441:2484  User_Map[msg.sender].stakeNumber += _amount */\n      tag_89\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2477:2484  _amount */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2441:2484  User_Map[msg.sender].stakeNumber += _amount */\n      tag_90\n      jump\t// in\n    tag_89:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2504:2514  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2495:2515  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2495:2503  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2495:2515  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2534:2549  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2495:2531  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2495:2549  User_Map[msg.sender].last_Stake_Time = block.timestamp */\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2560:2571  stakeSupple */\n      0x03\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2560:2582  stakeSupple += _amount */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2575:2582  _amount */\n      dup5\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2495:2515  User_Map[msg.sender] */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2560:2582  stakeSupple += _amount */\n      tag_91\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2575:2582  _amount */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2560:2582  stakeSupple += _amount */\n      tag_90\n      jump\t// in\n    tag_91:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2643:2653  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2634:2654  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2634:2642  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2634:2654  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2634:2670  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      dup1\n      dup3\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2593:2631  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      swap1\n      swap3\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2593:2670  User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2634:2670  User_Map[msg.sender].last_Stake_Time */\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2062:2704  function Stake(uint _amount) public returns (bool){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3071:3762  function harvest() public returns (bool) {... */\n    tag_32:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3106:3110  bool */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3296:3301  ratio */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3270:3280  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3261:3281  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3261:3269  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3261:3281  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3261:3293  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3310:3318  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3303:3306  100 */\n      0x64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3261:3301  User_Map[msg.sender].stakeNumber * ratio */\n      tag_93\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3296:3301  ratio */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3261:3301  User_Map[msg.sender].stakeNumber * ratio */\n      tag_83\n      jump\t// in\n    tag_93:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3261:3306  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_94\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_94:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3260:3318  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_95\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_95:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3228:3238  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3219:3239  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3219:3227  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3219:3239  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3219:3255  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3201:3255  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_96\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3201:3216  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3201:3255  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_74\n      jump\t// in\n    tag_96:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3200:3319  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_97\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_97:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3167:3177  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3158:3178  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3158:3166  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3158:3178  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3158:3197  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3158:3319  User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_98\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_98:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3132:3142  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3123:3143  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3123:3131  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3123:3143  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3123:3155  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3123:3319  User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      dup4\n      swap1\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3339:3346  totoken */\n      sload(0x02)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3332:3403  IERC20(totoken).transfer(msg.sender,  User_Map[msg.sender].whole_ratio) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1786:1837   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1853:1871   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1846:1880   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3339:3346  totoken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3332:3356  IERC20(totoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1759:1777   */\n      0x44\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3332:3403  IERC20(totoken).transfer(msg.sender,  User_Map[msg.sender].whole_ratio) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_102:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3431:3441  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3443:3463  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3443:3451  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3443:3463  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3443:3475  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3422:3476  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap2\n      mload\n        /* \"#utility.yul\":745:770   */\n      swap2\n      dup3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_6ee032249450bc73eb21baa464f9befee4ae388930c9f61a58862db0c63f30c1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3422:3476  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap2\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3422:3476  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3536:3546  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3527:3547  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3527:3535  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3527:3547  User_Map[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3527:3559  User_Map[msg.sender].whole_ratio */\n      0x03\n      dup2\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3489:3522  User_Map[msg.sender].Clima_Number */\n      swap2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3489:3559  User_Map[msg.sender].Clima_Number +=  User_Map[msg.sender].whole_ratio */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3527:3559  User_Map[msg.sender].whole_ratio */\n      swap2\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3489:3522  User_Map[msg.sender].Clima_Number */\n      swap1\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3489:3559  User_Map[msg.sender].Clima_Number +=  User_Map[msg.sender].whole_ratio */\n      tag_104\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3527:3559  User_Map[msg.sender].whole_ratio */\n      dup5\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3489:3559  User_Map[msg.sender].Clima_Number +=  User_Map[msg.sender].whole_ratio */\n      tag_90\n      jump\t// in\n    tag_104:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3579:3589  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3605:3606  0 */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3570:3590  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3570:3578  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3570:3590  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3570:3602  User_Map[msg.sender].whole_ratio */\n      0x03\n      dup2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3570:3606  User_Map[msg.sender].whole_ratio = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3618:3657  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3618:3661  User_Map[msg.sender].last_totoken_ratio = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3713:3728  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3672:3710  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      swap1\n      swap2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3672:3728  User_Map[msg.sender].last_totoken_Time = block.timestamp */\n      sstore\n      pop\n      0x01\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3071:3762  function harvest() public returns (bool) {... */\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4116:4403  function newTotokenRatio() public view returns (uint) {... */\n    tag_35:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4223:4233  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4164:4168  uint */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4214:4234  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4214:4222  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4214:4234  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4214:4252  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4164:4168  uint */\n      dup2\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4196:4252  block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      tag_106\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4196:4211  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4196:4252  block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      tag_74\n      jump\t// in\n    tag_106:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4263:4285  uint newTotokenRatione */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4335:4340  ratio */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4309:4319  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4300:4320  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4300:4308  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4300:4320  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4300:4332  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4181:4252  uint newtime = block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      swap3\n      swap4\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4263:4285  uint newTotokenRatione */\n      swap1\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4349:4357  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4342:4345  100 */\n      0x64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4300:4340  User_Map[msg.sender].stakeNumber * ratio */\n      tag_107\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4335:4340  ratio */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4300:4340  User_Map[msg.sender].stakeNumber * ratio */\n      tag_83\n      jump\t// in\n    tag_107:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4300:4345  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_108\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_108:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4299:4357  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_109\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_109:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4288:4358  newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_110\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4288:4295  newtime */\n      dup4\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4288:4358  newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_83\n      jump\t// in\n    tag_110:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4263:4358  uint newTotokenRatione = newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      swap4\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4116:4403  function newTotokenRatio() public view returns (uint) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1962:2054  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_55:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1811:1816  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1797:1807  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1797:1816  msg.sender == owner */\n      eq\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1789:1831  require(msg.sender == owner , \"not owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3545:3547   */\n      0x20\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1789:1831  require(msg.sender == owner , \"not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3527:3548   */\n      mstore\n        /* \"#utility.yul\":3584:3585   */\n      0x09\n        /* \"#utility.yul\":3564:3582   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3557:3586   */\n      mstore\n      shl(0xb9, 0x3737ba1037bbb732b9)\n        /* \"#utility.yul\":3602:3620   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3595:3634   */\n      mstore\n        /* \"#utility.yul\":3651:3669   */\n      0x64\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1789:1831  require(msg.sender == owner , \"not owner\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2027:2032  ratio */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2027:2041  ratio = _ratio */\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1962:2054  function setRatio(uint _ratio) external onlyOwner {    ... */\n      jump\t// out\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4597:5406  function harvestwithDraw() public returns (bool) {... */\n    tag_63:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4640:4644  bool */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4830:4835  ratio */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4804:4814  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4795:4815  User_Map[msg.sender] */\n      dup3\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4795:4803  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4795:4815  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4795:4827  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4844:4852  31536000 */\n      0x01e13380\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4837:4840  100 */\n      0x64\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4795:4835  User_Map[msg.sender].stakeNumber * ratio */\n      tag_118\n      swap2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4830:4835  ratio */\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4795:4835  User_Map[msg.sender].stakeNumber * ratio */\n      tag_83\n      jump\t// in\n    tag_118:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4795:4840  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_119\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_119:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4794:4852  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_120\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_120:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4762:4772  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4753:4773  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4753:4761  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4753:4773  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4753:4789  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4735:4789  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_121\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4735:4750  block.timestamp */\n      timestamp\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4735:4789  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_74\n      jump\t// in\n    tag_121:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4734:4853  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_122\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_122:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4701:4711  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4692:4712  User_Map[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4692:4700  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4692:4712  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4692:4731  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4692:4853  User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_123\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_123:\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4666:4676  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4657:4677  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4657:4665  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4657:4677  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4657:4689  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4657:4853  User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      dup4\n      swap1\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4871:4878  totoken */\n      sload(0x02)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4864:4934  IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1786:1837   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1853:1871   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1846:1880   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4871:4878  totoken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4864:4888  IERC20(totoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1759:1777   */\n      0x44\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4864:4934  IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_127:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4962:4972  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4974:4994  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4974:4982  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4974:4994  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4974:5006  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4953:5007  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap2\n      mload\n        /* \"#utility.yul\":745:770   */\n      swap2\n      dup3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_6ee032249450bc73eb21baa464f9befee4ae388930c9f61a58862db0c63f30c1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4953:5007  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      swap2\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4953:5007  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5029:5039  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5055:5056  0 */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5020:5040  User_Map[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5020:5028  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5020:5040  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5020:5052  User_Map[msg.sender].whole_ratio */\n      0x03\n      dup2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5020:5056  User_Map[msg.sender].whole_ratio = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5067:5106  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      dup2\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5067:5110  User_Map[msg.sender].last_totoken_ratio = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n      0x01\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5130:5140  staketoken */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5163:5195  User_Map[msg.sender].stakeNumber */\n      swap2\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5123:5196  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1786:1837   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":1853:1871   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":1846:1880   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5130:5140  staketoken */\n      and\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5123:5150  IERC20(staketoken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1759:1777   */\n      0x44\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5123:5196  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_132:\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5224:5234  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5236:5256  User_Map[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5236:5244  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5236:5256  User_Map[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5236:5268  User_Map[msg.sender].stakeNumber */\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5215:5269  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap2\n      mload\n        /* \"#utility.yul\":745:770   */\n      swap2\n      dup3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_6ee032249450bc73eb21baa464f9befee4ae388930c9f61a58862db0c63f30c1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5215:5269  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      swap2\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5215:5269  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5291:5301  msg.sender */\n      caller\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5317:5318  0 */\n      0x00\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5282:5302  User_Map[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5282:5290  User_Map */\n      0x05\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5282:5302  User_Map[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5282:5318  User_Map[msg.sender].stakeNumber = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5329:5340  stakeSupple */\n      0x03\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5329:5376  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      dup1\n      sload\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5317:5318  0 */\n      dup3\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5329:5376  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_134\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5317:5318  0 */\n      dup3\n      swap1\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5329:5376  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      tag_74\n      jump\t// in\n    tag_134:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":5394:5398  true */\n      0x01\n      swap3\n        /* \"\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4597:5406  function harvestwithDraw() public returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":206:386   */\n    tag_24:\n        /* \"#utility.yul\":265:271   */\n      0x00\n        /* \"#utility.yul\":318:320   */\n      0x20\n        /* \"#utility.yul\":306:315   */\n      dup3\n        /* \"#utility.yul\":297:304   */\n      dup5\n        /* \"#utility.yul\":293:316   */\n      sub\n        /* \"#utility.yul\":289:321   */\n      slt\n        /* \"#utility.yul\":286:338   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":334:335   */\n      0x00\n        /* \"#utility.yul\":331:332   */\n      dup1\n        /* \"#utility.yul\":324:336   */\n      revert\n        /* \"#utility.yul\":286:338   */\n    tag_139:\n      pop\n        /* \"#utility.yul\":357:380   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":206:386   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1067   */\n    tag_46:\n        /* \"#utility.yul\":840:846   */\n      0x00\n        /* \"#utility.yul\":893:895   */\n      0x20\n        /* \"#utility.yul\":881:890   */\n      dup3\n        /* \"#utility.yul\":872:879   */\n      dup5\n        /* \"#utility.yul\":868:891   */\n      sub\n        /* \"#utility.yul\":864:896   */\n      slt\n        /* \"#utility.yul\":861:913   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      dup1\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":861:913   */\n    tag_143:\n        /* \"#utility.yul\":935:958   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":987:1018   */\n      dup2\n      and\n        /* \"#utility.yul\":977:1019   */\n      dup2\n      eq\n        /* \"#utility.yul\":967:1037   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1030:1031   */\n      dup1\n        /* \"#utility.yul\":1023:1035   */\n      revert\n        /* \"#utility.yul\":1891:2168   */\n    tag_71:\n        /* \"#utility.yul\":1958:1964   */\n      0x00\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":1999:2008   */\n      dup3\n        /* \"#utility.yul\":1990:1997   */\n      dup5\n        /* \"#utility.yul\":1986:2009   */\n      sub\n        /* \"#utility.yul\":1982:2014   */\n      slt\n        /* \"#utility.yul\":1979:2031   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2027:2028   */\n      0x00\n        /* \"#utility.yul\":2024:2025   */\n      dup1\n        /* \"#utility.yul\":2017:2029   */\n      revert\n        /* \"#utility.yul\":1979:2031   */\n    tag_148:\n        /* \"#utility.yul\":2059:2068   */\n      dup2\n        /* \"#utility.yul\":2053:2069   */\n      mload\n        /* \"#utility.yul\":2112:2117   */\n      dup1\n        /* \"#utility.yul\":2105:2118   */\n      iszero\n        /* \"#utility.yul\":2098:2119   */\n      iszero\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2088:2120   */\n      eq\n        /* \"#utility.yul\":2078:2138   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2134:2135   */\n      0x00\n        /* \"#utility.yul\":2131:2132   */\n      dup1\n        /* \"#utility.yul\":2124:2136   */\n      revert\n        /* \"#utility.yul\":2173:2300   */\n    tag_135:\n        /* \"#utility.yul\":2234:2244   */\n      0x4e487b71\n        /* \"#utility.yul\":2229:2232   */\n      0xe0\n        /* \"#utility.yul\":2225:2245   */\n      shl\n        /* \"#utility.yul\":2222:2223   */\n      0x00\n        /* \"#utility.yul\":2215:2246   */\n      mstore\n        /* \"#utility.yul\":2265:2269   */\n      0x11\n        /* \"#utility.yul\":2262:2263   */\n      0x04\n        /* \"#utility.yul\":2255:2270   */\n      mstore\n        /* \"#utility.yul\":2289:2293   */\n      0x24\n        /* \"#utility.yul\":2286:2287   */\n      0x00\n        /* \"#utility.yul\":2279:2294   */\n      revert\n        /* \"#utility.yul\":2305:2430   */\n    tag_74:\n        /* \"#utility.yul\":2345:2349   */\n      0x00\n        /* \"#utility.yul\":2373:2374   */\n      dup3\n        /* \"#utility.yul\":2370:2371   */\n      dup3\n        /* \"#utility.yul\":2367:2375   */\n      lt\n        /* \"#utility.yul\":2364:2398   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":2378:2396   */\n      tag_153\n      tag_135\n      jump\t// in\n    tag_153:\n      pop\n        /* \"#utility.yul\":2415:2424   */\n      sub\n      swap1\n        /* \"#utility.yul\":2305:2430   */\n      jump\t// out\n        /* \"#utility.yul\":2815:2983   */\n    tag_83:\n        /* \"#utility.yul\":2855:2862   */\n      0x00\n        /* \"#utility.yul\":2921:2922   */\n      dup2\n        /* \"#utility.yul\":2917:2918   */\n      0x00\n        /* \"#utility.yul\":2913:2919   */\n      not\n        /* \"#utility.yul\":2909:2923   */\n      div\n        /* \"#utility.yul\":2906:2907   */\n      dup4\n        /* \"#utility.yul\":2903:2924   */\n      gt\n        /* \"#utility.yul\":2898:2899   */\n      dup3\n        /* \"#utility.yul\":2891:2900   */\n      iszero\n        /* \"#utility.yul\":2884:2901   */\n      iszero\n        /* \"#utility.yul\":2880:2925   */\n      and\n        /* \"#utility.yul\":2877:2948   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":2928:2946   */\n      tag_157\n      tag_135\n      jump\t// in\n    tag_157:\n      pop\n        /* \"#utility.yul\":2968:2977   */\n      mul\n      swap1\n        /* \"#utility.yul\":2815:2983   */\n      jump\t// out\n        /* \"#utility.yul\":2988:3205   */\n    tag_85:\n        /* \"#utility.yul\":3028:3029   */\n      0x00\n        /* \"#utility.yul\":3054:3055   */\n      dup3\n        /* \"#utility.yul\":3044:3176   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3098:3108   */\n      0x4e487b71\n        /* \"#utility.yul\":3093:3096   */\n      0xe0\n        /* \"#utility.yul\":3089:3109   */\n      shl\n        /* \"#utility.yul\":3086:3087   */\n      0x00\n        /* \"#utility.yul\":3079:3110   */\n      mstore\n        /* \"#utility.yul\":3133:3137   */\n      0x12\n        /* \"#utility.yul\":3130:3131   */\n      0x04\n        /* \"#utility.yul\":3123:3138   */\n      mstore\n        /* \"#utility.yul\":3161:3165   */\n      0x24\n        /* \"#utility.yul\":3158:3159   */\n      0x00\n        /* \"#utility.yul\":3151:3166   */\n      revert\n        /* \"#utility.yul\":3044:3176   */\n    tag_159:\n      pop\n        /* \"#utility.yul\":3190:3199   */\n      div\n      swap1\n        /* \"#utility.yul\":2988:3205   */\n      jump\t// out\n        /* \"#utility.yul\":3210:3338   */\n    tag_90:\n        /* \"#utility.yul\":3250:3253   */\n      0x00\n        /* \"#utility.yul\":3281:3282   */\n      dup3\n        /* \"#utility.yul\":3277:3283   */\n      not\n        /* \"#utility.yul\":3274:3275   */\n      dup3\n        /* \"#utility.yul\":3271:3284   */\n      gt\n        /* \"#utility.yul\":3268:3307   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":3287:3305   */\n      tag_162\n      tag_135\n      jump\t// in\n    tag_162:\n      pop\n        /* \"#utility.yul\":3323:3332   */\n      add\n      swap1\n        /* \"#utility.yul\":3210:3338   */\n      jump\t// out\n    stop\n    data_6ee032249450bc73eb21baa464f9befee4ae388930c9f61a58862db0c63f30c1 a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n\n    auxdata: 0xa26469706673582212200a3cb1cf09f1f76a5707d96cb13549da496ce85ccbe0eb38db58d37bc575e76964736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1179:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:1"
															},
															"nodeType": "YulIf",
															"src": "304:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													}
												],
												"src": "196:293:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "668:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "696:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "678:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "730:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "708:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "769:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:1"
																	},
																	{
																		"hexValue": "4e4f542c532030582041444452455353",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "774:18:1",
																		"type": "",
																		"value": "NOT,S 0X ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "802:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "814:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "802:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "645:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "659:4:1",
														"type": ""
													}
												],
												"src": "494:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1013:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1030:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1023:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1075:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1053:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1114:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1099:18:1"
																	},
																	{
																		"hexValue": "4e4545442061677265656d656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1119:16:1",
																		"type": "",
																		"value": "NEED agreement"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1145:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1157:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1168:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1153:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1145:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "990:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1004:4:1",
														"type": ""
													}
												],
												"src": "839:338:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"NOT,S 0X ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"NEED agreement\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610c34380380610c3483398101604081905261002f91610177565b600480546001600160a01b031916331790556001600160a01b03821661008f5760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b60448201526064015b60405180910390fd5b6001600160a01b0381166100d85760405162461bcd60e51b815260206004820152601060248201526f4e4f542c53203058204144445245535360801b6044820152606401610086565b806001600160a01b0316826001600160a01b03161461012a5760405162461bcd60e51b815260206004820152600e60248201526d13915151081859dc99595b595b9d60921b6044820152606401610086565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556101aa565b80516001600160a01b038116811461017257600080fd5b919050565b6000806040838503121561018a57600080fd5b6101938361015b565b91506101a16020840161015b565b90509250929050565b610a7b806101b96000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806371ca337d1161008c578063b2237ba311610066578063b2237ba3146101f1578063d942727f14610206578063dab2997b1461020f578063fb5bca7a1461022257600080fd5b806371ca337d146101655780638c93ecff1461016e5780638da5cb5b146101de57600080fd5b80630fdb1c10146100d4578063227a473b146100f15780632c46502d146101045780634641257d1461012f578063529aca49146101375780635e9f44351461014d575b600080fd5b6100dc61022a565b60405190151581526020015b60405180910390f35b6100dc6100ff36600461093b565b61031f565b600254610117906001600160a01b031681565b6040516001600160a01b0390911681526020016100e8565b6100dc6104b1565b61013f61064a565b6040519081526020016100e8565b3360009081526005602052604090206002015461013f565b61013f60005481565b6101b161017c366004610954565b600560208190526000918252604090912080546001820154600283015460038401546004850154949095015492949193909286565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016100e8565b600454610117906001600160a01b031681565b6102046101ff36600461093b565b6106b7565b005b61013f60035481565b600154610117906001600160a01b031681565b6100dc610706565b6001543360008181526005602052604080822054905163a9059cbb60e01b815260048101939093526024830152916001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae919061097d565b5033600081815260056020908152604091829020549151918252600080516020610a26833981519152910160405180910390a23360009081526005602052604081205460038054919290916103049084906109b5565b90915550503360009081526005602052604081205550600190565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039b919061097d565b50604051828152309033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a36000805433825260056020526040909120546301e13380916064916103f891906109cc565b61040291906109eb565b61040c91906109eb565b3360009081526005602052604090206001015461042990426109b5565b61043391906109cc565b336000908152600560205260408120600281019290925581548492919061045b908490610a0d565b90915550503360009081526005602052604081204260019091015560038054849290610488908490610a0d565b909155505033600090815260056020526040902060018082015460049092019190915592915050565b60008054338252600560205260408220546301e13380916064916104d591906109cc565b6104df91906109eb565b6104e991906109eb565b3360009081526005602052604090206001015461050690426109b5565b61051091906109cc565b3360009081526005602052604090206002015461052d9190610a0d565b3360008181526005602052604090819020600301839055600254905163a9059cbb60e01b8152600481019290925260248201929092526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb919061097d565b5033600081815260056020908152604091829020600301549151918252600080516020610a26833981519152910160405180910390a233600090815260056020819052604082206003810154910180549192909161061a908490610a0d565b90915550503360009081526005602052604081206003810182905560028101919091554260049091015550600190565b33600090815260056020526040812060040154819061066990426109b5565b600080543382526005602052604082205492935090916301e133809160649161069291906109cc565b61069c91906109eb565b6106a691906109eb565b6106b090836109cc565b9392505050565b6004546001600160a01b031633146107015760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640160405180910390fd5b600055565b60008054338252600560205260408220546301e133809160649161072a91906109cc565b61073491906109eb565b61073e91906109eb565b3360009081526005602052604090206001015461075b90426109b5565b61076591906109cc565b336000908152600560205260409020600201546107829190610a0d565b3360008181526005602052604090819020600301839055600254905163a9059cbb60e01b8152600481019290925260248201929092526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610810919061097d565b5033600081815260056020908152604091829020600301549151918252600080516020610a26833981519152910160405180910390a2336000818152600560205260408082206003810183905560028101929092556001549154905163a9059cbb60e01b8152600481019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d9919061097d565b5033600081815260056020908152604091829020549151918252600080516020610a26833981519152910160405180910390a233600090815260056020526040812081905560038054829061092f9082906109b5565b90915550600192915050565b60006020828403121561094d57600080fd5b5035919050565b60006020828403121561096657600080fd5b81356001600160a01b03811681146106b057600080fd5b60006020828403121561098f57600080fd5b815180151581146106b057600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156109c7576109c761099f565b500390565b60008160001904831182151516156109e6576109e661099f565b500290565b600082610a0857634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610a2057610a2061099f565b50019056fea9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049ba26469706673582212200a3cb1cf09f1f76a5707d96cb13549da496ce85ccbe0eb38db58d37bc575e76964736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC34 CODESIZE SUB DUP1 PUSH2 0xC34 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E4F542C532030582041444452455353 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x13915151081859DC99595B595B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x1AA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 DUP4 PUSH2 0x15B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A1 PUSH1 0x20 DUP5 ADD PUSH2 0x15B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7B DUP1 PUSH2 0x1B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71CA337D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB2237BA3 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xFB5BCA7A EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71CA337D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x2C46502D EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x529ACA49 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x5E9F4435 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x117 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x13F PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP5 SWAP1 SWAP6 ADD SLOAD SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x117 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x117 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x706 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x304 SWAP1 DUP5 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x429 SWAP1 TIMESTAMP PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP5 SWAP3 SWAP2 SWAP1 PUSH2 0x45B SWAP1 DUP5 SWAP1 PUSH2 0xA0D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x488 SWAP1 DUP5 SWAP1 PUSH2 0xA0D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x506 SWAP1 TIMESTAMP PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0xA0D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD SWAP2 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x61A SWAP1 DUP5 SWAP1 PUSH2 0xA0D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH2 0x669 SWAP1 TIMESTAMP PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x6B0 SWAP1 DUP4 PUSH2 0x9CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x734 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x75B SWAP1 TIMESTAMP PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x765 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x782 SWAP2 SWAP1 PUSH2 0xA0D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 SLOAD SWAP2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 PUSH2 0x92F SWAP1 DUP3 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9C7 JUMPI PUSH2 0x9C7 PUSH2 0x99F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0x99F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA08 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA20 JUMPI PUSH2 0xA20 PUSH2 0x99F JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID 0xA9 SDIV SWAP13 0xBB 0x2A 0xB0 SWAP15 0xB2 NOT PC EXTCODEHASH 0x4A MSIZE 0xA5 0xD0 PUSH3 0x3ADE34 PUSH14 0x962BCD4E46B11DA047C9049BA264 PUSH10 0x706673582212200A3CB1 0xCF MULMOD CALL 0xF7 PUSH11 0x5707D96CB13549DA496CE8 0x5C 0xCB 0xE0 0xEB CODESIZE 0xDB PC 0xD3 PUSH28 0xC575E76964736F6C634300080F003300000000000000000000000000 ",
							"sourceMap": "732:4677:0:-:0;;;1411:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1474:5;:18;;-1:-1:-1;;;;;;1474:18:0;1482:10;1474:18;;;-1:-1:-1;;;;;1511:25:0;;1503:53;;;;-1:-1:-1;;;1503:53:0;;696:2:1;1503:53:0;;;678:21:1;735:2;715:18;;;708:30;-1:-1:-1;;;754:18:1;;;747:46;810:18;;1503:53:0;;;;;;;;;-1:-1:-1;;;;;1575:22:0;;1567:50;;;;-1:-1:-1;;;1567:50:0;;696:2:1;1567:50:0;;;678:21:1;735:2;715:18;;;708:30;-1:-1:-1;;;754:18:1;;;747:46;810:18;;1567:50:0;494:340:1;1567:50:0;1651:8;-1:-1:-1;;;;;1636:23:0;:11;-1:-1:-1;;;;;1636:23:0;;1628:49;;;;-1:-1:-1;;;1628:49:0;;1041:2:1;1628:49:0;;;1023:21:1;1080:2;1060:18;;;1053:30;-1:-1:-1;;;1099:18:1;;;1092:44;1153:18;;1628:49:0;839:338:1;1628:49:0;1688:10;:24;;-1:-1:-1;;;;;1688:24:0;;;-1:-1:-1;;;;;;1688:24:0;;;;;;;1723:7;:18;;;;;;;;;;;732:4677;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;839:338::-;732:4677:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Stake_286": {
									"entryPoint": 799,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@User_Map_118": {
									"entryPoint": null,
									"id": 118,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvest_437": {
									"entryPoint": 1201,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@harvestwithDraw_612": {
									"entryPoint": 1798,
									"id": 612,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastTotokenRatio_490": {
									"entryPoint": null,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@newTotokenRatio_474": {
									"entryPoint": 1610,
									"id": 474,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ratio_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRatio_190": {
									"entryPoint": 1719,
									"id": 190,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeSupple_76": {
									"entryPoint": null,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staketoken_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totoken_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withDraw_333": {
									"entryPoint": 554,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3677:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "154:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "78:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "89:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "100:4:1",
														"type": ""
													}
												],
												"src": "14:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "276:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "322:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "331:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "324:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "324:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "324:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "297:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "306:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "293:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "293:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "318:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "289:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "289:32:1"
															},
															"nodeType": "YulIf",
															"src": "286:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "347:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "370:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "357:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "347:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "242:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "253:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "265:6:1",
														"type": ""
													}
												],
												"src": "206:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "492:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "502:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "514:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "502:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "559:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "575:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "580:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "571:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "571:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "584:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "567:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "567:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "537:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "461:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "472:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "483:4:1",
														"type": ""
													}
												],
												"src": "391:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "710:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "722:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "718:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "710:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "763:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "669:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "680:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "691:4:1",
														"type": ""
													}
												],
												"src": "599:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "872:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "881:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "864:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:32:1"
															},
															"nodeType": "YulIf",
															"src": "861:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "935:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "926:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1021:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1030:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1023:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "980:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "991:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1006:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1011:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1002:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1002:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1015:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "998:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "998:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "977:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:50:1"
															},
															"nodeType": "YulIf",
															"src": "967:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1046:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1056:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1046:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "817:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "828:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "840:6:1",
														"type": ""
													}
												],
												"src": "781:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1313:294:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1323:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1335:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1331:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1323:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1366:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1377:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1359:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1404:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1415:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1420:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1393:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1447:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1458:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1443:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1443:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1463:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1436:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1436:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1436:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1490:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1501:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1486:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1506:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1479:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1479:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1479:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1544:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1529:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1550:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1522:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1522:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1577:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1588:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1573:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "1594:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1566:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1566:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1253:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1261:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1269:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1285:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1304:4:1",
														"type": ""
													}
												],
												"src": "1072:535:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1741:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1751:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1763:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1774:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1759:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1751:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1793:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1808:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1824:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1829:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1820:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1820:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1833:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1816:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1816:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1804:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1786:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1786:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1857:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1868:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1853:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1873:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1846:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1846:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1702:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1713:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1721:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1732:4:1",
														"type": ""
													}
												],
												"src": "1612:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1969:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2015:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2027:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2017:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2017:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2017:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1990:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1999:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1986:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1986:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1982:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1982:32:1"
															},
															"nodeType": "YulIf",
															"src": "1979:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2040:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2059:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2053:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2044:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2122:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2134:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2124:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2124:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2124:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2091:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2112:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2105:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2105:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2098:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2098:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2088:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2088:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:40:1"
															},
															"nodeType": "YulIf",
															"src": "2078:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2147:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2157:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1935:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1946:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1958:6:1",
														"type": ""
													}
												],
												"src": "1891:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2205:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2222:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2229:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2234:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2215:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2265:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2255:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2255:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2286:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2289:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2279:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2279:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2173:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2354:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2376:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2378:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2378:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2378:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2370:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2373:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2367:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2367:8:1"
															},
															"nodeType": "YulIf",
															"src": "2364:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2407:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2419:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2422:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2415:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2407:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2336:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2339:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2345:4:1",
														"type": ""
													}
												],
												"src": "2305:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2592:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2602:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2614:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2625:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2610:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2610:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2602:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2637:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2660:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2651:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2651:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2647:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2641:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2682:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2697:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2705:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2693:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2675:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2729:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2740:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2749:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2757:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2745:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2718:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2718:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2781:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2792:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2777:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2777:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2797:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2770:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2770:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2770:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2545:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2556:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2564:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2572:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2583:4:1",
														"type": ""
													}
												],
												"src": "2435:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2867:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2926:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2928:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2928:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2928:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2898:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2891:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2891:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2884:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2884:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2906:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2917:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2913:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2913:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2921:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2909:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2909:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2903:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2903:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2880:45:1"
															},
															"nodeType": "YulIf",
															"src": "2877:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2957:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2972:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2975:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2968:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2957:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2846:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2849:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2855:7:1",
														"type": ""
													}
												],
												"src": "2815:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3065:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3086:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3093:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3098:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3089:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3089:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3079:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3079:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3079:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3130:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3133:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3123:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3123:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3123:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3158:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3161:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3151:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3151:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3151:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3054:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:9:1"
															},
															"nodeType": "YulIf",
															"src": "3044:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3185:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3194:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3197:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3190:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3185:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3019:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3022:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3028:1:1",
														"type": ""
													}
												],
												"src": "2988:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3258:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3285:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3287:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3287:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3287:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3274:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3281:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3277:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3271:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:13:1"
															},
															"nodeType": "YulIf",
															"src": "3268:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3316:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3327:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3330:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3323:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3316:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3241:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3244:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3250:3:1",
														"type": ""
													}
												],
												"src": "3210:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3517:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3534:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3545:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3527:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3564:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3564:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3557:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3606:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3617:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3602:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3602:18:1"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3622:11:1",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3643:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3655:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3666:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3651:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3643:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3494:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3508:4:1",
														"type": ""
													}
												],
												"src": "3343:332:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"not owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806371ca337d1161008c578063b2237ba311610066578063b2237ba3146101f1578063d942727f14610206578063dab2997b1461020f578063fb5bca7a1461022257600080fd5b806371ca337d146101655780638c93ecff1461016e5780638da5cb5b146101de57600080fd5b80630fdb1c10146100d4578063227a473b146100f15780632c46502d146101045780634641257d1461012f578063529aca49146101375780635e9f44351461014d575b600080fd5b6100dc61022a565b60405190151581526020015b60405180910390f35b6100dc6100ff36600461093b565b61031f565b600254610117906001600160a01b031681565b6040516001600160a01b0390911681526020016100e8565b6100dc6104b1565b61013f61064a565b6040519081526020016100e8565b3360009081526005602052604090206002015461013f565b61013f60005481565b6101b161017c366004610954565b600560208190526000918252604090912080546001820154600283015460038401546004850154949095015492949193909286565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016100e8565b600454610117906001600160a01b031681565b6102046101ff36600461093b565b6106b7565b005b61013f60035481565b600154610117906001600160a01b031681565b6100dc610706565b6001543360008181526005602052604080822054905163a9059cbb60e01b815260048101939093526024830152916001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae919061097d565b5033600081815260056020908152604091829020549151918252600080516020610a26833981519152910160405180910390a23360009081526005602052604081205460038054919290916103049084906109b5565b90915550503360009081526005602052604081205550600190565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039b919061097d565b50604051828152309033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a36000805433825260056020526040909120546301e13380916064916103f891906109cc565b61040291906109eb565b61040c91906109eb565b3360009081526005602052604090206001015461042990426109b5565b61043391906109cc565b336000908152600560205260408120600281019290925581548492919061045b908490610a0d565b90915550503360009081526005602052604081204260019091015560038054849290610488908490610a0d565b909155505033600090815260056020526040902060018082015460049092019190915592915050565b60008054338252600560205260408220546301e13380916064916104d591906109cc565b6104df91906109eb565b6104e991906109eb565b3360009081526005602052604090206001015461050690426109b5565b61051091906109cc565b3360009081526005602052604090206002015461052d9190610a0d565b3360008181526005602052604090819020600301839055600254905163a9059cbb60e01b8152600481019290925260248201929092526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb919061097d565b5033600081815260056020908152604091829020600301549151918252600080516020610a26833981519152910160405180910390a233600090815260056020819052604082206003810154910180549192909161061a908490610a0d565b90915550503360009081526005602052604081206003810182905560028101919091554260049091015550600190565b33600090815260056020526040812060040154819061066990426109b5565b600080543382526005602052604082205492935090916301e133809160649161069291906109cc565b61069c91906109eb565b6106a691906109eb565b6106b090836109cc565b9392505050565b6004546001600160a01b031633146107015760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640160405180910390fd5b600055565b60008054338252600560205260408220546301e133809160649161072a91906109cc565b61073491906109eb565b61073e91906109eb565b3360009081526005602052604090206001015461075b90426109b5565b61076591906109cc565b336000908152600560205260409020600201546107829190610a0d565b3360008181526005602052604090819020600301839055600254905163a9059cbb60e01b8152600481019290925260248201929092526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610810919061097d565b5033600081815260056020908152604091829020600301549151918252600080516020610a26833981519152910160405180910390a2336000818152600560205260408082206003810183905560028101929092556001549154905163a9059cbb60e01b8152600481019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d9919061097d565b5033600081815260056020908152604091829020549151918252600080516020610a26833981519152910160405180910390a233600090815260056020526040812081905560038054829061092f9082906109b5565b90915550600192915050565b60006020828403121561094d57600080fd5b5035919050565b60006020828403121561096657600080fd5b81356001600160a01b03811681146106b057600080fd5b60006020828403121561098f57600080fd5b815180151581146106b057600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156109c7576109c761099f565b500390565b60008160001904831182151516156109e6576109e661099f565b500290565b600082610a0857634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610a2057610a2061099f565b50019056fea9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049ba26469706673582212200a3cb1cf09f1f76a5707d96cb13549da496ce85ccbe0eb38db58d37bc575e76964736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71CA337D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB2237BA3 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xFB5BCA7A EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71CA337D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x2C46502D EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x529ACA49 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x5E9F4435 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x117 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x13F PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP5 SWAP1 SWAP6 ADD SLOAD SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x117 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x117 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x706 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x304 SWAP1 DUP5 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x429 SWAP1 TIMESTAMP PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP5 SWAP3 SWAP2 SWAP1 PUSH2 0x45B SWAP1 DUP5 SWAP1 PUSH2 0xA0D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x488 SWAP1 DUP5 SWAP1 PUSH2 0xA0D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x506 SWAP1 TIMESTAMP PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0xA0D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD SWAP2 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x61A SWAP1 DUP5 SWAP1 PUSH2 0xA0D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH2 0x669 SWAP1 TIMESTAMP PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x6B0 SWAP1 DUP4 PUSH2 0x9CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x734 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x75B SWAP1 TIMESTAMP PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x765 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x782 SWAP2 SWAP1 PUSH2 0xA0D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 SLOAD SWAP2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 PUSH2 0x92F SWAP1 DUP3 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9C7 JUMPI PUSH2 0x9C7 PUSH2 0x99F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0x99F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA08 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA20 JUMPI PUSH2 0xA20 PUSH2 0x99F JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID 0xA9 SDIV SWAP13 0xBB 0x2A 0xB0 SWAP15 0xB2 NOT PC EXTCODEHASH 0x4A MSIZE 0xA5 0xD0 PUSH3 0x3ADE34 PUSH14 0x962BCD4E46B11DA047C9049BA264 PUSH10 0x706673582212200A3CB1 0xCF MULMOD CALL 0xF7 PUSH11 0x5707D96CB13549DA496CE8 0x5C 0xCB 0xE0 0xEB CODESIZE 0xDB PC 0xD3 PUSH28 0xC575E76964736F6C634300080F003300000000000000000000000000 ",
							"sourceMap": "732:4677:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:351;;;:::i;:::-;;;179:14:1;;172:22;154:41;;142:2;127:18;2712:351:0;;;;;;;;2062:642;;;;;;:::i;:::-;;:::i;849:22::-;;;;;-1:-1:-1;;;;;849:22:0;;;;;;-1:-1:-1;;;;;555:32:1;;;537:51;;525:2;510:18;849:22:0;391:203:1;3071:691:0;;;:::i;4116:287::-;;;:::i;:::-;;;745:25:1;;;733:2;718:18;4116:287:0;599:177:1;4411:171:0;4509:10;4458:4;4500:20;;;:8;:20;;;;;:39;;;4411:171;;793:17;;;;;;1362:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:25:1;;;1415:2;1400:18;;1393:34;;;;1443:18;;;1436:34;;;;1501:2;1486:18;;1479:34;1544:3;1529:19;;1522:35;1588:3;1573:19;;1566:35;1346:3;1331:19;1362:40:0;1072:535:1;908:20:0;;;;;-1:-1:-1;;;;;908:20:0;;;1962:92;;;;;;:::i;:::-;;:::i;:::-;;878:23;;;;;;817:25;;;;;-1:-1:-1;;;;;817:25:0;;;4597:809;;;:::i;2712:351::-;2773:10;;2794;2749:4;2806:20;;;:8;:20;;;;;;:32;2766:73;;-1:-1:-1;;;2766:73:0;;;;;1786:51:1;;;;1853:18;;;1846:34;2749:4:0;-1:-1:-1;;;;;2773:10:0;;2766:27;;1759:18:1;;2766:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2867:10:0;2879:20;;;;:8;:20;;;;;;;;;:32;2858:54;;745:25:1;;;-1:-1:-1;;;;;;;;;;;2858:54:0;718:18:1;2858:54:0;;;;;;;2961:10;2952:20;;;;:8;:20;;;;;:32;2937:11;:47;;2952:32;;2937:11;;:47;;2952:32;;2937:47;:::i;:::-;;;;-1:-1:-1;;3004:10:0;3030:1;2995:20;;;:8;:20;;;;;:36;-1:-1:-1;3051:4:0;;2712:351::o;2062:642::-;2132:10;;2125:67;;-1:-1:-1;;;2125:67:0;;2157:10;2125:67;;;2675:34:1;2177:4:0;2725:18:1;;;2718:43;2777:18;;;2770:34;;;2107:4:0;;-1:-1:-1;;;;;2132:10:0;;2125:31;;2610:18:1;;2125:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2211:43:0;;745:25:1;;;2239:4:0;;2219:10;;2211:43;;733:2:1;718:18;2211:43:0;;;;;;;2405:5;;;2379:10;2370:20;;:8;:20;;;;;;:32;2419:8;;2412:3;;2370:40;;2405:5;2370:40;:::i;:::-;:45;;;;:::i;:::-;2369:58;;;;:::i;:::-;2337:10;2328:20;;;;:8;:20;;;;;:36;;;2310:54;;:15;:54;:::i;:::-;2309:119;;;;:::i;:::-;2276:10;2267:20;;;;:8;:20;;;;;:39;;;:161;;;;2441:43;;2477:7;;2267:20;;2441:43;;2477:7;;2441:43;:::i;:::-;;;;-1:-1:-1;;2504:10:0;2495:20;;;;:8;:20;;;;;2534:15;2495:36;;;;:54;2560:11;:22;;2575:7;;2495:20;2560:22;;2575:7;;2560:22;:::i;:::-;;;;-1:-1:-1;;2643:10:0;2634:20;;;;:8;:20;;;;;:36;;;;;2593:38;;;;:77;;;;2634:36;2062:642;-1:-1:-1;;2062:642:0:o;3071:691::-;3106:4;3296:5;;3270:10;3261:20;;:8;:20;;;;;:32;3310:8;;3303:3;;3261:40;;3296:5;3261:40;:::i;:::-;:45;;;;:::i;:::-;3260:58;;;;:::i;:::-;3228:10;3219:20;;;;:8;:20;;;;;:36;;;3201:54;;:15;:54;:::i;:::-;3200:119;;;;:::i;:::-;3167:10;3158:20;;;;:8;:20;;;;;:39;;;:161;;;;:::i;:::-;3132:10;3123:20;;;;:8;:20;;;;;;;:32;;:196;;;3339:7;;3332:71;;-1:-1:-1;;;3332:71:0;;;;;1786:51:1;;;;1853:18;;;1846:34;;;;-1:-1:-1;;;;;3339:7:0;;;;3332:24;;1759:18:1;;3332:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3431:10:0;3443:20;;;;:8;:20;;;;;;;;;:32;;;3422:54;;745:25:1;;;-1:-1:-1;;;;;;;;;;;3422:54:0;718:18:1;3422:54:0;;;;;;;3536:10;3527:20;;;;:8;:20;;;;;;;:32;;;;3489:33;;:70;;3527:32;;3489:33;;:70;;3527:32;;3489:70;:::i;:::-;;;;-1:-1:-1;;3579:10:0;3605:1;3570:20;;;:8;:20;;;;;:32;;;:36;;;3618:39;;;:43;;;;3713:15;3672:38;;;;:56;-1:-1:-1;;;3071:691:0:o;4116:287::-;4223:10;4164:4;4214:20;;;:8;:20;;;;;:38;;;4164:4;;4196:56;;:15;:56;:::i;:::-;4263:22;4335:5;;4309:10;4300:20;;:8;:20;;;;;:32;4181:71;;-1:-1:-1;4263:22:0;;4349:8;;4342:3;;4300:40;;4335:5;4300:40;:::i;:::-;:45;;;;:::i;:::-;4299:58;;;;:::i;:::-;4288:70;;:7;:70;:::i;:::-;4263:95;4116:287;-1:-1:-1;;;4116:287:0:o;1962:92::-;1811:5;;-1:-1:-1;;;;;1811:5:0;1797:10;:19;1789:42;;;;-1:-1:-1;;;1789:42:0;;3545:2:1;1789:42:0;;;3527:21:1;3584:1;3564:18;;;3557:29;-1:-1:-1;;;3602:18:1;;;3595:39;3651:18;;1789:42:0;;;;;;;;2027:5:::1;:14:::0;1962:92::o;4597:809::-;4640:4;4830:5;;4804:10;4795:20;;:8;:20;;;;;:32;4844:8;;4837:3;;4795:40;;4830:5;4795:40;:::i;:::-;:45;;;;:::i;:::-;4794:58;;;;:::i;:::-;4762:10;4753:20;;;;:8;:20;;;;;:36;;;4735:54;;:15;:54;:::i;:::-;4734:119;;;;:::i;:::-;4701:10;4692:20;;;;:8;:20;;;;;:39;;;:161;;;;:::i;:::-;4666:10;4657:20;;;;:8;:20;;;;;;;:32;;:196;;;4871:7;;4864:70;;-1:-1:-1;;;4864:70:0;;;;;1786:51:1;;;;1853:18;;;1846:34;;;;-1:-1:-1;;;;;4871:7:0;;;;4864:24;;1759:18:1;;4864:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4962:10:0;4974:20;;;;:8;:20;;;;;;;;;:32;;;4953:54;;745:25:1;;;-1:-1:-1;;;;;;;;;;;4953:54:0;718:18:1;4953:54:0;;;;;;;5029:10;5055:1;5020:20;;;:8;:20;;;;;;:32;;;:36;;;5067:39;;;:43;;;;-1:-1:-1;5130:10:0;5163:32;;5123:73;;-1:-1:-1;;;5123:73:0;;;;;1786:51:1;;;;1853:18;;;1846:34;-1:-1:-1;;;;;5130:10:0;;5123:27;;1759:18:1;;5123:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5224:10:0;5236:20;;;;:8;:20;;;;;;;;;:32;5215:54;;745:25:1;;;-1:-1:-1;;;;;;;;;;;5215:54:0;718:18:1;5215:54:0;;;;;;;5291:10;5317:1;5282:20;;;:8;:20;;;;;:36;;;5329:11;:47;;5317:1;;5329:47;;5317:1;;5329:47;:::i;:::-;;;;-1:-1:-1;5394:4:0;;4597:809;-1:-1:-1;;4597:809:0:o;206:180:1:-;265:6;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;-1:-1:-1;357:23:1;;206:180;-1:-1:-1;206:180:1:o;781:286::-;840:6;893:2;881:9;872:7;868:23;864:32;861:52;;;909:1;906;899:12;861:52;935:23;;-1:-1:-1;;;;;987:31:1;;977:42;;967:70;;1033:1;1030;1023:12;1891:277;1958:6;2011:2;1999:9;1990:7;1986:23;1982:32;1979:52;;;2027:1;2024;2017:12;1979:52;2059:9;2053:16;2112:5;2105:13;2098:21;2091:5;2088:32;2078:60;;2134:1;2131;2124:12;2173:127;2234:10;2229:3;2225:20;2222:1;2215:31;2265:4;2262:1;2255:15;2289:4;2286:1;2279:15;2305:125;2345:4;2373:1;2370;2367:8;2364:34;;;2378:18;;:::i;:::-;-1:-1:-1;2415:9:1;;2305:125::o;2815:168::-;2855:7;2921:1;2917;2913:6;2909:14;2906:1;2903:21;2898:1;2891:9;2884:17;2880:45;2877:71;;;2928:18;;:::i;:::-;-1:-1:-1;2968:9:1;;2815:168::o;2988:217::-;3028:1;3054;3044:132;;3098:10;3093:3;3089:20;3086:1;3079:31;3133:4;3130:1;3123:15;3161:4;3158:1;3151:15;3044:132;-1:-1:-1;3190:9:1;;2988:217::o;3210:128::-;3250:3;3281:1;3277:6;3274:1;3271:13;3268:39;;;3287:18;;:::i;:::-;-1:-1:-1;3323:9:1;;3210:128::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "536600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Stake(uint256)": "infinite",
								"User_Map(address)": "13203",
								"harvest()": "infinite",
								"harvestwithDraw()": "infinite",
								"lastTotokenRatio()": "2477",
								"newTotokenRatio()": "infinite",
								"owner()": "2404",
								"ratio()": "2318",
								"setRatio(uint256)": "24486",
								"stakeSupple()": "2339",
								"staketoken()": "2403",
								"totoken()": "2382",
								"withDraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 732,
									"end": 5409,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1411,
									"end": 1749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1411,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1474,
									"end": 1479,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1474,
									"end": 1492,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1474,
									"end": 1492,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1474,
									"end": 1492,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1492,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1474,
									"end": 1492,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1474,
									"end": 1492,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1474,
									"end": 1492,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1511,
									"end": 1536,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1511,
									"end": 1536,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 747,
									"end": 793,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 810,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1503,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1575,
									"end": 1597,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1575,
									"end": 1597,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E4F542C532030582041444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 747,
									"end": 793,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 810,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 494,
									"end": 834,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1567,
									"end": 1617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1659,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1636,
									"end": 1659,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1636,
									"end": 1647,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1636,
									"end": 1659,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1636,
									"end": 1659,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1044,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 1083,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "13915151081859DC99595B595B9D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "92"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1136,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1171,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1153,
									"end": 1171,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1698,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1712,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 839,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 5409,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a3cb1cf09f1f76a5707d96cb13549da496ce85ccbe0eb38db58d37bc575e76964736f6c634300080f0033",
									".code": [
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "B2237BA3"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "B2237BA3"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "D942727F"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "DAB2997B"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "FB5BCA7A"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "8C93ECFF"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "FDB1C10"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "227A473B"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "2C46502D"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "4641257D"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "529ACA49"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "5E9F4435"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2712,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2062,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2062,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 849,
											"end": 871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 537,
											"end": 588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 537,
											"end": 588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 594,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3762,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3071,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3071,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3071,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4116,
											"end": 4403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 599,
											"end": 776,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4411,
											"end": 4582,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4411,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4519,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4458,
											"end": 4462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4500,
											"end": 4508,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4500,
											"end": 4539,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4500,
											"end": 4539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4500,
											"end": 4539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4411,
											"end": 4582,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1362,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1384,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1384,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1427,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1427,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1529,
											"end": 1548,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1591,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1349,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 1331,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1607,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 908,
											"end": 928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1962,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1962,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 817,
											"end": 842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 5406,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4597,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4597,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4597,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2712,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2804,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2766,
											"end": 2839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2766,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2877,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2911,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "6EE032249450BC73EB21BAA464F9BEFEE4AE388930C9F61A58862DB0C63F30C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2858,
											"end": 2912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2858,
											"end": 2912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2912,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2971,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2952,
											"end": 2972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 2972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2972,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2948,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2937,
											"end": 2984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2984,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2937,
											"end": 2984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2937,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2984,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2937,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2984,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3014,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3030,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3031,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3051,
											"end": 3055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 3063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2181,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2125,
											"end": 2156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2125,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2243,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2229,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C"
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2254,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2379,
											"end": 2389,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2370,
											"end": 2390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2419,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 2419,
											"end": 2427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2412,
											"end": 2415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2370,
											"end": 2410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2370,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2410,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2370,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2370,
											"end": 2415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2370,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2415,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2370,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2369,
											"end": 2427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2369,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2369,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2337,
											"end": 2347,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2336,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2328,
											"end": 2364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2325,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2310,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2309,
											"end": 2428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2309,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2309,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2286,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2428,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2428,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2428,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2484,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2484,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2441,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2484,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2441,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2484,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2441,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2514,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2503,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2549,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2495,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2549,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2560,
											"end": 2582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2560,
											"end": 2582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2560,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2582,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2560,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2582,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2643,
											"end": 2653,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2634,
											"end": 2670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2670,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2670,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3762,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3071,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3280,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3269,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3261,
											"end": 3281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3261,
											"end": 3281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3261,
											"end": 3281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3281,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 3310,
											"end": 3318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3303,
											"end": 3306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3261,
											"end": 3301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3261,
											"end": 3301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3301,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3261,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3261,
											"end": 3306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3261,
											"end": 3306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3306,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3261,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3260,
											"end": 3318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3260,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3318,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3260,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3238,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3219,
											"end": 3255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3201,
											"end": 3255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3216,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3201,
											"end": 3255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3255,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3201,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3200,
											"end": 3319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3200,
											"end": 3319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3319,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3200,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3177,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3158,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3178,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3158,
											"end": 3319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3158,
											"end": 3319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3319,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3158,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3142,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3131,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3143,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3123,
											"end": 3155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3319,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3332,
											"end": 3356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3332,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3431,
											"end": 3441,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3451,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3463,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3475,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3443,
											"end": 3475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "6EE032249450BC73EB21BAA464F9BEFEE4AE388930C9F61A58862DB0C63F30C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3422,
											"end": 3476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3422,
											"end": 3476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3476,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3546,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3535,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3527,
											"end": 3559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3489,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3559,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3489,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3489,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3559,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3589,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3578,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3606,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3661,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3071,
											"end": 3762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4233,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4222,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4214,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4196,
											"end": 4252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4211,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4196,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4252,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4196,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4309,
											"end": 4319,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4308,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4300,
											"end": 4320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4300,
											"end": 4320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4300,
											"end": 4320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4252,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 4349,
											"end": 4357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4300,
											"end": 4340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4300,
											"end": 4340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4340,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4300,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4300,
											"end": 4345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4300,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4345,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4300,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4299,
											"end": 4357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4299,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4299,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4288,
											"end": 4358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4288,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4358,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4288,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4358,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4403,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4116,
											"end": 4403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1962,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1807,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1816,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3547,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3651,
											"end": 3669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2041,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 5406,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4597,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4830,
											"end": 4835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4804,
											"end": 4814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4803,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4827,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4852,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 4844,
											"end": 4852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4840,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4837,
											"end": 4840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4795,
											"end": 4835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4795,
											"end": 4840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4795,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4840,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4795,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4794,
											"end": 4852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4794,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4794,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4772,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4761,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4753,
											"end": 4773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4753,
											"end": 4773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4773,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4789,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4753,
											"end": 4789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4735,
											"end": 4789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4750,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4735,
											"end": 4789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4789,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4735,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4734,
											"end": 4853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4734,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4853,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4734,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4711,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4692,
											"end": 4712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4700,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4692,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4692,
											"end": 4712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4692,
											"end": 4712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4731,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4692,
											"end": 4731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4692,
											"end": 4853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4692,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4853,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4692,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4665,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4677,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4689,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4657,
											"end": 4689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4853,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4853,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4864,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4864,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4962,
											"end": 4972,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4982,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4974,
											"end": 5006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "6EE032249450BC73EB21BAA464F9BEFEE4AE388930C9F61A58862DB0C63F30C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4953,
											"end": 5007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 5007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5007,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5039,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5028,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5052,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5020,
											"end": 5052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5056,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5106,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5067,
											"end": 5106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5110,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5110,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5110,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5130,
											"end": 5140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5130,
											"end": 5140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5150,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5123,
											"end": 5150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5123,
											"end": 5196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5123,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5224,
											"end": 5234,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5244,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "6EE032249450BC73EB21BAA464F9BEFEE4AE388930C9F61A58862DB0C63F30C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5215,
											"end": 5269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5269,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5301,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5290,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5282,
											"end": 5302,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5302,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5318,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5340,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5329,
											"end": 5376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5376,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5329,
											"end": 5376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5329,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5376,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5329,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5376,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 5406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4597,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 206,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 265,
											"end": 271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 293,
											"end": 316,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 289,
											"end": 321,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 286,
											"end": 338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 286,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 286,
											"end": 338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 334,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 324,
											"end": 336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 286,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 286,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 357,
											"end": 380,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 206,
											"end": 386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 206,
											"end": 386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 868,
											"end": 891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 861,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 935,
											"end": 958,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1035,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1891,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2014,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2029,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2069,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2078,
											"end": 2138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2300,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2173,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2229,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2225,
											"end": 2245,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2262,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2255,
											"end": 2270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2286,
											"end": 2287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2294,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2305,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2375,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2364,
											"end": 2398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2378,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2983,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2815,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2924,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2901,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2925,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2877,
											"end": 2948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2928,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3205,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2988,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3044,
											"end": 3176,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3098,
											"end": 3108,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3093,
											"end": 3096,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3123,
											"end": 3138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3158,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3176,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3044,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3338,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3210,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3268,
											"end": 3307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3287,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"6EE032249450BC73EB21BAA464F9BEFEE4AE388930C9F61A58862DB0C63F30C1": "a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b"
									}
								}
							},
							"sourceList": [
								"自己写个矿池,定息矿池.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Stake(uint256)": "227a473b",
							"User_Map(address)": "8c93ecff",
							"harvest()": "4641257d",
							"harvestwithDraw()": "fb5bca7a",
							"lastTotokenRatio()": "5e9f4435",
							"newTotokenRatio()": "529aca49",
							"owner()": "8da5cb5b",
							"ratio()": "71ca337d",
							"setRatio(uint256)": "b2237ba3",
							"stakeSupple()": "d942727f",
							"staketoken()": "dab2997b",
							"totoken()": "2c46502d",
							"withDraw()": "0fdb1c10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staketoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_totoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"User_Map\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_Stake_Time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"whole_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_Time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Clima_Number\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestwithDraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTotokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newTotokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeSupple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staketoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":\"StakeContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":{\"keccak256\":\"0x4f8af024af7bcf966268b9705c609bfe0e6d7aacd0eb07c7c97e6049bce371a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da498590f604a8798c684843698e8bd9c5b4df8577621d57bb4cf4227f4b9f3\",\"dweb:/ipfs/Qmb5KfXxu3kCX5yJjKrJDkmZj6KyybqamqoBunHo4popkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "ratio",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 72,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "staketoken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 74,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "totoken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 76,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "stakeSupple",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 78,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 118,
								"contract": "自己写个矿池,定息矿池.sol:StakeContract",
								"label": "User_Map",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(User)113_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)113_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakeContract.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)113_storage"
							},
							"t_struct(User)113_storage": {
								"encoding": "inplace",
								"label": "struct StakeContract.User",
								"members": [
									{
										"astId": 102,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "stakeNumber",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 104,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_Stake_Time",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 106,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_totoken_ratio",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 108,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "whole_ratio",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 110,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_totoken_Time",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 112,
										"contract": "自己写个矿池,定息矿池.sol:StakeContract",
										"label": "Clima_Number",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"自己写个矿池,定息矿池.sol": {
				"ast": {
					"absolutePath": "自己写个矿池,定息矿池.sol",
					"exportedSymbols": {
						"IERC20": [
							68
						],
						"StakeContract": [
							613
						]
					},
					"id": 614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nameLocation": "78:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "101:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:6:0"
									},
									"scope": 68,
									"src": "92:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "161:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "211:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:6:0"
									},
									"scope": 68,
									"src": "152:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "234:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "251:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "243:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "262:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:31:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "292:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:0"
									},
									"scope": 68,
									"src": "225:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "315:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "333:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "325:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:32:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "380:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:6:0"
									},
									"scope": 68,
									"src": "306:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "403:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "433:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "428:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:29:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "458:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "458:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:6:0"
									},
									"scope": 68,
									"src": "394:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "481:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "502:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "494:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "518:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "510:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "529:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:47:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:6:0"
									},
									"scope": 68,
									"src": "472:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 59,
									"name": "Trasfer",
									"nameLocation": "579:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "603:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "587:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "625:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "609:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "629:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:54:0"
									},
									"src": "573:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 67,
									"name": "Approveal",
									"nameLocation": "653:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "663:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "686:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "716:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "711:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:60:0"
									},
									"src": "647:76:0"
								}
							],
							"scope": 614,
							"src": "68:660:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakeContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 613,
							"linearizedBaseContracts": [
								613
							],
							"name": "StakeContract",
							"nameLocation": "741:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "71ca337d",
									"id": 70,
									"mutability": "mutable",
									"name": "ratio",
									"nameLocation": "805:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "793:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 69,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "793:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dab2997b",
									"id": 72,
									"mutability": "mutable",
									"name": "staketoken",
									"nameLocation": "832:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "817:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "817:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c46502d",
									"id": 74,
									"mutability": "mutable",
									"name": "totoken",
									"nameLocation": "864:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "849:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "849:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d942727f",
									"id": 76,
									"mutability": "mutable",
									"name": "stakeSupple",
									"nameLocation": "890:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "878:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 75,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "878:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 78,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "923:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "908:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 77,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "908:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 86,
									"name": "Trasfer",
									"nameLocation": "947:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "971:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "955:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "993:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "977:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "997:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:54:0"
									},
									"src": "941:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 94,
									"name": "Approveal",
									"nameLocation": "1021:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1031:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1070:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1054:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1084:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:60:0"
									},
									"src": "1015:76:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
									"id": 100,
									"name": "transfer",
									"nameLocation": "1103:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1128:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1112:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1137:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1132:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:32:0"
									},
									"src": "1097:47:0"
								},
								{
									"canonicalName": "StakeContract.User",
									"id": 113,
									"members": [
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "stakeNumber",
											"nameLocation": "1180:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "1175:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1175:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "last_Stake_Time",
											"nameLocation": "1207:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "1202:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1202:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "last_totoken_ratio",
											"nameLocation": "1238:18:0",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "1233:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 105,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1233:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "whole_ratio",
											"nameLocation": "1274:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "1269:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1269:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "last_totoken_Time",
											"nameLocation": "1301:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "1296:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1296:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "Clima_Number",
											"nameLocation": "1334:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "1329:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1329:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "1159:4:0",
									"nodeType": "StructDefinition",
									"scope": 613,
									"src": "1152:202:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c93ecff",
									"id": 118,
									"mutability": "mutable",
									"name": "User_Map",
									"nameLocation": "1394:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "1362:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
										"typeString": "mapping(address => struct StakeContract.User)"
									},
									"typeName": {
										"id": 117,
										"keyType": {
											"id": 114,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1370:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1362:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
											"typeString": "mapping(address => struct StakeContract.User)"
										},
										"valueType": {
											"id": 116,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 115,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "1381:4:0"
											},
											"referencedDeclaration": 113,
											"src": "1381:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$113_storage_ptr",
												"typeString": "struct StakeContract.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1463:286:0",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1474:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 126,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1482:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1482:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1474:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1474:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 131,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1511:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1534:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1526:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 132,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1526:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1526:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1511:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1537:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1503:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 141,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "1575:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1595:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1587:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 142,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1587:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1587:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1575:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1598:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1567:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1567:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1567:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 151,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1636:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 152,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "1651:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1636:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4545442061677265656d656e74",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1660:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															},
															"value": "NEED agreement"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															}
														],
														"id": 150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1628:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1628:49:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1688:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "_staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1701:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1688:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1688:24:0"
											},
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1733:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1723:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1723:18:0"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "_staketoken",
												"nameLocation": "1432:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1424:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "_totoken",
												"nameLocation": "1453:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1445:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:39:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1463:0:0"
									},
									"scope": 613,
									"src": "1411:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1778:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 169,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1797:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1797:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 171,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1811:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1797:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1819:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1789:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1789:42:0"
											},
											{
												"id": 176,
												"nodeType": "PlaceholderStatement",
												"src": "1842:1:0"
											}
										]
									},
									"id": 178,
									"name": "onlyOwner",
									"nameLocation": "1766:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1775:2:0"
									},
									"src": "1757:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "2012:42:0",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "2027:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 186,
														"name": "_ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2035:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2027:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2027:14:0"
											}
										]
									},
									"functionSelector": "b2237ba3",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 178,
												"src": "2002:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2002:9:0"
										}
									],
									"name": "setRatio",
									"nameLocation": "1971:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "1985:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1980:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1980:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:13:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2012:0:0"
									},
									"scope": 613,
									"src": "1962:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "2112:592:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 201,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2157:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2157:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 205,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2177:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$613",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$613",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2169:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 203,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2169:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2169:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 207,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "2184:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 198,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2132:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 197,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2125:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2125:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "2125:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2125:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2125:67:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 211,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2219:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2219:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 215,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2239:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$613",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$613",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 213,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2231:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2231:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "2246:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "Trasfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2211:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "EmitStatement",
												"src": "2206:48:0"
											},
											{
												"expression": {
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 220,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2267:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 223,
															"indexExpression": {
																"expression": {
																	"id": 221,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2276:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2276:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2267:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "2267:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 225,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2310:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2310:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 227,
																				"name": "User_Map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 118,
																				"src": "2328:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																					"typeString": "mapping(address => struct StakeContract.User storage ref)"
																				}
																			},
																			"id": 230,
																			"indexExpression": {
																				"expression": {
																					"id": 228,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2337:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2337:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2328:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$113_storage",
																				"typeString": "struct StakeContract.User storage ref"
																			}
																		},
																		"id": 231,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "last_Stake_Time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "2328:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2310:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 233,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2309:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 240,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 234,
																								"name": "User_Map",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 118,
																								"src": "2370:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																									"typeString": "mapping(address => struct StakeContract.User storage ref)"
																								}
																							},
																							"id": 237,
																							"indexExpression": {
																								"expression": {
																									"id": 235,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "2379:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 236,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "2379:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2370:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$113_storage",
																								"typeString": "struct StakeContract.User storage ref"
																							}
																						},
																						"id": 238,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "stakeNumber",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 102,
																						"src": "2370:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 239,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 70,
																						"src": "2405:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2370:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2412:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "2370:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 243,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2369:47:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3331353336303030",
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2419:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31536000_by_1",
																			"typeString": "int_const 31536000"
																		},
																		"value": "31536000"
																	},
																	"src": "2369:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 246,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2368:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2309:119:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2267:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2267:161:0"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 250,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2441:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 253,
															"indexExpression": {
																"expression": {
																	"id": 251,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2450:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2450:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2441:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2441:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 255,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2441:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2441:43:0"
											},
											{
												"expression": {
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 258,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2495:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 261,
															"indexExpression": {
																"expression": {
																	"id": 259,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2504:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2504:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2495:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "2495:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 263,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2534:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2534:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2495:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "2495:54:0"
											},
											{
												"expression": {
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 267,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2560:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 268,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2575:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2560:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "2560:22:0"
											},
											{
												"expression": {
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 271,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2593:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 274,
															"indexExpression": {
																"expression": {
																	"id": 272,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2602:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2602:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2593:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "2593:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 276,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2634:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 279,
															"indexExpression": {
																"expression": {
																	"id": 277,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2643:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2643:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2634:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "2634:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2593:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "2593:77:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2688:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 196,
												"id": 284,
												"nodeType": "Return",
												"src": "2681:11:0"
											}
										]
									},
									"functionSelector": "227a473b",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Stake",
									"nameLocation": "2071:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2082:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2077:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:14:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2107:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:6:0"
									},
									"scope": 613,
									"src": "2062:642:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "2755:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2794:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2794:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 297,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2806:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 300,
																"indexExpression": {
																	"expression": {
																		"id": 298,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2815:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2815:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2806:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$113_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "2806:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 292,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2773:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 291,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2766:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2766:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "2766:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "2766:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 305,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2867:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2867:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 307,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2879:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 310,
																"indexExpression": {
																	"expression": {
																		"id": 308,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2888:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2888:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2879:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$113_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "2879:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2858:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2858:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "EmitStatement",
												"src": "2853:59:0"
											},
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 314,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2937:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 315,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2952:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 318,
															"indexExpression": {
																"expression": {
																	"id": 316,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2961:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2961:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2952:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 319,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2952:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2937:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "2937:47:0"
											},
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 322,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2995:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 325,
															"indexExpression": {
																"expression": {
																	"id": 323,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3004:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3004:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2995:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2995:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3030:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2995:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2995:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3051:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 290,
												"id": 331,
												"nodeType": "Return",
												"src": "3044:11:0"
											}
										]
									},
									"functionSelector": "0fdb1c10",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withDraw",
									"nameLocation": "2721:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2730:2:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "2749:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2749:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2748:6:0"
									},
									"scope": 613,
									"src": "2712:351:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "3112:650:0",
										"statements": [
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 338,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "3123:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 341,
															"indexExpression": {
																"expression": {
																	"id": 339,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3132:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3132:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3123:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "3123:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 343,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3158:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 346,
																"indexExpression": {
																	"expression": {
																		"id": 344,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3167:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3167:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3158:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$113_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "last_totoken_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 106,
															"src": "3158:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 348,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3201:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3201:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 350,
																					"name": "User_Map",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 118,
																					"src": "3219:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																						"typeString": "mapping(address => struct StakeContract.User storage ref)"
																					}
																				},
																				"id": 353,
																				"indexExpression": {
																					"expression": {
																						"id": 351,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3228:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 352,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3228:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3219:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$113_storage",
																					"typeString": "struct StakeContract.User storage ref"
																				}
																			},
																			"id": 354,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "last_Stake_Time",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 104,
																			"src": "3219:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3201:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 356,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3200:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 365,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 357,
																									"name": "User_Map",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 118,
																									"src": "3261:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																										"typeString": "mapping(address => struct StakeContract.User storage ref)"
																									}
																								},
																								"id": 360,
																								"indexExpression": {
																									"expression": {
																										"id": 358,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "3270:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 359,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "3270:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3261:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$113_storage",
																									"typeString": "struct StakeContract.User storage ref"
																								}
																							},
																							"id": 361,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakeNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 102,
																							"src": "3261:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 362,
																							"name": "ratio",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "3296:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3261:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 364,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3303:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "3261:45:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 366,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3260:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3331353336303030",
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3310:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31536000_by_1",
																				"typeString": "int_const 31536000"
																			},
																			"value": "31536000"
																		},
																		"src": "3260:58:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3259:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3200:119:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3158:161:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:196:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "3123:196:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 378,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3357:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3357:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 380,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3370:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 383,
																"indexExpression": {
																	"expression": {
																		"id": 381,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3379:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3379:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3370:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$113_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "3370:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 375,
																	"name": "totoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "3339:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 374,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "3332:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3332:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3332:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "3332:71:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 388,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3431:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3431:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 390,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3443:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 393,
																"indexExpression": {
																	"expression": {
																		"id": 391,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3452:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3452:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3443:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$113_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "3443:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 387,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3422:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3422:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "EmitStatement",
												"src": "3417:59:0"
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 397,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "3489:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 400,
															"indexExpression": {
																"expression": {
																	"id": 398,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3498:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3498:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3489:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "Clima_Number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "3489:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 402,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "3527:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 405,
															"indexExpression": {
																"expression": {
																	"id": 403,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3536:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3536:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3527:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "3527:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3489:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "3489:70:0"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 409,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "3570:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 412,
															"indexExpression": {
																"expression": {
																	"id": 410,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3579:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3579:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3570:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "3570:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3605:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3570:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "3570:36:0"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 417,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "3618:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 420,
															"indexExpression": {
																"expression": {
																	"id": 418,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3627:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3627:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3618:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3618:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3660:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3618:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "3618:43:0"
											},
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 425,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "3672:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 428,
															"indexExpression": {
																"expression": {
																	"id": 426,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3681:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3681:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3672:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "3672:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 430,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3713:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3713:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3672:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3748:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 337,
												"id": 435,
												"nodeType": "Return",
												"src": "3741:11:0"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "3080:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3087:2:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3106:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3106:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3105:6:0"
									},
									"scope": 613,
									"src": "3071:691:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "4170:233:0",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "newtime",
														"nameLocation": "4186:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "4181:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 442,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4181:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 444,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4196:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4196:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 446,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "4214:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 449,
															"indexExpression": {
																"expression": {
																	"id": 447,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4223:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4223:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4214:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "4214:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4196:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4181:71:0"
											},
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "newTotokenRatione",
														"nameLocation": "4268:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "4263:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4263:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 455,
														"name": "newtime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "4288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 456,
																							"name": "User_Map",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 118,
																							"src": "4300:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																								"typeString": "mapping(address => struct StakeContract.User storage ref)"
																							}
																						},
																						"id": 459,
																						"indexExpression": {
																							"expression": {
																								"id": 457,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "4309:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 458,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "4309:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4300:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$113_storage",
																							"typeString": "struct StakeContract.User storage ref"
																						}
																					},
																					"id": 460,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeNumber",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 102,
																					"src": "4300:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 461,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "4335:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4300:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4342:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "4300:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 465,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4299:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3331353336303030",
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4349:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "31536000"
																},
																"src": "4299:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 468,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4298:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4288:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4263:95:0"
											},
											{
												"expression": {
													"id": 471,
													"name": "newTotokenRatione",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 454,
													"src": "4376:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 441,
												"id": 472,
												"nodeType": "Return",
												"src": "4369:24:0"
											}
										]
									},
									"functionSelector": "529aca49",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "newTotokenRatio",
									"nameLocation": "4125:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4140:2:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "4164:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4164:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4163:6:0"
									},
									"scope": 613,
									"src": "4116:287:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "4464:118:0",
										"statements": [
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "_lastTotokenRatio",
														"nameLocation": "4480:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "4475:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 481,
															"name": "User_Map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4500:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																"typeString": "mapping(address => struct StakeContract.User storage ref)"
															}
														},
														"id": 484,
														"indexExpression": {
															"expression": {
																"id": 482,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4509:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4509:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4500:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$113_storage",
															"typeString": "struct StakeContract.User storage ref"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "last_totoken_ratio",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 106,
													"src": "4500:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4475:64:0"
											},
											{
												"expression": {
													"id": 487,
													"name": "_lastTotokenRatio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 480,
													"src": "4557:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 478,
												"id": 488,
												"nodeType": "Return",
												"src": "4550:24:0"
											}
										]
									},
									"functionSelector": "5e9f4435",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTotokenRatio",
									"nameLocation": "4420:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4436:2:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "4458:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4458:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4457:6:0"
									},
									"scope": 613,
									"src": "4411:171:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "4646:760:0",
										"statements": [
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 495,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "4657:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 498,
															"indexExpression": {
																"expression": {
																	"id": 496,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4666:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4666:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4657:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "4657:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 500,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4692:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 503,
																"indexExpression": {
																	"expression": {
																		"id": 501,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4701:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4701:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4692:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$113_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "last_totoken_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 106,
															"src": "4692:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 505,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4735:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4735:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 507,
																					"name": "User_Map",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 118,
																					"src": "4753:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																						"typeString": "mapping(address => struct StakeContract.User storage ref)"
																					}
																				},
																				"id": 510,
																				"indexExpression": {
																					"expression": {
																						"id": 508,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4762:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 509,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4762:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4753:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$113_storage",
																					"typeString": "struct StakeContract.User storage ref"
																				}
																			},
																			"id": 511,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "last_Stake_Time",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 104,
																			"src": "4753:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4735:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 513,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4734:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 522,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 520,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 514,
																									"name": "User_Map",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 118,
																									"src": "4795:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																										"typeString": "mapping(address => struct StakeContract.User storage ref)"
																									}
																								},
																								"id": 517,
																								"indexExpression": {
																									"expression": {
																										"id": 515,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "4804:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 516,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "4804:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4795:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$113_storage",
																									"typeString": "struct StakeContract.User storage ref"
																								}
																							},
																							"id": 518,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakeNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 102,
																							"src": "4795:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 519,
																							"name": "ratio",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "4830:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4795:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 521,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4837:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "4795:45:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 523,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4794:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3331353336303030",
																			"id": 524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4844:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31536000_by_1",
																				"typeString": "int_const 31536000"
																			},
																			"value": "31536000"
																		},
																		"src": "4794:58:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 526,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4793:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4734:119:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4692:161:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4657:196:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "4657:196:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4889:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4889:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 537,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4901:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 540,
																"indexExpression": {
																	"expression": {
																		"id": 538,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4910:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4910:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4901:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$113_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "4901:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 532,
																	"name": "totoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "4871:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 531,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "4864:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4864:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "4864:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4864:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4864:70:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 545,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4962:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4962:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 547,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4974:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 550,
																"indexExpression": {
																	"expression": {
																		"id": 548,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4983:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4983:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4974:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$113_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "4974:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 544,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "4953:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4953:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "EmitStatement",
												"src": "4948:59:0"
											},
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 554,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "5020:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 557,
															"indexExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5029:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5029:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5020:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "5020:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5055:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5020:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "5020:36:0"
											},
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 562,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "5067:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 565,
															"indexExpression": {
																"expression": {
																	"id": 563,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5076:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5076:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5067:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "5067:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5109:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5067:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "5067:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 574,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5151:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5151:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 576,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "5163:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 579,
																"indexExpression": {
																	"expression": {
																		"id": 577,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5172:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5172:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5163:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$113_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "5163:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 571,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "5130:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 570,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "5123:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5123:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "5123:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5123:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "5123:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 584,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5224:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5224:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 586,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "5236:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 589,
																"indexExpression": {
																	"expression": {
																		"id": 587,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5245:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5245:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5236:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$113_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "5236:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 583,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "5215:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5215:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "EmitStatement",
												"src": "5210:59:0"
											},
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 593,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "5282:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 596,
															"indexExpression": {
																"expression": {
																	"id": 594,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5291:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5291:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5282:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "5282:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5317:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5282:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "5282:36:0"
											},
											{
												"expression": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 601,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "5329:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 602,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "5344:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$113_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 605,
															"indexExpression": {
																"expression": {
																	"id": 603,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5353:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5353:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5344:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$113_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "5344:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5329:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "5329:47:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 494,
												"id": 610,
												"nodeType": "Return",
												"src": "5387:11:0"
											}
										]
									},
									"functionSelector": "fb5bca7a",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvestwithDraw",
									"nameLocation": "4606:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4621:2:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "4640:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 492,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:6:0"
									},
									"scope": 613,
									"src": "4597:809:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 614,
							"src": "732:4677:0",
							"usedErrors": []
						}
					],
					"src": "38:5373:0"
				},
				"id": 0
			}
		}
	}
}