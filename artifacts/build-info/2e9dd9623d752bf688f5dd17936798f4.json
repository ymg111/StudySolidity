{
	"id": "2e9dd9623d752bf688f5dd17936798f4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity映射.sol": {
				"content": "//在写合约时，写上软件许可后，编译就不会报警告\r\n// SPDX-License-Identifier: MIT  \r\n//使用solidity版本\r\npragma solidity ^0.8.7;\r\n\r\n// 映射是常用的数据类型，可以更快的查询数据中是否存在，并不消耗gas\r\ncontract Mapping {\r\n    // 记账类型的映射，记录该用户的余额数量，并定义为balances\r\n    mapping(address => uint) public balances;\r\n    // 嵌套式映射，查找某两个地址是否为好友关系，是返回ture，否返回false，并定义为isFriend\r\n    mapping(address => mapping(address => bool)) public isFriend;\r\n\r\n    uint bal;\r\n\r\n    function examples() external {\r\n        // 设置调用者地址余额等于123\r\n        balances[msg.sender] = 123;\r\n        uint bal = balances[msg.sender];\r\n        uint bal2 = balances[address(1)];  //返回0\r\n        // 调用examples让调用者余额增加456\r\n        balances[msg.sender] += 456;\r\n        // 删除调用者所有余额回到0\r\n        delete balances[msg.sender];\r\n\r\n        // 当前调用者和合约地址为好友关系\r\n        isFriend[msg.sender][address(this)] = true;\r\n\r\n    }\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity映射.sol": {
				"Mapping": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "examples",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isFriend",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":254:1140  contract Mapping {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":254:1140  contract Mapping {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x27e235e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2da5d42e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x335d00c2\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":364:404  mapping(address => uint) public balances */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":364:404  mapping(address => uint) public balances */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":536:596  mapping(address => mapping(address => bool)) public isFriend */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":995:1009   */\n      swap1\n      iszero\n        /* \"#utility.yul\":988:1010   */\n      iszero\n        /* \"#utility.yul\":970:1011   */\n      dup2\n      mstore\n        /* \"#utility.yul\":958:960   */\n      0x20\n        /* \"#utility.yul\":943:961   */\n      add\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":536:596  mapping(address => mapping(address => bool)) public isFriend */\n      tag_10\n        /* \"#utility.yul\":830:1017   */\n      jump\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":622:1133  function examples() external {... */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n    tag_19:\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":720:730  msg.sender */\n      caller\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":711:719  balances */\n      0x00\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":711:731  balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":734:737  123 */\n      0x7b\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":711:737  balances[msg.sender] = 123 */\n      dup1\n      dup3\n      sstore\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":802:822  balances[address(1)] */\n      sload(0xada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d)\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":734:737  123 */\n      swap1\n      swap3\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":802:822  balances[address(1)] */\n      swap1\n      swap2\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":922:925  456 */\n      0x01c8\n      swap2\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":898:925  balances[msg.sender] += 456 */\n      tag_21\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":922:925  456 */\n      dup4\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":734:737  123 */\n      dup7\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":898:925  balances[msg.sender] += 456 */\n      tag_22\n      jump\t// in\n    tag_21:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":999:1009  msg.sender */\n      caller\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":990:998  balances */\n      0x00\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":990:1010  balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":983:1010  delete balances[msg.sender] */\n      dup4\n      swap1\n      sstore\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":1119:1123  true */\n      0x01\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":1081:1101  isFriend[msg.sender] */\n      dup1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":1110:1114  this */\n      address\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":1081:1116  isFriend[msg.sender][address(this)] */\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":1081:1123  isFriend[msg.sender][address(this)] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"solidity\\xe6\\x98\\xa0\\xe5\\xb0\\x84.sol\":622:1133  function examples() external {... */\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_23:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_26\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_26:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_8:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_28:\n        /* \"#utility.yul\":343:372   */\n      tag_29\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_23\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:825   */\n    tag_14:\n        /* \"#utility.yul\":633:639   */\n      0x00\n        /* \"#utility.yul\":641:647   */\n      dup1\n        /* \"#utility.yul\":694:696   */\n      0x40\n        /* \"#utility.yul\":682:691   */\n      dup4\n        /* \"#utility.yul\":673:680   */\n      dup6\n        /* \"#utility.yul\":669:692   */\n      sub\n        /* \"#utility.yul\":665:697   */\n      slt\n        /* \"#utility.yul\":662:714   */\n      iszero\n      tag_32\n      jumpi\n        /* \"#utility.yul\":710:711   */\n      0x00\n        /* \"#utility.yul\":707:708   */\n      dup1\n        /* \"#utility.yul\":700:712   */\n      revert\n        /* \"#utility.yul\":662:714   */\n    tag_32:\n        /* \"#utility.yul\":733:762   */\n      tag_33\n        /* \"#utility.yul\":752:761   */\n      dup4\n        /* \"#utility.yul\":733:762   */\n      tag_23\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":723:762   */\n      swap2\n      pop\n        /* \"#utility.yul\":781:819   */\n      tag_34\n        /* \"#utility.yul\":815:817   */\n      0x20\n        /* \"#utility.yul\":804:813   */\n      dup5\n        /* \"#utility.yul\":800:818   */\n      add\n        /* \"#utility.yul\":781:819   */\n      tag_23\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":771:819   */\n      swap1\n      pop\n        /* \"#utility.yul\":565:825   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1022:1247   */\n    tag_22:\n        /* \"#utility.yul\":1062:1065   */\n      0x00\n        /* \"#utility.yul\":1093:1094   */\n      dup3\n        /* \"#utility.yul\":1089:1095   */\n      not\n        /* \"#utility.yul\":1086:1087   */\n      dup3\n        /* \"#utility.yul\":1083:1096   */\n      gt\n        /* \"#utility.yul\":1080:1216   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":1138:1148   */\n      0x4e487b71\n        /* \"#utility.yul\":1133:1136   */\n      0xe0\n        /* \"#utility.yul\":1129:1149   */\n      shl\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1119:1150   */\n      mstore\n        /* \"#utility.yul\":1173:1177   */\n      0x11\n        /* \"#utility.yul\":1170:1171   */\n      0x04\n        /* \"#utility.yul\":1163:1178   */\n      mstore\n        /* \"#utility.yul\":1201:1205   */\n      0x24\n        /* \"#utility.yul\":1198:1199   */\n      0x00\n        /* \"#utility.yul\":1191:1206   */\n      revert\n        /* \"#utility.yul\":1080:1216   */\n    tag_37:\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      add\n      swap1\n        /* \"#utility.yul\":1022:1247   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122047863098842d017912231fbeeaa50a9b40e4c9bf309a153681b1e648c50d125264736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061020e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806327e235e3146100465780632da5d42e14610079578063335d00c2146100b7575b600080fd5b61006661005436600461015d565b60006020819052908152604090205481565b6040519081526020015b60405180910390f35b6100a761008736600461017f565b600160209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610070565b6100bf6100c1565b005b336000908152602081905260408120607b8082557fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d54909290916101c89161010983866101b2565b9091555050336000908152602081815260408083208390556001808352818420308552909252909120805460ff191690911790555050565b80356001600160a01b038116811461015857600080fd5b919050565b60006020828403121561016f57600080fd5b61017882610141565b9392505050565b6000806040838503121561019257600080fd5b61019b83610141565b91506101a960208401610141565b90509250929050565b600082198211156101d357634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122047863098842d017912231fbeeaa50a9b40e4c9bf309a153681b1e648c50d125264736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x2DA5D42E EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0x335D00C2 EQ PUSH2 0xB7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x17F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x70 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7B DUP1 DUP3 SSTORE PUSH32 0xADA5013122D395BA3C54772283FB069B10426056EF8CA54750CB9BB552A59E7D SLOAD SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x1C8 SWAP2 PUSH2 0x109 DUP4 DUP7 PUSH2 0x1B2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x1 DUP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 ADDRESS DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x178 DUP3 PUSH2 0x141 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B DUP4 PUSH2 0x141 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9 PUSH1 0x20 DUP5 ADD PUSH2 0x141 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE DUP7 ADDRESS SWAP9 DUP5 0x2D ADD PUSH26 0x12231FBEEAA50A9B40E4C9BF309A153681B1E648C50D12526473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "254:886:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balances_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@examples_65": {
									"entryPoint": 193,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isFriend_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1249:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:1",
														"type": ""
													}
												],
												"src": "383:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "652:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "698:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "707:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "700:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "700:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "700:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "673:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "682:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "669:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "694:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "665:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:32:1"
															},
															"nodeType": "YulIf",
															"src": "662:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "723:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "733:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "723:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "771:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "815:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "800:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "781:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "771:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "610:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "621:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "633:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "641:6:1",
														"type": ""
													}
												],
												"src": "565:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "925:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "935:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "947:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "935:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "977:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "995:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "995:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "988:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "894:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "905:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "916:4:1",
														"type": ""
													}
												],
												"src": "830:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1105:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1133:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1138:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1129:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1129:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1119:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1119:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1119:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1170:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1173:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1163:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1163:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1163:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1198:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1201:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1191:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1191:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1191:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1086:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1093:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1089:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1089:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1083:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:13:1"
															},
															"nodeType": "YulIf",
															"src": "1080:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1225:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1236:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1239:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1053:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1056:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1062:3:1",
														"type": ""
													}
												],
												"src": "1022:225:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806327e235e3146100465780632da5d42e14610079578063335d00c2146100b7575b600080fd5b61006661005436600461015d565b60006020819052908152604090205481565b6040519081526020015b60405180910390f35b6100a761008736600461017f565b600160209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610070565b6100bf6100c1565b005b336000908152602081905260408120607b8082557fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d54909290916101c89161010983866101b2565b9091555050336000908152602081815260408083208390556001808352818420308552909252909120805460ff191690911790555050565b80356001600160a01b038116811461015857600080fd5b919050565b60006020828403121561016f57600080fd5b61017882610141565b9392505050565b6000806040838503121561019257600080fd5b61019b83610141565b91506101a960208401610141565b90509250929050565b600082198211156101d357634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122047863098842d017912231fbeeaa50a9b40e4c9bf309a153681b1e648c50d125264736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x2DA5D42E EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0x335D00C2 EQ PUSH2 0xB7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x17F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x70 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7B DUP1 DUP3 SSTORE PUSH32 0xADA5013122D395BA3C54772283FB069B10426056EF8CA54750CB9BB552A59E7D SLOAD SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x1C8 SWAP2 PUSH2 0x109 DUP4 DUP7 PUSH2 0x1B2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x1 DUP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 ADDRESS DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x178 DUP3 PUSH2 0x141 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B DUP4 PUSH2 0x141 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9 PUSH1 0x20 DUP5 ADD PUSH2 0x141 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE DUP7 ADDRESS SWAP9 DUP5 0x2D ADD PUSH26 0x12231FBEEAA50A9B40E4C9BF309A153681B1E648C50D12526473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "254:886:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;529:25:1;;;517:2;502:18;364:40:0;;;;;;;;536:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;995:14:1;;988:22;970:41;;958:2;943:18;536:60:0;830:187:1;622:511:0;;;:::i;:::-;;;720:10;711:8;:20;;;;;;;;;;734:3;711:26;;;802:20;;734:3;;802:20;;922:3;;898:27;922:3;734;898:27;:::i;:::-;;;;-1:-1:-1;;999:10:0;990:8;:20;;;;;;;;;;;983:27;;;1119:4;1081:20;;;;;;1110:4;1081:35;;;;;;;;:42;;-1:-1:-1;;1081:42:0;;;;;;-1:-1:-1;;622:511:0:o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;565:260::-;633:6;641;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;:::-;723:39;;781:38;815:2;804:9;800:18;781:38;:::i;:::-;771:48;;565:260;;;;;:::o;1022:225::-;1062:3;1093:1;1089:6;1086:1;1083:13;1080:136;;;1138:10;1133:3;1129:20;1126:1;1119:31;1173:4;1170:1;1163:15;1201:4;1198:1;1191:15;1080:136;-1:-1:-1;1232:9:1;;1022:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "105200",
								"executionCost": "153",
								"totalCost": "105353"
							},
							"external": {
								"balances(address)": "2489",
								"examples()": "58986",
								"isFriend(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 254,
									"end": 1140,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 1140,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047863098842d017912231fbeeaa50a9b40e4c9bf309a153681b1e648c50d125264736f6c634300080f0033",
									".code": [
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "27E235E3"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "2DA5D42E"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "335D00C2"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1140,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 364,
											"end": 404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 404,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 536,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1010,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 830,
											"end": 1017,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 622,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 622,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 622,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 622,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 622,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 622,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 622,
											"end": 1133,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 622,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 711,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 711,
											"end": 731,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 734,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "7B"
										},
										{
											"begin": 711,
											"end": 737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 711,
											"end": 737,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "ADA5013122D395BA3C54772283FB069B10426056EF8CA54750CB9BB552A59E7D"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 734,
											"end": 737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 734,
											"end": 737,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 802,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 922,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "1C8"
										},
										{
											"begin": 922,
											"end": 925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 898,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 922,
											"end": 925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 734,
											"end": 737,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 898,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 898,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 898,
											"end": 925,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 898,
											"end": 925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 898,
											"end": 925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 898,
											"end": 925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1009,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 990,
											"end": 998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1010,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1010,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1081,
											"end": 1101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1101,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1101,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1101,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1114,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1116,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1116,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1081,
											"end": 1123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1123,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 622,
											"end": 1133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 825,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 565,
											"end": 825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 694,
											"end": 696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 673,
											"end": 680,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 669,
											"end": 692,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 665,
											"end": 697,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 662,
											"end": 714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 662,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 662,
											"end": 714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 710,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 712,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 662,
											"end": 714,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 662,
											"end": 714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 733,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 752,
											"end": 761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 733,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 733,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 733,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 733,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 723,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 800,
											"end": 818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 781,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 781,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 771,
											"end": 819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 771,
											"end": 819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 565,
											"end": 825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 565,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1247,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1022,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1096,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1216,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1080,
											"end": 1216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1133,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1129,
											"end": 1149,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1177,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1170,
											"end": 1171,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1205,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1198,
											"end": 1199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1216,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1080,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"solidity映射.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"examples()": "335d00c2",
							"isFriend(address,address)": "2da5d42e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"examples\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFriend\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity\\u6620\\u5c04.sol\":\"Mapping\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity\\u6620\\u5c04.sol\":{\"keccak256\":\"0xfd239d1363381cf9207e0668061b4587e319bdf43f4481ff4cdf8d66ae1c48fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2380b8bf40fd28e05c66331253430d4e3307464ac61467eb2a38c318d5a154fb\",\"dweb:/ipfs/QmSozqdHjzVHcASuwRM6eRXqJUDA8hAZvaQiU5mdrMebY4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "solidity映射.sol:Mapping",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 11,
								"contract": "solidity映射.sol:Mapping",
								"label": "isFriend",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 13,
								"contract": "solidity映射.sol:Mapping",
								"label": "bal",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> solidity映射.sol:18:9:\n   |\n18 |         uint bal = balances[msg.sender];\n   |         ^^^^^^^^\nNote: The shadowed declaration is here:\n  --> solidity映射.sol:13:5:\n   |\n13 |     uint bal;\n   |     ^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 613,
						"file": "solidity映射.sol",
						"message": "The shadowed declaration is here:",
						"start": 605
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 756,
					"file": "solidity映射.sol",
					"start": 748
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> solidity映射.sol:18:9:\n   |\n18 |         uint bal = balances[msg.sender];\n   |         ^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 756,
					"file": "solidity映射.sol",
					"start": 748
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> solidity映射.sol:19:9:\n   |\n19 |         uint bal2 = balances[address(1)];  //返回0\n   |         ^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 799,
					"file": "solidity映射.sol",
					"start": 790
				},
				"type": "Warning"
			}
		],
		"sources": {
			"solidity映射.sol": {
				"ast": {
					"absolutePath": "solidity映射.sol",
					"exportedSymbols": {
						"Mapping": [
							66
						]
					},
					"id": 67,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Mapping",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "Mapping",
							"nameLocation": "263:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 5,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "396:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "364:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "372:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "364:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "383:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2da5d42e",
									"id": 11,
									"mutability": "mutable",
									"name": "isFriend",
									"nameLocation": "588:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "536:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 10,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "544:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "536:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 9,
											"keyType": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "563:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "555:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "574:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "bal",
									"nameLocation": "610:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "605:8:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "605:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "651:482:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 16,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 19,
														"indexExpression": {
															"expression": {
																"id": 17,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "720:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "720:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "711:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313233",
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "734:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_123_by_1",
															"typeString": "int_const 123"
														},
														"value": "123"
													},
													"src": "711:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "711:26:0"
											},
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "753:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 64,
														"src": "748:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 23,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "748:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 29,
												"initialValue": {
													"baseExpression": {
														"id": 25,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "759:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 28,
													"indexExpression": {
														"expression": {
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "768:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "768:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "759:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "748:31:0"
											},
											{
												"assignments": [
													31
												],
												"declarations": [
													{
														"constant": false,
														"id": 31,
														"mutability": "mutable",
														"name": "bal2",
														"nameLocation": "795:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 64,
														"src": "790:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 30,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "790:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"baseExpression": {
														"id": 32,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "802:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 37,
													"indexExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "819:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "811:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 33,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "811:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "811:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "802:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "790:32:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 39,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "898:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 42,
														"indexExpression": {
															"expression": {
																"id": 40,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "907:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "907:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "898:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "343536",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "922:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_456_by_1",
															"typeString": "int_const 456"
														},
														"value": "456"
													},
													"src": "898:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "898:27:0"
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "983:27:0",
													"subExpression": {
														"baseExpression": {
															"id": 46,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "990:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 49,
														"indexExpression": {
															"expression": {
																"id": 47,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "999:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "999:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "990:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "983:27:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 52,
																"name": "isFriend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1081:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 59,
															"indexExpression": {
																"expression": {
																	"id": 53,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1090:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1090:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1081:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 60,
														"indexExpression": {
															"arguments": [
																{
																	"id": 57,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1110:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Mapping_$66",
																		"typeString": "contract Mapping"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Mapping_$66",
																		"typeString": "contract Mapping"
																	}
																],
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1102:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 55,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1102:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1102:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1081:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1119:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1081:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1081:42:0"
											}
										]
									},
									"functionSelector": "335d00c2",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "examples",
									"nameLocation": "631:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "639:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:0:0"
									},
									"scope": 66,
									"src": "622:511:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 67,
							"src": "254:886:0",
							"usedErrors": []
						}
					],
					"src": "129:1011:0"
				},
				"id": 0
			}
		}
	}
}